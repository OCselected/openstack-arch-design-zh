<?xml version="1.0" ?><section version="5.0" xml:id="operational-considerations-storage-focus" xml:lang="zh" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink">
    <?dbhtml stop-chunking?>
    <title>运营因素</title>
    <para>对于通用型云，运维的因素会影响到设计的选择，且运维人员在大型的安装维护云环境面临着巨大的任务。</para>
    <variablelist>
      <varlistentry>
       <term>维护任务：</term>
        <listitem>
            <para>存储的解决方案需要考虑存储的维护以及其对底层负载的影响。</para>
        </listitem>
      </varlistentry>
      <varlistentry>
       <term>可靠性和可用性：</term>
        <listitem>
            <para>可靠性和可用性依赖于广域网的可用性以及服务提供商采取的预防措施的级别。</para>
        </listitem>
      </varlistentry>
      <varlistentry>
       <term>灵活性：</term>
        <listitem>
            <para>组织需要有选择off-premise和on-premise云存储属性的灵活性。此概念依赖于相关的决策条件，它可以互补，会在初始&gt;时有直接的成本节约潜力。举例，持续的维护、灾难恢复、安全、记录保留规定、法规以及规则。</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>在对存储资源有非常高要求的云环境中，确保在环境中安装了监控和警报服务并且将它们进行配置以提供存储系统实时的健康状态和性能状态的信息，是非常之重要的。使用集成的管理控制台，或者能够将 SNMP 数据可视化的面板程序，能够帮助发现和解决存储集群中
可能出现的问题。</para>
    <para>存储型的云设计需要包括：</para>
    <itemizedlist>
        <listitem>
            <para>监测物理硬件资源。</para>
        </listitem>
        <listitem>
            <para>监测诸如温度和湿度等的环境信息。</para>
        </listitem>
        <listitem>
            <para>监测诸如可用存储空间、内存和 CPU 等存储资源信息。</para>
        </listitem>
        <listitem>
            <para>监测高级的存储性能数据，以确保存储系统正常运转。</para>
        </listitem>
        <listitem>
            <para>监测网络资源情况，关注可能影响存储访问的网络服务中断问题。</para>
        </listitem>
        <listitem>
            <para>日志集中收集</para>
        </listitem>
        <listitem>
            <para>日志分析能力。</para>
        </listitem>
        <listitem>
            <para>票务系统(或者与其它票务系统的集成)以跟踪问题。</para>
        </listitem>
        <listitem>
            <para>对负责团队的警报和通知，或者能够在存储出现问题时能够修复问题的自动化系统。</para>
        </listitem>
        <listitem>
            <para>配备有网络运营中心(NOC)员工并保持工作状态以解决问题。</para>
        </listitem>
    </itemizedlist>

    <section xml:id="management-efficiency">
      <title>管理效率</title>
    <para>运营人员会经常需要替换失效的驱动器或者节点，并且不断进行存储硬件的维护工作。</para>
    <para>准备和配置新增或者升级的存储，是另外一个关于管理存储资源的重要考虑因素。方便地部署、配置以及管理存储硬件的能力，能够造就一个容易管理的解决方案。这同样也利用了能够将整个解决方案中的其它部分组件自动化的管理系统。例如，复制、保管、数据备份和恢复。</para>
    </section>

    <section xml:id="application-awareness">
      <title>应用的可知性</title>
    <para>当设计在云中利用存储解决方案的应用时，需要将应用设计成为能够觉察到底层的存储子系统的存在以及其可用的特性。</para>
    <para>当创建一个需要副本数据的应用时，我们建议将应用设计成为能够检测副本复制是否是底层存储子系统的原生特性。在复制功能不是底层存储系统的特性的情况下，才将应用设计成为自身能够提供副本复制服务。一个被设计为能够觉察到底层存储系统的应用，同样可以在很大范围的基础设施中部署，并且依然拥有一些最基本的行为，而不管底层的基础设施有什么不同。</para>
    </section>

    <section xml:id="fault-tolerance-and-availability">
      <title>容错和可用性</title>
    <para>在 OpenStack 云中为存储系统的容错和可用性进行设计，对于块存储和对象存储服务来说，是有很大的不同的。对象存储服务具&gt;有一致性以及区块容错，能够作为应用的功能。因此，它并不依赖于硬件 RAID 控制器提供的物理磁盘冗余。与此相对的，块存储资源节点
通常都配备有高级的 RAID 控制器以及高性能的磁盘，被设计为能够在硬件层面上提供容错。</para>

      <section xml:id="block-storage-fault-tolerance-and-availability">
          <title>块存储的容错和可用性</title>
       <para>块存储资源节点通常都配备有高级的 RAID 控制器以及高性能的磁盘，被设计为能够在硬件层面上提供容错。</para>
       <para>在应用要求发挥块存储设备的极端性能的场景下，我们建议您部署高性能的存储方案，例如SSD 磁盘驱动器或者闪存存储系统。</para>
        <para>在对块存储具有极端需求的环境下，我们建议利用多个存储池所带来的好处。在这种场景中，每个设备池，在池中的所有硬件节点上，必须都具有相似的硬件设计以及磁盘配置。这使得设计能够为应用提供到多个块存储池的访问，每个存储池都有其自身的冗余、可用性
和性能特点。部署多个存储池时，对负责在资源节点上准备存储的块存储调度器的影响，也是一个重要的考虑因素。确保应用能够将其存储卷分散到不同的区域中，每个区域具有其自身的网络、电源以及冷却基础设施，能够给予租户建立具有容错性应用的能力。该应用会被分布到多个可用区域中。</para>
      <para>在块存储资源节点之外，为 API 以及相关的负责准备存储和提供到存储的访问的服务的高可用性和冗余进行设计也非常重要。我们建议设计中包含一个硬件或者软件的负载均衡器层，以实现相关 REST API 服务的高可用性，从而实现提供不中断的服务。某些情况下，
可能还需要部署一个额外的负载均衡层，以提供到后端数据库服务的访问，该后端数据库负责提供以及保存块存储卷的状态信息。我们同样建议设计一个高可用的数据库解决方案来存放块存储的数据库。当前有许多的高可用数据库的解决方案，比如说 Galera 和 MariaDB，能够被用以帮助保持数据库服务在线，以提供不间断的访问服务，保证租户能够管理块存储卷。</para>
      <para>在对块存储具有极端需求的云环境中，网络的架构需要考虑东西向的带宽流量，这些带宽是实例使用可用的存储资源所必需的。所选择的网络设备必须支持巨型帧以传输大块的数据。某些情况下，可能还需要创建额外的后端存储网络，专用于为实例和块存储资源之间提供网络连接，来保证没有对于网络资源的争抢。</para>
      </section>
      <section xml:id="object-storage-fault-tolerance-and-availability">
          <title>对象存储容错和可用性</title>
        <para>虽然一致性和区块容错性都是对象存储服务的内生特性，对整个存储架构进行设计，以确保要实施的系统能够满足这些目标依然还是很重要的。OpenStack 对象存储服务将特定数量的数据副本作为对象存放与资源节点上。这些副本分布在整个集群之中，基于存在于集群
中所有节点上的一致性哈希环。</para>
        <para>对象存储系统必须设计得拥有充足的区域提供法定数量，为所定义的复制份数。举个例子，在一个swift集群中配置了三份复制，那么建议区域数量是5。当然，也可以部署时少于这个数，但是这有数据不可用的风险以及API请求无法应答。基于这个原因，在对象存储系
统中要确保正确的数量。</para>
      <para>每个对象存储区域须包含到其自身的可用区域里。每个可用区域须拥有独立的访问网络、电力和制冷等基础设施，确保访问数据不会中断。另外，每个可用区域须服务于对象存储池代理服务，而代理服务提供访问存放在对象节点的数据。在每个region的对象代理应充分
利用本地的读写，所以尽可能的访问本地存储资源。我们建议在上游的负载均衡的部署要确保代理服务是分布在不同的区域的。在一些情况下，有必要使用第三方的解决方案来处理跨地域分布式服务。</para>
      <para>对象存储集群内的区域是一个逻辑上的划分。一个区域可以是下列情形中的任意之一：</para>
        <itemizedlist>
          <listitem>
            <para>单个节点上的一块磁盘</para>
          </listitem>
          <listitem>
            <para>每节点就是一个zone</para>
          </listitem>
          <listitem>
            <para>Zone是多个节点的集合</para>
          </listitem>
          <listitem>
            <para>多个机柜</para>
          </listitem>
          <listitem>
            <para>多数据中心</para>
          </listitem>
        </itemizedlist>
      <para>决定合适的区域设计的关键是对象存储集群的扩展，还能同时提供可靠和冗余的存储系统。进一步讲，也许还需要根据不同的需求配置存储的策略，这些策略包括副本，保留以及其它在特定区域会严重影响到存储设计的因素。</para>
      </section>
    </section>

    <section xml:id="scaling-storage-services">
      <title>扩展存储服务</title>
    <para>将块存储和对象存储服务相比较，增加存储容量和带宽是完全不同的流程。增加块存储的容量是一个相对简单的过程，增加对象存储系统的容量和带宽是一个复杂的任务，需要经过精心的规划和周全的考虑。</para>
      <section xml:id="scaling-block-storage">
        <title>扩展块存储</title>
      <para>块存储池增加存储容量的升级较简单而且毋须中断整个块存储服务。节点添加到池中仅通过简单的安装和配置合适的软硬件，然后允许节点通过消息总线报告给对应的池即可。这是因为块存储节点报告给调度器服务表明他们可用。一旦节点处于在线状态，可用的租户立马就可以使用它的存储资源。</para>
      <para>在一些情形下，来自实例对块存储的需求会耗尽可用的网络带宽。因此，设计网络基础设施时，考虑到如此的块存储资源使用一定得很容易的增加容量和带宽。这通常涉及到使用动态路由协议或者是高级网络解决方案允许轻松添加下游设备以增加容量。无论是前端存储网络设计还是后端存储网络设计都得围绕着快速和容易添加容量和带宽的能力来展开。</para>
      </section>
      <section xml:id="scaling-object-storage">
        <title>扩展对象存储</title>
      <para>为对象存储集群增加后端容量需要谨慎的规划和考虑。在设计阶段，决定最大partition power非常重要，这由对象存储服务所需要，它直接决定可以提供最大数量的分区。对象存储分发数据到所有的可用存储上，但是一个分区不可以再分到一块磁盘之外的地方，所以
分区的最大数量只能是磁盘的数量。</para>
      <para>例如，一个系统开始使用单个磁盘，partition power是3，那么可以有8(2^3) 个分区。增加第二块磁盘意味着每块将拥有4个分区。一盘一分区的限制意味着此系统不可能拥有超过8块磁盘，它的扩展性受限。因此，一个系统开始时使用单个磁盘，且partition power是10的话可以使用1024(2^10)个磁盘。</para>
      <para>为系统的后端存储增加了容量后，分区映射会带来数据重新分发到存储节点，在一些情况下，这些复制会带来超大的数据集合，在此种情况下，建议使用后端复制链接，它也不会阻断租户访问数据。</para>
      <para>当越来越多的租户开始访问对象存储集群的数据，他们的数据开始不断的增长时，就有必要为服务增加前端带宽以应对不断的访问需求。为对象存储集群增加前端带宽要谨慎规划，设计对象存储代理供租户访问数据使用，为代理层设计高可用解决方案且可轻松扩展等等
，建议设计一前端负载均衡层，为租户和最终消费者提供更加可靠的访问数据方式，这个负载均衡层可以是分发到跨区域，跨region，甚至是跨地域，这要视实际对地理位置解决方案的需求而定。</para>
      <para>一些情况下，要求给代理服务和存储节点之间的网络资源服务增加带宽和容量。基于这个原因，用于访问存储节点和代理服务的网络架构要设计的具有扩展性。</para>
      </section>
    </section>
</section>