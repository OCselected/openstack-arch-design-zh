# 
# Translators:
# apporc watson <appleorchard2000@gmail.com>, 2015
# Hunt Xu <mhuntxu@gmail.com>, 2015
# johnwoo_lee <lijiangsheng1@gmail.com>, 2015
# Hunt Xu <mhuntxu@gmail.com>, 2015
# 颜海峰 <yanheven@gmail.com>, 2015
msgid ""
msgstr ""
"Project-Id-Version: OpenStack Manuals\n"
"POT-Creation-Date: 2015-03-13 06:01+0000\n"
"PO-Revision-Date: 2015-03-13 08:39+0000\n"
"Last-Translator: johnwoo_lee <lijiangsheng1@gmail.com>\n"
"Language-Team: Chinese (China) (http://www.transifex.com/projects/p/openstack-manuals-i18n/language/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ./doc/arch-design/ch_specialized.xml7(title)
msgid "Specialized cases"
msgstr "特殊场景"

#: ./doc/arch-design/ch_specialized.xml9(para)
msgid ""
"Although most OpenStack architecture designs fall into one of the seven "
"major scenarios outlined in other sections (compute focused, network "
"focused, storage focused, general purpose, multi-site, hybrid cloud, and "
"massively scalable), there are a few other use cases that are unique enough "
"they can't be neatly categorized into one of the other major sections. This "
"section discusses some of these unique use cases with some additional "
"details and design considerations for each use case:"
msgstr "尽管大多数的 OpenStack 架构设计都能归类于其它章节中描述的七种主要场景(计算密集型、网络密集型、存储密集型、通用设计、多站点、混合云以及可大规模扩展)，仍然存在其他一些场景独特到无法归类入主要场景中的任何一个之中。本章将讨论一些这种特殊的应用场景，以及每种场景的细节和设计的考虑因素。"

#: ./doc/arch-design/ch_specialized.xml20(para)
msgid ""
"<link linkend=\"specialized-networking-example\">Specialized "
"Networking</link>: This describes running networking-oriented software that "
"may involve reading packets directly from the wire or participating in "
"routing protocols."
msgstr "<link linkend=\"specialized-networking-example\">特殊的网络应用</link>：此节介绍运行可能涉及直接从网线上读取数据包或者参与路由协议的面向联网的软件。"

#: ./doc/arch-design/ch_specialized.xml30(para)
msgid ""
"<link linkend=\"software-defined-networking-sdn\">Software-defined "
"networking (SDN)</link>: This use case details both running an SDN "
"controller from within OpenStack as well as participating in a software-"
"defined network."
msgstr "<link linkend=\"software-defined-networking-sdn\">软件定义网络(SDN)</link>：这种场景详细介绍了在 OpenStack 之中运行 SDN 控制器以及 OpenStack 加入到一个软件定义的网络中的情况。"

#: ./doc/arch-design/ch_specialized.xml39(para)
msgid ""
"<link linkend=\"desktop-as-a-service\"><glossterm>Desktop-"
"as-a-Service</glossterm></link>: This is for organizations that want to run "
"a virtualized desktop environment on a cloud. This can apply to private or "
"public clouds."
msgstr "<link linkend=\"desktop-as-a-service\"><glossterm>桌面即服务</glossterm></link>：这是为希望在云环境中运行虚拟桌面环境的组织所准备的，在私有云以及公有云的情景下都可用。"

#: ./doc/arch-design/ch_specialized.xml48(para)
msgid ""
"<link linkend=\"arch-guide-openstack-on-openstack\">OpenStack on "
"OpenStack</link>: Some organizations are finding that it makes technical "
"sense to build a multi-tiered cloud by running OpenStack on top of an "
"OpenStack installation."
msgstr "<link linkend=\"arch-guide-openstack-on-openstack\">OpenStack 上的 OpenStack</link>：一些机构认为通过在一个 OpenStack 部署之上运行 OpenStack 的方式来构建多层次的云有其技术上的意义。"

#: ./doc/arch-design/ch_specialized.xml58(para)
msgid ""
"<link linkend=\"specialized-hardware\">Specialized hardware</link>: Some "
"highly specialized situations will require the use of specialized hardware "
"devices from within the OpenStack environment."
msgstr "<link linkend=\"specialized-hardware\">专门的硬件</link>：有一些非常特别的情况可能需要在 OpenStack 环境中使用专门的硬件设备。"

#: ./doc/arch-design/ch_massively_scalable.xml7(title)
msgid "Massively scalable"
msgstr "可大规模扩展的类型"

#: ./doc/arch-design/ch_massively_scalable.xml9(para)
msgid ""
"A massively scalable architecture is defined as a cloud implementation that "
"is either a very large deployment, such as one that would be built by a "
"commercial service provider, or one that has the capability to support user "
"requests for large amounts of cloud resources. An example would be an "
"infrastructure in which requests to service 500 instances or more at a time "
"is not uncommon. In a massively scalable infrastructure, such a request is "
"fulfilled without completely consuming all of the available cloud "
"infrastructure resources. While the high capital cost of implementing such a"
" cloud architecture makes it cost prohibitive and is only spearheaded by few"
" organizations, many organizations are planning for massive scalability "
"moving toward the future."
msgstr "一个可大规模扩展的架构被定义为如下形式的云架构实现：其要么是一个非常大规模的部署，例如商业性的服务提供商所建造的那种云架构；要么是一个拥有能够支持用户对大量云资源进行请求的能力的云架构。比如说一个在其中，即使是同时请求对 500 个或者以上数目的实例进行服务也并不罕见的基础设施，就是这样的一个例子。在一个可大规模扩展的基础设施中，这样子的请求甚至都不用完全消耗所有可用的云资源便可以被满足。虽然部署这样一个云架构的资金成本可能高到令人望而却步，因而只有少数的组织能够冲在最前面进行尝试，很多其他的组织也都在为未来做部署这种类型云架构的计划。"

#: ./doc/arch-design/ch_massively_scalable.xml22(para)
msgid ""
"A massively scalable OpenStack cloud design presents a unique set of "
"challenges and considerations. For the most part it is similar to a general "
"purpose cloud architecture, as it is built to address a non-specific range "
"of potential use cases or functions. Typically, it is rare that massively "
"scalable clouds are designed or specialized for particular workloads. Like "
"the general purpose cloud, the massively scalable cloud is most often built "
"as a platform for a variety of workloads. Massively scalable OpenStack "
"clouds are generally built as commercial public cloud offerings since single"
" private organizations rarely have the resources or need for this scale."
msgstr "可大规模扩展的 OpenStack 云的设计提出了一系列独特的挑战以及相关的考虑因素。这样一个云是用以服务不确定范围的潜在使用场景或者功能的，因此大多部分的考虑因素都与通用类型的云架构设计相类似。通常情况下，可大规模扩展的云为专门的负载工作进行设计和定制的情况是很少见的。一般来说，可大规模扩展的 OpenStack 云是作为商业性质的公有云服务产品构建的，因为单个私有组织很难得有这样多的资源或者如此规模的需求。"

#: ./doc/arch-design/ch_massively_scalable.xml34(para)
msgid ""
"Services provided by a massively scalable OpenStack cloud will include:"
msgstr "可大规模扩展类型的 OpenStack 云提供的服务包括："

#: ./doc/arch-design/ch_massively_scalable.xml38(para)
#: ./doc/arch-design/ch_generalpurpose.xml63(para)
msgid "Virtual-machine disk image library"
msgstr "虚拟机磁盘镜像库"

#: ./doc/arch-design/ch_massively_scalable.xml41(para)
#: ./doc/arch-design/ch_generalpurpose.xml66(para)
msgid "Raw block storage"
msgstr "Raw 块存储"

#: ./doc/arch-design/ch_massively_scalable.xml44(para)
#: ./doc/arch-design/ch_generalpurpose.xml69(para)
msgid "File or object storage"
msgstr "文件或对象存储"

#: ./doc/arch-design/ch_massively_scalable.xml47(para)
msgid "Firewall functionality"
msgstr "防火墙功能"

#: ./doc/arch-design/ch_massively_scalable.xml50(para)
msgid "Load balancing functionality"
msgstr "负载均衡功能"

#: ./doc/arch-design/ch_massively_scalable.xml53(para)
msgid "Private (non-routable) and public (floating) IP addresses"
msgstr "私有(不可路由到达)及公有(浮动) IP 地址"

#: ./doc/arch-design/ch_massively_scalable.xml57(para)
msgid "Virtualized network topologies"
msgstr "虚拟化网络拓扑"

#: ./doc/arch-design/ch_massively_scalable.xml60(para)
#: ./doc/arch-design/ch_generalpurpose.xml85(para)
msgid "Software bundles"
msgstr "软件集合"

#: ./doc/arch-design/ch_massively_scalable.xml63(para)
msgid "Virtual compute resources"
msgstr "虚拟计算资源"

#: ./doc/arch-design/ch_massively_scalable.xml66(para)
msgid ""
"Like a general purpose cloud, the instances deployed in a massively scalable"
" OpenStack cloud will not necessarily use any specific aspect of the cloud "
"offering (compute, network, or storage). As the cloud grows in scale, the "
"scale of the number of workloads can cause stress on all of the cloud "
"components. Additional stresses are introduced to supporting infrastructure "
"including databases and message brokers. The architecture design for such a "
"cloud must account for these performance pressures without negatively "
"impacting user experience."
msgstr "如同通用型的云，在可大规模扩展的 OpenStack 云中部署的实例并不一定使用云服务的特定某一个方面的资源(计算、网络或者存储)。随着云规模的扩大，云上所支撑的负载的增长可能对所有的云组件都造成一定压力。额外的压力还可能来自需要对诸如数据库和消息代理这类型的基础设施进行支持。为这样一种云进行的架构设计必须考虑如何到如何处理这些性能压力，并且不对用户体验造成负面的影响。"

#: ./doc/arch-design/ch_network_focus.xml7(title)
msgid "Network focused"
msgstr "网络型"

#: ./doc/arch-design/ch_network_focus.xml9(para)
msgid ""
"All OpenStack deployments are dependent, to some extent, on network "
"communication in order to function properly due to a service-based nature. "
"In some cases, however, use cases dictate that the network is elevated "
"beyond simple infrastructure. This chapter is a discussion of architectures "
"that are more reliant or focused on network services. These architectures "
"are heavily dependent on the network infrastructure and need to be "
"architected so that the network services perform and are reliable in order "
"to satisfy user and application requirements."
msgstr "由于其基于服务的本质，所有的 OpenStack 部署，在一定程度上都依赖于网络通信才能够正常工作。然而，在某些情况下，用例方案决定了网络服务比其它初级的基础设施更为重要。本章讨论了更依赖或者更关注网络服务的架构设计。这类型架构十分依赖于网络基础设施，并且需要被仔细架构以使得网络服务正常工作且可靠，从而满足用户和应用的要求。"

#: ./doc/arch-design/ch_network_focus.xml19(para)
msgid "Some possible use cases include:"
msgstr "可能的用例方案包括："

#: ./doc/arch-design/ch_network_focus.xml22(term)
msgid "Content delivery network"
msgstr "内容分发网络"

#: ./doc/arch-design/ch_network_focus.xml24(para)
msgid ""
"This could include streaming video, photographs or any other cloud based "
"repository of data that is distributed to a large number of end users. Mass "
"market streaming video will be very heavily affected by the network "
"configurations that would affect latency, bandwidth, and the distribution of"
" instances. Not all video streaming is consumer focused. For example, "
"multicast videos (used for media, press conferences, corporate "
"presentations, web conferencing services, and so on) can also utilize a "
"content delivery network. Content delivery will be affected by the location "
"of the video repository and its relationship to end users. Performance is "
"also affected by network throughput of the backend systems, as well as the "
"WAN architecture and the cache methodology."
msgstr "这包括分发至大数量终端用户的流视频、相片以及其它任何云数据仓库。影响延迟、带宽以及实例分布的网络配置将在很大程度上影响大规模的流视频传输。并非所有的视频流都是关注用户的。例如多播视频（用于媒体、记者招待会、集团演讲、web 会议服务等等）也能够使用内容分发网络。内容分发受视频仓库的物理位置以及其与终端用户的关系所影响。性能也受后端系统的网络吞吐量，以及 WAN 架构和缓存方法的影响。"

#: ./doc/arch-design/ch_network_focus.xml43(term)
msgid "Network management functions"
msgstr "网络管理功能"

#: ./doc/arch-design/ch_network_focus.xml45(para)
msgid ""
"A cloud that provides network service functions would be built to support "
"the delivery of back-end network services such as DNS, NTP or SNMP and would"
" be used by a company for internal network management."
msgstr "用户建立起一个提供网络服务功能的云以支持诸如 DNS、NTP 或者 SNMP 等的后端网络服务的提供，用于公司内部的网络管理。"

#: ./doc/arch-design/ch_network_focus.xml53(term)
msgid "Network service offerings"
msgstr "网络服务提供"

#: ./doc/arch-design/ch_network_focus.xml55(para)
msgid ""
"A cloud can be used to run customer facing network tools to support "
"services. For example, VPNs, MPLS private networks, GRE tunnels and others."
msgstr "云能够被用以运行面向客户的网络工具以实现对客户的服务。例如 VPN、MPLS 私有网络、GRE 隧道等等。"

#: ./doc/arch-design/ch_network_focus.xml62(term)
msgid "Web portals or web services"
msgstr "web 门户或 web 服务"

#: ./doc/arch-design/ch_network_focus.xml64(para)
msgid ""
"Web servers are a common application for cloud services and we recommend an "
"understanding of the network requirements. The network will need to be able "
"to scale out to meet user demand and deliver webpages with a minimum of "
"latency. Internal east-west and north-south network bandwidth must be "
"considered depending on the details of the portal architecture."
msgstr "web 服务器对于云服务来说是一个常见的应用，我们建议对于网络需求要有一定的理解。网络必须能够横向扩展以满足用户需求并以最小延迟分发网页。必须根据门户架构的细节，对内部东西向和南北向的网络带宽进行考虑。"

#: ./doc/arch-design/ch_network_focus.xml75(term)
msgid "High speed and high volume transactional systems"
msgstr "高速及大量数据的事务性系统"

#: ./doc/arch-design/ch_network_focus.xml77(para)
msgid ""
"These types of applications are very sensitive to network configurations. "
"Examples include many financial systems, credit card transaction "
"applications, trading and other extremely high volume systems. These systems"
" are sensitive to network jitter and latency. They also have a high volume "
"of both east-west and north-south network traffic that needs to be balanced "
"to maximize efficiency of the data delivery. Many of these systems have "
"large high performance database back ends that need to be accessed."
msgstr "此类型应用对于网络配置非常敏感。相关的例子包括很多金融系统、信用卡交易应用、交易系统以及其它需要传输非常大量数据的系统。这些系统对于网络的抖动及延迟都很敏感。同时这些系统也都有很大量的东西向及南北向网络流量，需要在这些流量中取得一个平衡使得数据传输的效率最大化。很多这类型的系统都需要连接至一个大型高性能的数据库后端。"

#: ./doc/arch-design/ch_network_focus.xml92(term)
#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml86(title)
msgid "High availability"
msgstr "高可用"

#: ./doc/arch-design/ch_network_focus.xml94(para)
msgid ""
"These types of use cases are highly dependent on the proper sizing of the "
"network to maintain replication of data between sites for high availability."
" If one site becomes unavailable, the extra sites will be able to serve the "
"displaced load until the original site returns to service. It is important "
"to size network capacity to handle the loads that are desired."
msgstr "此类应用十分依赖于恰当地改变网络大小以维护站点之间的数据复制，从而实现高可用。如果一个站点转变为不可用状态，其它的站点便能够取代该站点进行服务直到原先的站点恢复正常。恰当改变网络的大小使得能够处理所需要的负载就显得尤为重要了。"

#: ./doc/arch-design/ch_network_focus.xml105(term)
msgid "Big data"
msgstr "大数据"

#: ./doc/arch-design/ch_network_focus.xml107(para)
msgid ""
"Clouds that will be used for the management and collection of big data (data"
" ingest) will have a significant demand on network resources. Big data often"
" uses partial replicas of the data to maintain data integrity over large "
"distributed clouds. Other big data applications that require a large amount "
"of network resources are Hadoop, Cassandra, NuoDB, RIAK and other No-SQL and"
" distributed databases."
msgstr "用于管理以及收集大数据(数据获取)的云对网络资源有着显著的需求。大数据应用经常使用数据的部分副本以在大规模分布式云中维护数据完整性。其它需要大量的网络资源的大数据应用包括 Hadoop、Cassandra、NuoDB、RIAK 以及其它 No-SQL 和分布式的数据库。"

#: ./doc/arch-design/ch_network_focus.xml119(term)
msgid "Virtual desktop infrastructure (VDI)"
msgstr "虚拟桌面基础设施(VDI)"

#: ./doc/arch-design/ch_network_focus.xml121(para)
msgid ""
"This use case is very sensitive to network congestion, latency, jitter and "
"other network characteristics. Like video streaming, the user experience is "
"very important however, unlike video streaming, caching is not an option to "
"offset the network issues. VDI requires both upstream and downstream traffic"
" and cannot rely on caching for the delivery of the application to the end "
"user."
msgstr "此类应用对于网络拥挤、延迟、抖动以及其他网络特性都非常敏感。与视频流传输相似的是用户体验非常重要，然而，不同之处在于使用缓存不再是一个能够抵消网络问题的选项。VDI 同时需要上行与下行的网络流量并且不能够依靠缓存来让该应用给终端用户使用。"

#: ./doc/arch-design/ch_network_focus.xml133(term)
msgid "Voice over IP (VoIP)"
msgstr "IP 语音(VoIP)"

#: ./doc/arch-design/ch_network_focus.xml135(para)
msgid ""
"This is extremely sensitive to network congestion, latency, jitter and other"
" network characteristics. VoIP has a symmetrical traffic pattern and it "
"requires network quality of service (QoS) for best performance. It may also "
"require an active queue management implementation to ensure delivery. Users "
"are very sensitive to latency and jitter fluctuations and can detect them at"
" very low levels."
msgstr "此类应用对于网络拥挤、延迟、抖动以及其他网络特性都非常敏感。VoIP 具有上下行流量对称的特点，需要网络服务质量(QoS)保证最优表现。它也可能需要一个有效的队列管理实现来保证发送。用户对延迟和抖动都非常敏感，并且能在极其轻微的情况下发现它们。"

#: ./doc/arch-design/ch_network_focus.xml147(term)
msgid "Video Conference or web conference"
msgstr "视频会议和 web 会议"

#: ./doc/arch-design/ch_network_focus.xml149(para)
msgid ""
"This also is extremely sensitive to network congestion, latency, jitter and "
"other network flaws. Video Conferencing has a symmetrical traffic pattern, "
"but unless the network is on an MPLS private network, it cannot use network "
"quality of service (QoS) to improve performance. Similar to VOIP, users will"
" be sensitive to network performance issues even at low levels."
msgstr "此类应用同样对于网络拥挤、延迟、抖动以及其他网络缺陷都非常敏感。视频会议同样具有上下行流量对称的特点，但是除非网络是在一个 MPLS 私有网络之上，其无法使用网络服务质量(QoS)机制来提高性能。与 VoIP 一样，用户对于即使是非常轻微的网络性能问题也很敏感。"

#: ./doc/arch-design/ch_network_focus.xml160(term)
#: ./doc/arch-design/ch_compute_focus.xml21(para)
msgid "High performance computing (HPC)"
msgstr "高性能计算(HPC)"

#: ./doc/arch-design/ch_network_focus.xml162(para)
msgid ""
"This is a complex use case that requires careful consideration of the "
"traffic flows and usage patterns to address the needs of cloud clusters. It "
"has high East-West traffic patterns for distributed computing, but there can"
" be substantial North-South traffic depending on the specific application."
msgstr "此类应用较为复杂，需要对网络数据流和使用特点进行仔细考虑以处理云集群的需要。分布式计算具有东西向流量比较大的特点，但是针对特定应用，也存在南北向的流量很大的可能。"

#: ./doc/arch-design/ch_introduction.xml7(title)
msgid "Introduction"
msgstr "介绍"

#: ./doc/arch-design/ch_introduction.xml9(para)
msgid ""
"OpenStack is a leader in the cloud technology gold rush, as organizations of"
" all stripes discover the increased flexibility and speed to market that "
"self-service cloud and Infrastructure-as-a-Service (IaaS) provides. However,"
" in order to reap those benefits, the cloud must be designed and architected"
" properly."
msgstr "在云计算技术的“淘金热”中，OpenStack无疑是作为领导者出现的，在云自助服务和基础设施即服务(IaaS)的市场，为形形色色的>组织发现更大的灵活性，并加速这个市场。当然，要想知道它的全部好处，云必须要有正确的架构设计。"

#: ./doc/arch-design/ch_introduction.xml15(para)
msgid ""
"A well-architected cloud provides a stable IT environment that offers easy "
"access to needed resources, usage-based expenses, extra capacity on demand, "
"disaster recovery, and a secure environment. A well-architected cloud does "
"not magically build itself. It requires careful consideration of a multitude"
" of factors both technical and non-technical."
msgstr "一个完美的云架构可以提供一个稳定的IT环境，可轻松访问需要的资源、基于使用的付费、按需扩充容量、灾难恢复、安全等。但是一个完美的云架构不会拥有魔法般的自己构建。它需要对多种因素进行精心思考，无论是技术的还是非技术的。"

#: ./doc/arch-design/ch_introduction.xml21(para)
msgid ""
"There is no single architecture that is \"right\" for an OpenStack cloud "
"deployment. OpenStack can be used for any number of different purposes, each"
" with its own particular requirements and architectural peculiarities."
msgstr "对于OpenStack云部署来说，还没有所谓的那个架构是“正确”的。OpenStack可用于多种目的和场景，而每一种都有着自己独特的需求和架构特点。"

#: ./doc/arch-design/ch_introduction.xml26(para)
msgid ""
"This book is designed to examine some of the most common uses for OpenStack "
"clouds (and some less common uses) and to provide knowledge and advice to "
"help explain the issues that require consideration. These examples, coupled "
"with a wealth of knowledge and advice will help an organization design and "
"build a well-architected OpenStack cloud to fit its unique requirements."
msgstr "本书的初衷是着眼于使用OpenStack云的通用用例(即使不那么通用，至少是作为好的案例)以及解释什么问题是应该去考虑的，以及为什么这么考虑，提供丰富的知识和建议，以帮助一些组织设计和构建一个完美架构的、满足独特需求的OpenStack云。"

#: ./doc/arch-design/ch_hybrid.xml7(title)
msgid "Hybrid"
msgstr "混合云"

#: ./doc/arch-design/ch_hybrid.xml9(para)
msgid ""
"<glossterm baseform=\"hybrid cloud\">Hybrid cloud</glossterm>, by "
"definition, means that the design spans more than one cloud. An example of "
"this kind of architecture may include a situation in which the design "
"involves more than one OpenStack cloud (for example, an OpenStack-based "
"private cloud and an OpenStack-based public cloud), or it may be a situation"
" incorporating an OpenStack cloud and a non-OpenStack cloud (for example, an"
" OpenStack-based private cloud that interacts with Amazon Web Services). "
"<glossterm baseform=\"bursting\">Bursting</glossterm> into an external cloud"
" is the practice of creating new instances to alleviate extra load where "
"there is no available capacity in the private cloud."
msgstr "<glossterm baseform=\"hybrid cloud\">混合云</glossterm>,依据定义，意思就是跨多个云的设计。举个这种类型架构的例子，设计包含多个OpenStack云的情景(例如，一个是基于OpenStack的私有云，另外一个是基于OpenStack的公有云)，又或许是一个OpenStack云和一个非OpenStack云的互操作的情况(例如，一个基于OpenStack的私有云和Amazon Web Services互相操作).<glossterm baseform=\"bursting\">突破</glossterm> 到外部的云，当私有云没有可用的资源时，系统可以自动到外部的云去建立新的实例。"

#: ./doc/arch-design/ch_hybrid.xml22(para)
msgid "Some situations that could involve hybrid cloud architecture include:"
msgstr "一些包含混合云架构的场景如下:"

#: ./doc/arch-design/ch_hybrid.xml26(para)
msgid "Bursting from a private cloud to a public cloud"
msgstr "从私有云突破到公有云"

#: ./doc/arch-design/ch_hybrid.xml30(para)
msgid "Disaster recovery"
msgstr "灾难恢复"

#: ./doc/arch-design/ch_hybrid.xml33(para)
msgid "Development and testing"
msgstr "开发和测试"

#: ./doc/arch-design/ch_hybrid.xml36(para)
msgid ""
"Federated cloud, enabling users to choose resources from multiple providers"
msgstr "联合云,允许用户从不同的提供商那选择资源"

#: ./doc/arch-design/ch_hybrid.xml40(para)
msgid ""
"Hybrid clouds built to support legacy systems as they transition to cloud"
msgstr "构建混合云以支持原来的系统，从而过渡到云"

#: ./doc/arch-design/ch_hybrid.xml44(para)
msgid ""
"As a hybrid cloud design deals with systems that are outside of the control "
"of the cloud architect or organization, a hybrid cloud architecture requires"
" considering aspects of the architecture that might not have otherwise been "
"necessary. For example, the design may need to deal with hardware, software,"
" and APIs under the control of a separate organization."
msgstr "作为混合云设计所处理的系统，其实已经不是云架构或组织所能控制的，一个混合云架构需要考虑架构的方面可能没有其他云所必须的。举例，设计也许需要处理硬件、软件、以及其他组织控制下的应用程序接口。"

#: ./doc/arch-design/ch_hybrid.xml50(para)
msgid ""
"Similarly, the degree to which the architecture is OpenStack-based will have"
" an effect on the cloud operator or cloud consumer's ability to accomplish "
"tasks with native OpenStack tools. By definition, this is a situation in "
"which no single cloud can provide all of the necessary functionality. In "
"order to manage the entire system, users, operators and consumers will need "
"an overarching tool known as a cloud management platform (CMP). Any "
"organization that is working with multiple clouds already has a CMP, even if"
" that CMP is the operator who logs into an external web portal and launches "
"a public cloud instance."
msgstr "同样的，基于OpenStack的混合云架构在多大程度上影响着云的运维者和云的消费者，让他们可以使用OpenStack本身的工具去完成一些任务。根据定义，此中状况没有那个单一的云可以提供所有的功能。为了管理整个系统，用户、运维人员、最终用户会需要一个总体工具，即众所周知的云管理平台(CMP)。任何组织只要使用了混合云，都会有一个CMP，有些CMP还需要运维人员登录外部的门户以及创建一个公有云的实例。"

#: ./doc/arch-design/ch_hybrid.xml61(para)
msgid ""
"There are commercially available options, such as Rightscale, and open "
"source options, such as ManageIQ (<link "
"href=\"http://manageiq.org\">http://manageiq.org</link>), but there is no "
"single CMP that can address all needs in all scenarios. Whereas most of the "
"sections of this book talk about the aspects of OpenStack, an architect "
"needs to consider when designing an OpenStack architecture. This section "
"will also discuss the things the architect must address when choosing or "
"building a CMP to run a hybrid cloud design, even if the CMP will be a "
"manually built solution."
msgstr "CMP有商业产品，如Rightscale,也有开源产品，如ManageIQ (<link href=\"http://manageiq.org\">http://manageiq.org</link>),但是么有那个单个的CMP可以掌控所有的场景、所有的需求。本书的大部分章节都是在探讨OpenStack方面，以及设计OpenStack架构时需要考虑的内容。这章内容讨论的是当选择或构建一个CMP运行混合云时，设计此架构时考虑的内容。哪怕是CMP是用户自行构建的解决方案。"

#: ./doc/arch-design/ch_multi_site.xml7(title)
msgid "Multi-site"
msgstr "多区域"

#: ./doc/arch-design/ch_multi_site.xml9(para)
msgid ""
"A multi-site OpenStack environment is one in which services, located in more"
" than one data center, are used to provide the overall solution. Usage "
"requirements of different multi-site clouds may vary widely, but they share "
"some common needs. OpenStack is capable of running in a multi-region "
"configuration. This enables some parts of OpenStack to effectively manage a "
"group of sites as a single cloud. With careful planning in the design phase,"
" OpenStack can act as an excellent multi-site cloud solution for a multitude"
" of needs."
msgstr "一个多区域openstack环境是指它的服务分布在多个数据中心来提供整体的服务.不同的多区域云可能在使用要求上区别会很大,然而它们还是有一些共同点的.openstack可以运行在多区域环境下,允许某部分服务有效地像管理一个单区域的云一样来管理着由多个区域组成的群组.通过在设计阶段仔细计划,面对不同的需求,openstack可以是一个多区域云的完美解决方案"

#: ./doc/arch-design/ch_multi_site.xml19(para)
msgid ""
"Some use cases that might indicate a need for a multi-site deployment of "
"OpenStack include:"
msgstr "一些应该使用多区域布署的案例可能会有以下特征:"

#: ./doc/arch-design/ch_multi_site.xml23(para)
msgid "An organization with a diverse geographic footprint."
msgstr "一个有不同地域认证的组织"

#: ./doc/arch-design/ch_multi_site.xml27(para)
msgid "Geo-location sensitive data."
msgstr "地理位置敏感数据"

#: ./doc/arch-design/ch_multi_site.xml30(para)
msgid ""
"Data locality, in which specific data or functionality should be close to "
"users."
msgstr "数据所在地应该接近用户,特别是一些特殊数据或者功能"

#: ./doc/arch-design/ch_storage_focus.xml7(title)
msgid "Storage focused"
msgstr "存储型"

#: ./doc/arch-design/ch_storage_focus.xml9(para)
msgid ""
"Cloud storage is a model of data storage that stores digital data in logical"
" pools and physical storage that spans across multiple servers and "
"locations. Cloud storage commonly refers to a hosted object storage service,"
" however the term also includes other types of data storage that are "
"available as a service, for example block storage."
msgstr "云存储是一种数据存储的模型。这种模型下电子数据存放在逻辑的存储池之中，物理的存储设备则分布在多个服务器或者地点之中。云存储一般来说指的是所支持的对象存储服务，然而，随着发展，这个概念包括了其它能够作为服务提供的数据存储，比如块存储。"

#: ./doc/arch-design/ch_storage_focus.xml15(para)
msgid ""
"Cloud storage runs on virtualized infrastructure and resembles broader cloud"
" computing in terms of accessible interfaces, elasticity, scalability, "
"multi-tenancy, and metered resources. You can use cloud storage services "
"from an off-premises service or deploy on-premises."
msgstr "云存储是运行在虚拟化基础设施之上的，并且在可访问接口、弹性、可扩展性、多租户以及可测量资源方面都类似于更广泛意义上的云计算。云存储服务可以是场外的服务，也可以在内部进行部署。"

#: ./doc/arch-design/ch_storage_focus.xml20(para)
msgid ""
"Cloud storage consists of many distributed, synonymous resources, which are "
"often referred to as integrated storage clouds. Cloud storage is highly "
"fault tolerant through redundancy and the distribution of data. It is highly"
" durable through the creation of versioned copies, and can be consistent "
"with regard to data replicas."
msgstr "云存储由很多分散的但是同质化的资源所组成，并且通常被称为集成存储云。云存储具有非常高的容错能力，这是通过冗余以及数据的分布存储实现的。通过创建版本化的副本，云存储是非常耐用的，而且对于数据的副本来说，其一致性也是非常高的。"

#: ./doc/arch-design/ch_storage_focus.xml26(para)
msgid ""
"At large scale, management of data operations is a resource intensive "
"process for an organization. Hierarchical storage management (HSM) systems "
"and data grids help annotate and report a baseline data valuation to make "
"intelligent decisions and automate data decisions. HSM enables automated "
"tiering and movement, as well as orchestration of data operations. A data "
"grid is an architecture, or set of services evolving technology, that brings"
" together sets of services enabling users to manage large data sets."
msgstr "在规模到达一定的程度时，数据操作的管理对于整个组织来说就会是一个资源密集型的过程。分级存储管理(HSM)系统以及数据网格能够帮助对数据评估的基准值作出注解以及报告，从而做出正确的决定以及自动化该数据决策。HSM 支持自动化的排列和移动，以及数据操作的协调编排。数据网格是一个架构，或者是一项不断发展的服务集合技术，此项技术能够将多个服务协调到一起，让用户能够管理大规模的数据集合。"

#: ./doc/arch-design/ch_storage_focus.xml35(para)
msgid "Example applications deployed with cloud storage characteristics:"
msgstr "以下是云存储类型的应用部署的例子："

#: ./doc/arch-design/ch_storage_focus.xml39(para)
msgid "Active archive, backups and hierarchical storage management."
msgstr "活跃归档、备份和分级存储管理"

#: ./doc/arch-design/ch_storage_focus.xml43(para)
msgid ""
"General content storage and synchronization. An example of this is private "
"dropbox."
msgstr "通用内容存储和同步。比如私有的 dropbox。"

#: ./doc/arch-design/ch_storage_focus.xml47(para)
msgid "Data analytics with parallel file systems."
msgstr "基于并行文件系统的数据分析。"

#: ./doc/arch-design/ch_storage_focus.xml50(para)
msgid ""
"Unstructured data store for services. For example, social media back-end "
"storage."
msgstr "某些服务的非结构化数据存储。比如社交媒体的后端存储。"

#: ./doc/arch-design/ch_storage_focus.xml54(para)
msgid "Persistent block storage."
msgstr "持久化的块存储。"

#: ./doc/arch-design/ch_storage_focus.xml57(para)
msgid "Operating system and application image store."
msgstr "操作系统和应用镜像存储。"

#: ./doc/arch-design/ch_storage_focus.xml60(para)
msgid "Media streaming."
msgstr "媒体流。"

#: ./doc/arch-design/ch_storage_focus.xml63(para)
msgid "Databases."
msgstr "数据库。"

#: ./doc/arch-design/ch_storage_focus.xml66(para)
msgid "Content distribution."
msgstr "内容分发。"

#: ./doc/arch-design/ch_storage_focus.xml69(para)
msgid "Cloud storage peering."
msgstr "云存储配对。"

#: ./doc/arch-design/ch_generalpurpose.xml7(title)
msgid "General purpose"
msgstr "通用型"

#: ./doc/arch-design/ch_generalpurpose.xml8(para)
msgid ""
"An OpenStack general purpose cloud is often considered a starting point for "
"building a cloud deployment. They are designed to balance the components and"
" do not emphasize any particular aspect of the overall computing "
"environment. Cloud design must give equal weight to the compute, network, "
"and storage components. General purpose clouds are found in private, public,"
" and hybrid environments, lending themselves to many different use cases."
msgstr "OpenStack通用型云通常被认为是构建一个云的起点。它们被设计为平衡的组件以及在整体的计算环境中不强调某个特定的领域。云的设计必须对计算、网络、存储等组件作必要的公平权衡。通用型云可以是私有云，也可以是公有云，当然也可以混合的环境，自身可以适用于各种用例。"

#: ./doc/arch-design/ch_generalpurpose.xml18(para)
msgid ""
"General purpose clouds are homogeneous deployments and are not suited to "
"specialized environments or edge case situations."
msgstr "通用型云基于很普通的部署，不适用于特殊的环境或边缘案例的情况。"

#: ./doc/arch-design/ch_generalpurpose.xml23(para)
msgid "Common uses of a general purpose cloud include:"
msgstr "通常使用通用性的云包括："

#: ./doc/arch-design/ch_generalpurpose.xml28(para)
msgid "Providing a simple database"
msgstr "提供一简单的数据库"

#: ./doc/arch-design/ch_generalpurpose.xml33(para)
msgid "A web application runtime environment"
msgstr "一个web应用程序运行时环境"

#: ./doc/arch-design/ch_generalpurpose.xml38(para)
msgid "A shared application development platform"
msgstr "共享的应用开发平台"

#: ./doc/arch-design/ch_generalpurpose.xml43(para)
msgid "Lab test bed"
msgstr "测试实验平台"

#: ./doc/arch-design/ch_generalpurpose.xml48(para)
msgid ""
"Use cases that benefit from scale-out rather than scale-up approaches are "
"good candidates for general purpose cloud architecture."
msgstr "在通用型云架构中，用例能够明确感受到横向扩展带来好处远远大于纵向扩展。"

#: ./doc/arch-design/ch_generalpurpose.xml51(para)
msgid ""
"A general purpose cloud is designed to have a range of potential uses or "
"functions; not specialized for specific use cases. General purpose "
"architecture is designed to address 80% of potential use cases available. "
"The infrastructure, in itself, is a specific use case, enabling it to be "
"used as a base model for the design process. General purpose clouds are "
"designed to be platforms that are suited for general purpose applications."
msgstr "通用型云被设计为有一系列潜在用途或功能，不是为特殊的用例特殊设计。通用型架构是为满足80%用例而设计的。基础设施其本身就是一非常特别的用例，在设计过程将之用于基本模型未尝不可。通用型云被设计为适合通用应用的平台。"

#: ./doc/arch-design/ch_generalpurpose.xml58(para)
msgid ""
"General purpose clouds are limited to the most basic components, but they "
"can include additional resources such as:"
msgstr "通用型云被限制在了大部分的基本组件，但是可以包含下面增加的资源，例如："

#: ./doc/arch-design/ch_generalpurpose.xml72(para)
#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml174(para)
msgid "Firewalls"
msgstr "防火墙"

#: ./doc/arch-design/ch_generalpurpose.xml75(para)
msgid "Load balancers"
msgstr "负载均衡器"

#: ./doc/arch-design/ch_generalpurpose.xml78(para)
msgid "IP addresses"
msgstr "IP 地址"

#: ./doc/arch-design/ch_generalpurpose.xml81(para)
msgid "Network overlays or virtual local area networks (VLANs)"
msgstr "网络覆盖或者(VLANs)"

#: ./doc/arch-design/bk-openstack-arch-design.xml7(title)
msgid "OpenStack Architecture Design Guide"
msgstr "OpenStack 架构设计指南"

#: ./doc/arch-design/bk-openstack-arch-design.xml9(titleabbrev)
msgid "Architecture Guide"
msgstr "架构指南"

#: ./doc/arch-design/bk-openstack-arch-design.xml17(orgname)
#: ./doc/arch-design/bk-openstack-arch-design.xml23(holder)
msgid "OpenStack Foundation"
msgstr "OpenStack基金会"

#: ./doc/arch-design/bk-openstack-arch-design.xml21(year)
msgid "2014"
msgstr "2014"

#: ./doc/arch-design/bk-openstack-arch-design.xml22(year)
msgid "2015"
msgstr "2015"

#: ./doc/arch-design/bk-openstack-arch-design.xml25(releaseinfo)
msgid "current"
msgstr "当前最新"

#: ./doc/arch-design/bk-openstack-arch-design.xml26(productname)
msgid "OpenStack"
msgstr "OpenStack"

#: ./doc/arch-design/bk-openstack-arch-design.xml30(remark)
msgid "Copyright details are filled in by the template."
msgstr "版权信息来自于模板"

#: ./doc/arch-design/bk-openstack-arch-design.xml36(remark)
msgid "Remaining licensing details are filled in by the template."
msgstr "其余的授权细节来自于模版"

#: ./doc/arch-design/bk-openstack-arch-design.xml41(para)
msgid ""
"To reap the benefits of OpenStack, you should plan, design, and architect "
"your cloud properly, taking user's needs into account and understanding the "
"use cases."
msgstr "欲充分利用OpenStack的优点，用户需要精心准备规划、设计及架构。认真纳入用户的需求、揣摩透一些用例。"

#: ./doc/arch-design/bk-openstack-arch-design.xml49(date)
msgid "2014-10-15"
msgstr "2014-10-15"

#: ./doc/arch-design/bk-openstack-arch-design.xml53(para)
msgid "Incorporate edits to follow OpenStack style."
msgstr "参与编辑请遵照OpenStack风格。"

#: ./doc/arch-design/bk-openstack-arch-design.xml60(date)
msgid "2014-07-21"
msgstr "2014-07-21"

#: ./doc/arch-design/bk-openstack-arch-design.xml64(para)
msgid "Initial release."
msgstr "初始版"

#: ./doc/arch-design/ch_compute_focus.xml7(title)
msgid "Compute focused"
msgstr "计算型"

#: ./doc/arch-design/ch_compute_focus.xml9(para)
msgid ""
"A compute-focused cloud is a specialized subset of the general purpose "
"OpenStack cloud architecture. Unlike the general purpose OpenStack "
"architecture, which is built to host a wide variety of workloads and "
"applications and does not heavily tax any particular computing aspect, a "
"compute-focused cloud is built and designed specifically to support compute "
"intensive workloads. As such, the design must be specifically tailored to "
"support hosting compute intensive workloads. Compute intensive workloads may"
" be CPU intensive, RAM intensive, or both. However, they are not typically "
"storage intensive or network intensive. Compute-focused workloads may "
"include the following use cases:"
msgstr "计算型是通用型openstack架构的一个特定子集。通用型架构需要应对各种各样的工作负载和应用而不特别着意于任一计算方向，而计算型则需要被设计和构建以专门应对计算密集型的工作负载。基于此，该架构必须专门设计以支撑计算密集型的工作负载。计算密集型特指ＣＰＵ密集型，ＲＡＭ密集型亦或两者亦有。但通常不是存储密集型或网络密集型。计算密集型的工作负载可能包含下面这些用例："

#: ./doc/arch-design/ch_compute_focus.xml24(para)
msgid "Big data analytics using Hadoop or other distributed data stores"
msgstr "使用Hadoop或其他分布式数据处理程序来分析大数据"

#: ./doc/arch-design/ch_compute_focus.xml28(para)
msgid "Continuous integration/continuous deployment (CI/CD)"
msgstr "持续集成/持续部署(CI/CD)"

#: ./doc/arch-design/ch_compute_focus.xml31(para)
msgid "Platform-as-a-Service (PaaS)"
msgstr "平台即服务(PaaS)"

#: ./doc/arch-design/ch_compute_focus.xml34(para)
msgid "Signal processing for network function virtualization (NFV)"
msgstr "专门处理网络功能虚拟化(NFV)"

#: ./doc/arch-design/ch_compute_focus.xml37(para)
msgid ""
"Based on the use case requirements, such clouds might need to provide "
"additional services such as a virtual machine disk library, file or object "
"storage, firewalls, load balancers, IP addresses, and network connectivity "
"in the form of overlays or virtual local area networks (VLANs). A compute-"
"focused OpenStack cloud will not typically use raw block storage services "
"since the applications hosted on a compute-focused OpenStack cloud generally"
" do not need persistent block storage."
msgstr "根据用例的需求，此类云也许需要提供额外的服务，诸如虚拟机磁盘库，文件或对象存储，防火墙，负载均衡，IP地址以及虚拟本地局域网(VLAN)。计算型的OpenStack云一般不会使用raw块存储服务，因为托管在计算型OpenStack云的应用通常不需要持久性块存储。"

#: ./doc/arch-design/ch_references.xml8(title)
#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml153(title)
msgid "References"
msgstr "参考"

#: ./doc/arch-design/ch_references.xml9(para)
msgid ""
"<link href=\"http://ec.europa.eu/justice/data-protection/\">Data Protection "
"framework of the European Union</link>: Guidance on Data Protection laws "
"governed by the EU."
msgstr "<link href=\"http://ec.europa.eu/justice/data-protection/\">欧盟的数据保护框架</link>：欧盟关于数据保护法律的指导意见。"

#: ./doc/arch-design/ch_references.xml15(para)
msgid ""
"<link href=\"http://www.internetsociety.org/deploy360/blog/2014/05/goodbye-"
"ipv4-iana-starts-allocating-final-address-blocks/\">Depletion of IPv4 "
"Addresses</link>: describing how IPv4 addresses and the migration to IPv6 is"
" inevitable."
msgstr "<link href=\"http://www.internetsociety.org/deploy360/blog/2014/05/goodbye-ipv4-iana-starts-allocating-final-address-blocks/\">IPv4 地址正在耗尽</link>：解释了如何从 IPv4 地址迁移到 IPv6，以及这个情况是不可避免的。"

#: ./doc/arch-design/ch_references.xml21(para)
msgid ""
"<link "
"href=\"http://www.garrettcom.com/techsupport/papers/ethernet_switch_reliability.pdf\">Ethernet"
" Switch Reliability</link>: ​Research white paper on Ethernet Switch "
"reliability."
msgstr "<link href=\"http://www.garrettcom.com/techsupport/papers/ethernet_switch_reliability.pdf\">以太网交换机可靠性</link>：​关于以太网交换机可靠性研究的白皮书。"

#: ./doc/arch-design/ch_references.xml27(para)
msgid ""
"<link "
"href=\"http://www.finra.org/Industry/Regulation/FINRARules/\">Financial "
"Industry Regulatory Authority</link>: ​Requirements of the Financial "
"Industry Regulatory Authority in the USA."
msgstr "<link href=\"http://www.finra.org/Industry/Regulation/FINRARules/\">金融业监督管理局</link>：​美国金融业监督管理局的要求。"

#: ./doc/arch-design/ch_references.xml33(para)
msgid ""
"<link href=\"http://docs.openstack.org/cli-reference/content/chapter_cli-"
"glance-property.html\">Image Service property keys</link>: Glance API "
"property keys allows the administrator to attach custom characteristics to "
"images."
msgstr "<link href=\"http://docs.openstack.org/cli-reference/content/chapter_cli-glance-property.html\">镜像服务属性键</link>：Glance API 的属性键，允许管理员附加自定义的特性至镜像之上。"

#: ./doc/arch-design/ch_references.xml39(para)
msgid ""
"<link href=\"http://libguestfs.org\">LibGuestFS Documentation</link>: "
"Official LibGuestFS documentation."
msgstr "<link href=\"http://libguestfs.org\">LibGuestFS 文档</link>：LibGuestFS 官方文档。"

#: ./doc/arch-design/ch_references.xml43(para)
msgid ""
"<link href=\"http://docs.openstack.org/openstack-"
"ops/content/logging_monitoring.html\">Logging and Monitoring</link>: "
"Official OpenStack Operations documentation."
msgstr "<link href=\"http://docs.openstack.org/openstack-ops/content/logging_monitoring.html\">日志和监控</link>：OpenStack 官方的运营文档。"

#: ./doc/arch-design/ch_references.xml49(para)
msgid ""
"<link href=\"http://manageiq.org/\">ManageIQ Cloud Management "
"Platform</link>: An Open Source Cloud Management Platform for managing "
"multiple clouds."
msgstr "<link href=\"http://manageiq.org/\">ManageIQ 云管理平台</link>：一个开源的能够管理多个云的管理平台。"

#: ./doc/arch-design/ch_references.xml54(para)
msgid ""
"<link href=\"http://www.n-tron.com/pdf/network_availability.pdf\">N-Tron "
"Network Availability</link>: Research white paper on network availability."
msgstr "<link href=\"http://www.n-tron.com/pdf/network_availability.pdf\">N-Tron 网络可用性</link>：关于网络可用性的研究白皮书。"

#: ./doc/arch-design/ch_references.xml60(para)
msgid ""
"<link href=\"http://davejingtian.org/2014/03/30/nested-kvm-just-for-"
"fun\">Nested KVM</link>: Post on how to nest KVM under KVM."
msgstr "<link href=\"http://davejingtian.org/2014/03/30/nested-kvm-just-for-fun\">嵌套的 KVM</link>：关于如何在 KVM 之上嵌套 KVM 的日志文章。"

#: ./doc/arch-design/ch_references.xml65(para)
msgid ""
"<link href=\"http://www.opencompute.org/\">Open Compute Project</link>: The "
"Open Compute Project Foundation's mission is to design and enable the "
"delivery of the most efficient server, storage and data center hardware "
"designs for scalable computing."
msgstr "<link href=\"http://www.opencompute.org/\">Open Compute 项目</link>：Open Compute 项目基金会的任务是设计以及传播为可扩展的计算而生的最有效的服务器、存储以及数据中心硬件的设计方案。"

#: ./doc/arch-design/ch_references.xml72(para)
msgid ""
"<link href=\"http://docs.openstack.org/openstack-"
"ops/content/flavors.html\">OpenStack Flavors</link>: Official OpenStack "
"documentation."
msgstr "<link href=\"http://docs.openstack.org/openstack-ops/content/flavors.html\">OpenStack 实例类型</link>：OpenStack 官方文档。"

#: ./doc/arch-design/ch_references.xml77(para)
msgid ""
"<link href=\"http://docs.openstack.org/high-availability-"
"guide/content/\">OpenStack High Availability Guide</link>: Information on "
"how to provide redundancy for the OpenStack components."
msgstr "<link href=\"http://docs.openstack.org/high-availability-guide/content/\">OpenStack 高可用指南</link>：关于如何为 OpenStack 组件提供冗余性的资料信息。"

#: ./doc/arch-design/ch_references.xml83(para)
msgid ""
"<link "
"href=\"https://wiki.openstack.org/wiki/HypervisorSupportMatrix\">OpenStack "
"Hypervisor Support Matrix</link>: ​Matrix of supported hypervisors and "
"capabilities when used with OpenStack."
msgstr "<link href=\"https://wiki.openstack.org/wiki/HypervisorSupportMatrix\">OpenStack 宿主机类型支持表格</link>: ​关于在 OpenStack 对各种宿主机和特性的支持情况的表格。"

#: ./doc/arch-design/ch_references.xml89(para)
msgid ""
"<link "
"href=\"http://docs.openstack.org/developer/swift/replication_network.html\">OpenStack"
" Object Store (Swift) Replication Reference</link>: Developer documentation "
"of Swift replication."
msgstr "<link href=\"http://docs.openstack.org/developer/swift/replication_network.html\">OpenStack 对象存储(Swift)复制参考</link>：Swift 复制的开发者文档。"

#: ./doc/arch-design/ch_references.xml95(para)
msgid ""
"<link href=\"http://docs.openstack.org/openstack-ops/\">OpenStack Operations"
" Guide</link>: The OpenStack Operations Guide provides information on "
"setting up and installing OpenStack."
msgstr "<link href=\"http://docs.openstack.org/openstack-ops/\">OpenStack 运营指南</link>：OpenStack 运营指南提供了关于部署和安装 OpenStack 的相关信息。"

#: ./doc/arch-design/ch_references.xml101(para)
msgid ""
"<link href=\"http://docs.openstack.org/security-guide/\">OpenStack Security "
"Guide</link>: The OpenStack Security Guide provides information on securing "
"OpenStack deployments."
msgstr "<link href=\"http://docs.openstack.org/security-guide/\">OpenStack 安全性指南</link>：OpenStack 安全性指南提供了关于强化 OpenStack 部署的安全性的相关信息。"

#: ./doc/arch-design/ch_references.xml107(para)
msgid ""
"<link href=\"http://www.openstack.org/marketplace/training\">OpenStack "
"Training Marketplace</link>: The OpenStack Market for training and Vendors "
"providing training on OpenStack."
msgstr "<link href=\"http://www.openstack.org/marketplace/training\">OpenStack 培训服务市场</link>：提供关于 OpenStack 的培训及提供此类培训的厂商的信息。"

#: ./doc/arch-design/ch_references.xml113(para)
msgid ""
"<link "
"href=\"https://wiki.openstack.org/wiki/Pci_passthrough#How_to_check_PCI_status_with_PCI_api_paches\">PCI"
" passthrough</link>: The PCI API patches extend the servers/os-hypervisor to"
" show PCI information for instance and compute node, and also provides a "
"resource endpoint to show PCI information."
msgstr "<link href=\"https://wiki.openstack.org/wiki/Pci_passthrough#How_to_check_PCI_status_with_PCI_api_paches\">PCI 穿透</link>：扩展服务器/宿主机功能的 PCI API 补丁，该补丁使得宿主机能够为实例以及计算节点显示 PCI 的信息，并提供了用以显示 PCI 信息的资源入口。"

#: ./doc/arch-design/ch_references.xml121(para)
msgid ""
"<link href=\"https://wiki.openstack.org/wiki/TripleO\">TripleO</link>: "
"TripleO is a program aimed at installing, upgrading and operating OpenStack "
"clouds using OpenStack's own cloud facilities as the foundation."
msgstr "<link href=\"https://wiki.openstack.org/wiki/TripleO\">TripleO</link>：TripleO 是一个程序，其目标是使用 OpenStack 自身提供的设施作为基础安装、升级以及运营另外的 OpenStack 云。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml8(title)
#: ./doc/arch-design/network_focus/section_operational_considerations_network_focus.xml8(title)
#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml8(title)
#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml8(title)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml175(title)
#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml8(title)
#: ./doc/arch-design/massively_scalable/section_operational_considerations_massively_scalable.xml8(title)
#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml8(title)
msgid "Operational considerations"
msgstr "运营因素"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml9(para)
msgid ""
"Deployment of a multi-site OpenStack cloud using regions requires that the "
"service catalog contains per-region entries for each service deployed other "
"than the Identity service itself. There is limited support amongst currently"
" available off-the-shelf OpenStack deployment tools for defining multiple "
"regions in this fashion."
msgstr "使用region来部署一个多区域OpenStack云，要求每个部署的服务的服务目录包含per-region元素，不仅仅是认证服务本身。当前现成的OpenStack部署工具中，对于定义多region的支持还很有限。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml15(para)
msgid ""
"Deployers must be aware of this and provide the appropriate customization of"
" the service catalog for their site either manually or via customization of "
"the deployment tools in use."
msgstr "部署者务必意识到这点，为他们的站点提供合适的定制服务目录，无论是手动还是定制，都的使用这些部署工具。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml19(para)
msgid ""
"Note that, as of the Icehouse release, documentation for implementing this "
"feature is in progress. See this bug for more information: <link "
"href=\"https://bugs.launchpad.net/openstack-"
"manuals/+bug/1340509\">https://bugs.launchpad.net/openstack-"
"manuals/+bug/1340509</link>."
msgstr "注意，自从Icehouse版本发布后，实现此特性的文档一直都在写作中，详情请浏览： <link href=\"https://bugs.launchpad.net/openstack-manuals/+bug/1340509\">https://bugs.launchpad.net/openstack-manuals/+bug/1340509</link>。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml26(title)
msgid "Licensing"
msgstr "许可"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml27(para)
msgid ""
"Multi-site OpenStack deployments present additional licensing considerations"
" over and above regular OpenStack clouds, particularly where site licenses "
"are in use to provide cost efficient access to software licenses. The "
"licensing for host operating systems, guest operating systems, OpenStack "
"distributions (if applicable), software-defined infrastructure including "
"network controllers and storage systems, and even individual applications "
"need to be evaluated in light of the multi-site nature of the cloud."
msgstr "多区域OpenStack部署需要考虑常规OpenStack云之外的许可，尤其是那些正在使用中的，这样具有成本效益。这些许可有主机操作系统的，客户机操作系统的，OpenStack发行版(如果购买过)，软件定义基础设施包括网络控制器和存储系统的，以及各种应用，都需要评估，基于多区域云的性质本身出发。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml36(para)
msgid "Topics to consider include:"
msgstr "考虑的主题有："

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml39(para)
msgid ""
"The specific definition of what constitutes a site in the relevant licenses,"
" as the term does not necessarily denote a geographic or otherwise "
"physically isolated location in the traditional sense."
msgstr "在相关的许可证下一个站点由什么构成有着特别的定义，正如该术语不一定表示在传统意义上的一个地理或其他物理隔离的位置。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml46(para)
msgid ""
"Differentiations between \"hot\" (active) and \"cold\" (inactive) sites "
"where significant savings may be made in situations where one site is a cold"
" standby for disaster recovery purposes only."
msgstr "“热”(活动)和\"冷\"(非活动)站点之间的区别在于，冷的预备站点只是用于灾难恢复的情况发生。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml52(para)
msgid ""
"Certain locations might require local vendors to provide support and "
"services for each site provides challenges, but will vary on the licensing "
"agreement in place."
msgstr "为应对不同站点的挑战，某些地点也许需要当地供应商的支持和服务，但是都得遵循当地的许可协议。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml59(title)
msgid "Logging and monitoring"
msgstr "记录日志和监测"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml60(para)
msgid ""
"Logging and monitoring does not significantly differ for a multi-site "
"OpenStack cloud. The same well known tools described in the <link "
"href=\"http://docs.openstack.org/openstack-"
"ops/content/logging_monitoring.html\">Logging and monitoring chapter</link> "
"of the <citetitle>Operations Guide</citetitle> remain applicable. Logging "
"and monitoring can be provided both on a per-site basis and in a common "
"centralized location."
msgstr "日志和监测对于多区域OpenStack云和其他类型没有任何显著的差别。在<citetitle>OpenStack运维手册</citetitle>中 <link href=\"http://docs.openstack.org/openstack-ops/content/logging_monitoring.html\">日志和监测</link> 章节中提到的工具依然适用于多区域OpenStack云。日志和监测可同时提供per-site基础和通用的中心位置。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml68(para)
msgid ""
"When attempting to deploy logging and monitoring facilities to a centralized"
" location, care must be taken with regards to the load placed on the inter-"
"site networking links."
msgstr "当尝试将日志和监测系统部署到一个中心位置时，要小心内部网络的负载。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml72(title)
#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml56(title)
msgid "Upgrades"
msgstr "升级"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml73(para)
msgid ""
"In multi-site OpenStack clouds deployed using regions each site is, "
"effectively, an independent OpenStack installation which is linked to the "
"others by using centralized services such as Identity which are shared "
"between sites. At a high level the recommended order of operations to "
"upgrade an individual OpenStack environment is (see the <link "
"href=\"http://docs.openstack.org/openstack-ops/content/ops_upgrades-general-"
"steps.html\">Upgrades chapter</link> of the <citetitle>Operations "
"Guide</citetitle> for details):"
msgstr "多区域OpenStack云的部署使用region为单位，即每个站点。尽管每个站点都是相对独立安装的，但是如认证服务，是中心化的服务，所有的站点共享使用，这就又将它们彼此联系起来了。关于升级分离的OpenStack环境，运维的高级别建议参考<citetitle>OpenStack运维手册</citetitle> 中的(<link href=\"http://docs.openstack.org/openstack-ops/content/ops_upgrades-general-steps.html\">升级</link>)章节，获取更多详情。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml84(para)
msgid "Upgrade the OpenStack Identity service (keystone)."
msgstr "升级OpenStack认证服务 (keystone)."

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml88(para)
msgid "Upgrade the OpenStack Image Service (glance)."
msgstr "升级 OpenStack 镜像服务 (glance)。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml91(para)
msgid "Upgrade OpenStack Compute (nova), including networking components."
msgstr "升级 OpenStack 计算 (nova), 包括网络组件。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml95(para)
msgid "Upgrade OpenStack Block Storage (cinder)."
msgstr "升级 OpenStack 块存储 (cinder)。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml98(para)
msgid "Upgrade the OpenStack dashboard (horizon)."
msgstr "升级 OpenStack GUI程序 (horizon)。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml101(para)
msgid ""
"The process for upgrading a multi-site environment is not significantly "
"different:"
msgstr "升级多区域环境的流程没有什么特别的不一样："

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml105(para)
msgid "Upgrade the shared OpenStack Identity service (keystone) deployment."
msgstr "升级 OpenStack 认证共享服务 (keystone) 。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml109(para)
msgid "Upgrade the OpenStack Image Service (glance) at each site."
msgstr "在每个区域升级 OpenStack 镜像服务(glance) 。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml113(para)
msgid ""
"Upgrade OpenStack Compute (nova), including networking components, at each "
"site."
msgstr "在每个区域升级OpenStack计算(nova),包括网络组件。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml117(para)
msgid "Upgrade OpenStack Block Storage (cinder) at each site."
msgstr "在每个区域升级OpenStack块存储 (cinder)。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml121(para)
msgid ""
"Upgrade the OpenStack dashboard (horizon), at each site or in the single "
"central location if it is shared."
msgstr "在每个区域升级OpenStack GUI程序(horizon),或者假如它是共享的话，仅升级单个的数据中心即可。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml126(para)
msgid ""
"Note that, as of the OpenStack Icehouse release, compute upgrades within "
"each site can also be performed in a rolling fashion. Compute controller "
"services (API, Scheduler, and Conductor) can be upgraded prior to upgrading "
"of individual compute nodes. This maximizes the ability of operations staff "
"to keep a site operational for users of compute services while performing an"
" upgrade."
msgstr "请记住，在OpenStack Icehouse发布后，为每个站点升级计算组件可以是回滚的方式进行。计算控制器服务(API,调度器以及Conductor)可以为单独的某个计算节点升级而不会影响现有的服务。这最大化的为运维人员在进行升级时不会中断用户使用计算服务。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml134(title)
msgid "Quota management"
msgstr "配额管理"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml135(para)
msgid ""
"To prevent system capacities from being exhausted without notification, "
"OpenStack provides operators with the ability to define quotas. Quotas are "
"used to set operational limits and are currently enforced at the tenant (or "
"project) level rather than at the user level."
msgstr "为防止系统资源被耗尽而没有任何通知，OpenStack提供给运维人员定义配额的能力。配额用户设置操作限制，当前可在租户(或项目)中实现了强制，而用户级别则没有实现。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml140(para)
msgid ""
"Quotas are defined on a per-region basis. Operators may wish to define "
"identical quotas for tenants in each region of the cloud to provide a "
"consistent experience, or even create a process for synchronizing allocated "
"quotas across regions. It is important to note that only the operational "
"limits imposed by the quotas will be aligned consumption of quotas by users "
"will not be reflected between regions."
msgstr "配置被定义为每个region的基本要素之一。运维人员也许希望定义相同的配额，在每个region下的租户，以提供给用户一致的体验，或者创建一个跨region同步分配配额的流程。但是请记住下面一点很重要，配额不会跨region进行限制。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml147(para)
msgid ""
"For example, given a cloud with two regions, if the operator grants a user a"
" quota of 25 instances in each region then that user may launch a total of "
"50 instances spread across both regions. They may not, however, launch more "
"than 25 instances in any single region."
msgstr "举例来说，一个云有两个region，如果运维人员给某个用户的配额是在每个region中可以启动25个实例，那么此用户在两个region加起来就可以启动50个实例。但是不可以这么相加，因为配额只在一个region生效。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml152(para)
msgid ""
"For more information on managing quotas refer to the <link "
"href=\"http://docs.openstack.org/openstack-"
"ops/content/projects_users.html\">Managing projects and users chapter</link>"
" of the <citetitle>OpenStack Operators Guide</citetitle>."
msgstr "关于管理配额的更多参考信息请阅读  <citetitle>OpenStack 运维手册</citetitle>书中的<link href=\"http://docs.openstack.org/openstack-ops/content/projects_users.html\">管理项目和用户</link>  <citetitle>OpenStack Operators Guide</citetitle>章节。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml159(title)
msgid "Policy management"
msgstr "规则管理"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml160(para)
msgid ""
"OpenStack provides a default set of Role Based Access Control (RBAC) "
"policies, defined in a <filename>policy.json</filename> file, for each "
"service. Operators edit these files to customize the policies for their "
"OpenStack installation. If the application of consistent RBAC policies "
"across sites is considered a requirement, then it is necessary to ensure "
"proper synchronization of the <filename>policy.json</filename> files to all "
"installations."
msgstr "OpenStack默认提供的是基于角色访问控制(RBAC)规则，在每个服务中，在文件<filename>policy.json</filename>定义。运维人员可以编辑此文件来定制规则。如果跨区域被认为有需要将RBAC规则一致处理的话，那么就有必要确保在所有的安装配置中将文件<filename>policy.json</filename>保持同步。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml168(para)
msgid ""
"This must be done using normal system administration tools such as rsync as "
"no functionality for synchronizing policies across regions is currently "
"provided within OpenStack."
msgstr "这个可以用普通的系统管理工具如rsync来完成，OpenStack目前没有提供跨区域的同步规则。"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml172(title)
msgid "Documentation"
msgstr "文档"

#: ./doc/arch-design/multi_site/section_operational_considerations_multi_site.xml173(para)
msgid ""
"Users must be able to leverage cloud infrastructure and provision new "
"resources in the environment. It is important that user documentation is "
"accessible by users of the cloud infrastructure to ensure they are given "
"sufficient information to help them leverage the cloud. As an example, by "
"default OpenStack will schedule instances on a compute node automatically. "
"However, when multiple regions are available, it is left to the end user to "
"decide in which region to schedule the new instance. The dashboard will "
"present the user with the first region in your configuration. The API and "
"CLI tools will not execute commands unless a valid region is specified. It "
"is therefore important to provide documentation to your users describing the"
" region layout as well as calling out that quotas are region-specific. If a "
"user reaches his or her quota in one region, OpenStack will not "
"automatically build new instances in another. Documenting specific examples "
"will help users understand how to operate the cloud, thereby reducing calls "
"and tickets filed with the help desk."
msgstr "用户必须自行去操作云基础设施以及在环境中部署新的资源。用户查阅用户文档来操作云，这样的话能够给出准确的文档就很重要。举例来说，默认情况下OpenStack自动的调度实例到某个计算节点，但是，当多个region均可用时，就得用户自行决定在哪个region中调度新的实例。GUI界面显示的是用户配置的第一个region，而API和CLI工具若不指定合法的region就不会执行。因此提供文档很重要，文档中要描述region的层次以及特定region的配额等，如果用户在一个region中达到了配额的上限，OpenStack是不会自动到另外的region中构建新的实例的。文档中描述特别的例子将会帮助用户理解如何操作云，因此而减少电话呼救和现场维修。"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml21(None)
msgid ""
"@@image: '../figures/Multi-Site_shared_keystone_horizon_swift1.png'; "
"md5=fb80511b491731906fb54d5a1f029f91"
msgstr "@@image: '../figures/Multi-Site_shared_keystone_horizon_swift1.png'; md5=fb80511b491731906fb54d5a1f029f91"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml8(title)
#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml7(title)
#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml12(title)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml8(title)
#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml8(title)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml11(title)
msgid "Architecture"
msgstr "架构"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml9(para)
msgid ""
"This graphic is a high level diagram of a multiple site OpenStack "
"architecture. Each site is an OpenStack cloud but it may be necessary to "
"architect the sites on different versions. For example, if the second site "
"is intended to be a replacement for the first site, they would be different."
" Another common design would be a private OpenStack cloud with replicated "
"site that would be used for high availability or disaster recovery. The most"
" important design decision is how to configure the storage. It can be "
"configured as a single shared pool or separate pools, depending on the user "
"and technical requirements."
msgstr "此图一个多区域OpenStack架构的高度抽象示意图。每个站点都是一个OpenStack云，但是根据架构的需要可能是不同的版本。例如，如果第二个站点的使命就是替代第一个站点，他们就可以不同。另为通用的设计是一个私有的OpenStack云是完全复制的站点将用来做高可用或灾难恢复。最重要的设计决定是如何配置存储，既可以配置为单个共享池也可以是分离的池，这取决于用户和技术的需求。"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml25(title)
msgid "OpenStack services architecture"
msgstr "OpenStack服务架构"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml26(para)
msgid ""
"The OpenStack Identity service, which is used by all other OpenStack "
"components for authorization and the catalog of service endpoints, supports "
"the concept of regions. A region is a logical construct that can be used to "
"group OpenStack services that are in close proximity to one another. The "
"concept of regions is flexible; it may can contain OpenStack service "
"endpoints located within a distinct geographic region, or regions. It may be"
" smaller in scope, where a region is a single rack within a data center or "
"even a single blade chassis, with multiple regions existing in adjacent "
"racks in the same data center."
msgstr "OpenStack认证服务，用于所有其他OpenStack组件的验证，服务端点的目录，支持所有region。一个region是用于一组OpenStack彼此接近的服务的逻辑构造。region的概念颇为灵活，它可以包含地理位置很远的OpenStack服务端点，也可以是很小的范围，region甚至可以是一个数据中心的机柜，或是一个刀片中心，甚至在同一个数据相邻的机柜都拥有多个region。"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml36(para)
msgid ""
"The majority of OpenStack components are designed to run within the context "
"of a single region. The OpenStack Compute service is designed to manage "
"compute resources within a region, with support for subdivisions of compute "
"resources by using availability zones and cells. The OpenStack Networking "
"service can be used to manage network resources in the same broadcast domain"
" or collection of switches that are linked. The OpenStack Block Storage "
"service controls storage resources within a region with all storage "
"resources residing on the same storage network. Like the OpenStack Compute "
"service, the OpenStack Block Storage service also supports the availability "
"zone construct which can be used to subdivide storage resources."
msgstr "多数的OpenStack组件被设计为运行在单个region上下文中。OpenStack计算服务被设计为在一个region中管理计算资源，支持使用可用区域和单元来往下拆分。OpenStack网络服务可用于在同一广播域中或者说相互连接的交换机来管理网路资源。OpenStack块存储服务控制单一region中的存储资源，且这些资源须在统一存储网络中。和OpenStack计算服务一样，OpenStack块存储服务同样支持可用区域的构造，用于往下拆分存储资源。"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml48(para)
msgid ""
"The OpenStack dashboard, OpenStack Identity, and OpenStack Object Storage "
"services are components that can each be deployed centrally in order to "
"serve multiple regions."
msgstr "OpenStack GUI，OpenStack认证，以及OpenStack对象存储等服务为了服务于多区域，这些组件需要部署在中心化位置。"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml53(title)
#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml155(para)
#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml22(para)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml27(para)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml51(para)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml131(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml18(para)
msgid "Storage"
msgstr "存储"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml54(para)
msgid ""
"With multiple OpenStack regions, having a single OpenStack Object Storage "
"service endpoint that delivers shared file storage for all regions is "
"desirable. The Object Storage service internally replicates files to "
"multiple nodes. The advantages of this are that, if a file placed into the "
"Object Storage service is visible to all regions, it can be used by "
"applications or workloads in any or all of the regions. This simplifies high"
" availability failover and disaster recovery rollback."
msgstr "在多个OpenStack region，实现单一的OpenStack对象存储服务端点的话，就需要实现所有的region共享文件存储。对象存储服务内部复制文件到多个节点。这样有一个优点，那就是如果一个文件存放在对象存储服务对于所有region都可见，那么它就可以在任何的或全部的region里的应用和负载所使用。这是简单的高可用失效恢复和灾难恢复回滚。"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml62(para)
msgid ""
"In order to scale the Object Storage service to meet the workload of "
"multiple regions, multiple proxy workers are run and load-balanced, storage "
"nodes are installed in each region, and the entire Object Storage Service "
"can be fronted by an HTTP caching layer. This is done so client requests for"
" objects can be served out of caches rather than directly from the storage "
"modules themselves, reducing the actual load on the storage network. In "
"addition to an HTTP caching layer, use a caching layer like Memcache to "
"cache objects between the proxy and storage nodes."
msgstr "为满足多region的负载理应扩展对象存储服务，那么多个代理运行，且拥有负载均衡，在每个region都安装存储节点，对象存储服务的入口前端配置HTTP缓存层都是必要的。这样的话，客户端请求对象时会访问缓存而不是直接到存储模块，可有效较少存储网络的负载。另外在HTTP缓存层，在代理和存储节点之间使用诸如Memcache可缓存对象。"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml71(para)
msgid ""
"If the cloud is designed without a single Object Storage Service endpoint "
"for multiple regions, and instead a separate Object Storage Service endpoint"
" is made available in each region, applications are required to handle "
"synchronization (if desired) and other management operations to ensure "
"consistency across the nodes. For some applications, having multiple Object "
"Storage Service endpoints located in the same region as the application may "
"be desirable due to reduced latency, cross region bandwidth, and ease of "
"deployment."
msgstr "如果在多个region的云被设计为不是单一的对象存储服务端点，而是在每个region中都有独立的对象存储服务端点的话，应用就需要掌控同步(如果必要)而且管理操作须确保跨节点的一致性。对于一些应用，在同样的region里访问多个对象存储服务端点意味着希望能够减少延迟，跨region带宽利用以及轻松的部署。"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml80(para)
msgid ""
"For the Block Storage service, the most important decisions are the "
"selection of the storage technology and whether or not a dedicated network "
"is used to carry storage traffic from the storage service to the compute "
"nodes."
msgstr "对于块存储服务来说，最重要的决定就是选择存储技术和是否使用专用网络用于从存储服务到计算节点的存储流量传输。"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml86(title)
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml417(para)
msgid "Networking"
msgstr "网络"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml87(para)
msgid ""
"When connecting multiple regions together there are several design "
"considerations. The overlay network technology choice determines how packets"
" are transmitted between regions and how the logical network and addresses "
"present to the application. If there are security or regulatory "
"requirements, encryption should be implemented to secure the traffic between"
" regions. For networking inside a region, the overlay network technology for"
" tenant networks is equally important. The overlay technology and the "
"network traffic of an application generates or receives can be either "
"complementary or be at cross purpose. For example, using an overlay "
"technology for an application that transmits a large amount of small packets"
" could add excessive latency or overhead to each packet if not configured "
"properly."
msgstr "当连接多个region到一起时需要考虑很多设计因素。覆盖网络技术的选择决定了网络包如何在region之间传输，以及如何给应用赋予逻辑网络和地址。如果有安全或监管需求，还得使用加密技术实现region之间的安全传输。在region内部网络，租户网络的覆盖网络技术亦同等重要，网络覆盖技术和应用生成或接受的网络流量可以是互补的或者交叉目的。例如，使用覆盖技术为一个应用，而中间传输使用了大量的小网络包，如果配置不当会引起大量的延迟或增大每个包的开销。"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml102(title)
#: ./doc/arch-design/introduction/section_methodology.xml166(term)
msgid "Dependencies"
msgstr "依赖"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml103(para)
msgid ""
"The architecture for a multi-site installation of OpenStack is dependent on "
"a number of factors. One major dependency to consider is storage. When "
"designing the storage system, the storage mechanism needs to be determined. "
"Once the storage type is determined, how it will be accessed is critical. "
"For example, we recommend that storage should use a dedicated network. "
"Another concern is how the storage is configured to protect the data. For "
"example, the recovery point objective (RPO) and the recovery time objective "
"(RTO). How quickly can the recovery from a fault be completed, will "
"determine how often the replication of data be required. Ensure that enough "
"storage is allocated to support the data protection strategy."
msgstr "对于一个多区域OpenStack安装架构来说，依赖于很多的因素，其中一个主要的依赖需要考虑的就是存储。当设计存储系统时，存储的机制需要决定。一旦存储的类型决定了，如何访问就成了重点。例如，我们建议存储使用专用网络。另外一个需要考虑的是如果配置存储来保护数据。例如恢复点目标(RPO)和恢复时间目标(RTO),如何快速的从完全失效中恢复，将决定复制数据如何频繁的需求。确保有足够的存储来分配，以支持数据保护策略。"

#: ./doc/arch-design/multi_site/section_architecture_multi_site.xml115(para)
msgid ""
"Networking decisions include the encapsulation mechanism that will be used "
"for the tenant networks, how large the broadcast domains should be, and the "
"contracted SLAs for the interconnects."
msgstr "网络决定包括用于租户网络的封装机制，广播域有多大，以及内部联通的服务水平协议。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml8(title)
#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml8(title)
#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml8(title)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml416(term)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml12(title)
#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml8(title)
#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml8(title)
#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml52(title)
#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml8(title)
msgid "User requirements"
msgstr "用户需求"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml9(para)
msgid ""
"A multi-site architecture is complex and has its own risks and "
"considerations, therefore it is important to make sure when contemplating "
"the design such an architecture that it meets the user and business "
"requirements."
msgstr "一个多区域架构是复杂的而且尤其自身的风险和考虑，因此确保考虑此架构的设计应满足用户和业务的需求显得异常重要。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml13(para)
#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml42(para)
#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml78(para)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml55(para)
#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml83(para)
#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml17(para)
#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml54(para)
msgid ""
"Many jurisdictions have legislative and regulatory requirements governing "
"the storage and management of data in cloud environments. Common areas of "
"regulation include:"
msgstr "很多辖区对于云环境中的数据的保管及管理都有相关的法律上或者监管上的要求。这些规章的常见领域包括："

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml18(para)
#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml47(para)
#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml83(para)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml60(para)
#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml88(para)
#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml22(para)
msgid ""
"Data retention policies ensuring storage of persistent data and records "
"management to meet data archival requirements."
msgstr "确保持久化数据的保管和记录管理以符合数据档案化需求的数据保留政策。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml23(para)
#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml52(para)
#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml88(para)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml65(para)
#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml93(para)
#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml27(para)
msgid ""
"Data ownership policies governing the possession and responsibility for "
"data."
msgstr "管理数据的所有权和责任的数据所有权政策。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml27(para)
#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml56(para)
#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml92(para)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml69(para)
#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml97(para)
#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml31(para)
msgid ""
"Data sovereignty policies governing the storage of data in foreign countries"
" or otherwise separate jurisdictions."
msgstr "管理位于外国或者其它辖区的数据存储问题的数据独立性政策。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml32(para)
msgid ""
"Data compliance policies governing types of information that needs to reside"
" in certain locations due to regular issues and, more importantly, cannot "
"reside in other locations for the same reason."
msgstr "数据合规性,管理由于监管上的问题因而特定类型的数据必须存放在特定的地点或者更重要的，由于相同的原因，不能够存放在其它地点的数据管理政策。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml38(para)
msgid ""
"Examples of such legal frameworks include the data protection framework of "
"the European Union (<link href=\"http://ec.europa.eu/justice/data-"
"protection\">http://ec.europa.eu/justice/data-protection</link>) and the "
"requirements of the Financial Industry Regulatory Authority (<link "
"href=\"http://www.finra.org/Industry/Regulation/FINRARules\">http://www.finra.org/Industry/Regulation/FINRARules</link>)"
" in the United States. Consult a local regulatory body for more information."
msgstr "相关的法律制度包括了有欧盟的数据保护框架(<link href=\"http://ec.europa.eu/justice/data-protection/\">http://ec.europa.eu/justice/data-protection/</link>)以及美国金融业监督管理局的要求(<link href=\"http://www.finra.org/Industry/Regulation/FINRARules\">http://www.finra.org/Industry/Regulation/FINRARules</link>)。请咨询当地的监管机构以了解更多相关信息。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml47(title)
msgid "Workload characteristics"
msgstr "负载特性"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml48(para)
msgid ""
"The expected workload is a critical requirement that needs to be captured to"
" guide decision-making. An understanding of the workloads in the context of "
"the desired multi-site environment and use case is important. Another way of"
" thinking about a workload is to think of it as the way the systems are "
"used. A workload could be a single application or a suite of applications "
"that work together. It could also be a duplicate set of applications that "
"need to run in multiple cloud environments. Often in a multi-site deployment"
" the same workload will need to work identically in more than one physical "
"location."
msgstr "预期的工作负荷是需要被捕获到指导决策的关键要求。理解负载在预想的多区域环境和用例上下文很重要。另外一个考虑负载的路径是想它怎么使用系统。一个负载可以是单个的应用或一组共同工作的应用。它也可以是在多个region中运行的多份应用的复制。通常在多区域部署的相同负载需要在多个不同物理地点运行相同的工作。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml59(para)
msgid ""
"This multi-site scenario likely includes one or more of the other scenarios "
"in this book with the additional requirement of having the workloads in two "
"or more locations. The following are some possible scenarios:"
msgstr "此多区域场景在本书中有一个或多个其他类似的场景，另外在两个或多个地点的额外负载需求。下面是可能一样的场景："

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml63(para)
msgid ""
"For many use cases the proximity of the user to their workloads has a direct"
" influence on the performance of the application and therefore should be "
"taken into consideration in the design. Certain applications require zero to"
" minimal latency that can only be achieved by deploying the cloud in "
"multiple locations. These locations could be in different data centers, "
"cities, countries or geographical regions, depending on the user requirement"
" and location of the users."
msgstr "对于很多案例来说用户的负载会直接影响到其应用的性能，因此需要将此纳入考虑范围。欲确保应用的延迟为零或尽可能的最小化，多地点唯一的实现就是在部署云时。这些地点可以是不同的数据中心，不同的城市，不同的国家或地理位置，取决于用户需求和当地用户。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml72(title)
msgid "Consistency of images and templates across different sites"
msgstr "镜像和模板在跨不同站点时要保持一致性。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml74(para)
msgid ""
"It is essential that the deployment of instances is consistent across the "
"different sites. This needs to be built into the infrastructure. If the "
"OpenStack Object Storage is used as a back end for the Image Service, it is "
"possible to create repositories of consistent images across multiple sites. "
"Having central endpoints with multiple storage nodes will allow for "
"consistent centralized storage for each and every site."
msgstr "在跨不同的站点有必要保持部署实例的一致性，这需要构建基础设施，如果为镜像服务提供的后端存储是OpenStack对象存储的话，这很轻松的就可跨多个站点建立一致性镜像的仓库。具有中央端点与多个存储节点将允许为每一个站点有一致的集中存储。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml81(para)
msgid ""
"Not using a centralized object store will increase operational overhead so "
"that a consistent image library can be maintained. This could include "
"development of a replication mechanism to handle the transport of images and"
" the changes to the images across multiple sites."
msgstr "不使用中心化的对象存储将会带来运维方面的问题，例如一致性的镜像库就需要维护，包括开发复制机制以掌控传输镜像和跨多站点的镜像变化。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml87(para)
msgid ""
"If high availability is a requirement to provide continuous infrastructure "
"operations, a basic requirement of high availability should be defined."
msgstr "如果高可用是提供持续基础设施运营的需求，那么高可用的基本需求就应该被定义。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml90(para)
msgid ""
"The OpenStack management components need to have a basic and minimal level "
"of redundancy. The simplest example is the loss of any single site has no "
"significant impact on the availability of the OpenStack services of the "
"entire infrastructure."
msgstr "OpenStack管理组件需要哪怕是最基本的或最小级别的冗余，举个最简单的例子，这样当任何一个站点失效时而不会受到显著的影响，因为有OpenStack服务依然可用。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml95(para)
msgid ""
"The <link href=\"http://docs.openstack.org/high-availability-"
"guide/content/\"><citetitle>OpenStack High Availability "
"Guide</citetitle></link> contains more information on how to provide "
"redundancy for the OpenStack components."
msgstr "<link href=\"http://docs.openstack.org/high-availability-guide/content/\"><citetitle>OpenStack 高可用指南</citetitle></link> 有着为OpenStack组件提供冗余更为详细的描述。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml100(para)
msgid ""
"Multiple network links should be deployed between sites to provide "
"redundancy for all components. This includes storage replication, which "
"should be isolated to a dedicated network or VLAN with the ability to assign"
" QoS to control the replication traffic or provide priority for this "
"traffic. Note that if the data store is highly changeable, the network "
"requirements could have a significant effect on the operational cost of "
"maintaining the sites."
msgstr "多网络链路应该在站点之间部署，以提供所有组件的冗余。这其中包括存储的复制，存储应该使用专用网络隔离，或者使用VLAN的QoS功能来控制复制流量，或者为该流量提供高的优先级。记住，如果数据存储经常改动，网络的需求就会显著影响到维护站点的运维成本。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml108(para)
msgid ""
"The ability to maintain object availability in both sites has significant "
"implications on the object storage design and implementation. It will also "
"have a significant impact on the WAN network design between the sites."
msgstr "维护对象可用性的能力会显著影响到对象存储的设计和实现，也会影响到站点之间的广域网网络设计。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml112(para)
msgid ""
"Connecting more than two sites increases the challenges and adds more "
"complexity to the design considerations. Multi-site implementations require "
"extra planning to address the additional topology complexity used for "
"internal and external connectivity. Some options include full mesh topology,"
" hub spoke, spine leaf, or 3d Torus."
msgstr "连接多于两个站点会增加挑战，会给设计考虑增加更多的复杂性。多站点实现需要额外的规划，增加交付内外部连通性的复杂拓扑，一些选项包括完全mesh拓扑，hub spoke,spine leaf,或3d Torus。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml118(para)
msgid ""
"Not all the applications running in a cloud are cloud-aware. If that is the "
"case, there should be clear measures and expectations to define what the "
"infrastructure can support and, more importantly, what it cannot. An example"
" would be shared storage between sites. It is possible, however such a "
"solution is not native to OpenStack and requires a third-party hardware "
"vendor to fulfill such a requirement. Another example can be seen in "
"applications that are able to consume resources in object storage directly. "
"These applications need to be cloud aware to make good use of an OpenStack "
"Object Store."
msgstr "不是所有运行在云中的应用都知道自己运行在云中。如果有这样的情况存在，应该清晰的去衡量和定义什么样的基础设施可以支持，但是更加重要的是什么样的基础设施不支持。举个例子，在站点之间支持共享存储。它是可能的，尽管OpenStack本身不支持这样的解决方案，需要第三方的硬件供应商来弥补这一需求。在举一个例子，应用可以直接消费对象存储，这些应用需要自己知道在使用OpenStack对象存储。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml129(title)
#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml39(title)
msgid "Application readiness"
msgstr "应用准备"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml130(para)
msgid ""
"Some applications are tolerant of the lack of synchronized object storage, "
"while others may need those objects to be replicated and available across "
"regions. Understanding of how the cloud implementation impacts new and "
"existing applications is important for risk mitigation and the overall "
"success of a cloud project. Applications may have to be written to expect an"
" infrastructure with little to no redundancy. Existing applications not "
"developed with the cloud in mind may need to be rewritten."
msgstr "一些应用可以容忍对象存储没有同步，但是也有另外的应用需要这些对象被复制且跨多个region可用。理解云如何实现会影响到新的和已有的应用，对于降低风险和整个云项目成功很重要。已经完成的应用期望基础设施并无冗余，已有的应用没有将运行在云中考虑的话就需要重写了。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml139(title)
#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml99(term)
#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml259(term)
#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml583(term)
#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml24(term)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml20(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml56(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml169(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml391(term)
#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml19(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml15(para)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml35(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml162(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml400(term)
#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml31(term)
msgid "Cost"
msgstr "成本"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml140(para)
msgid ""
"The requirement of having more than one site has a cost attached to it. The "
"greater the number of sites, the greater the cost and complexity. Costs can "
"be broken down into the following categories:"
msgstr "多个站点的需求带来更多的额外开销。更多的站点，意味着更多的开销和复杂性。开销可以细分为以下几类："

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml146(para)
msgid "Compute resources"
msgstr "计算资源"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml149(para)
msgid "Networking resources"
msgstr "网络资源"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml152(para)
msgid "Replication"
msgstr "重复"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml158(para)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml792(para)
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml286(para)
#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml126(para)
msgid "Management"
msgstr "管理"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml161(para)
msgid "Operational costs"
msgstr "运营成本"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml165(title)
msgid "Site loss and recovery"
msgstr "站点失效和恢复"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml166(para)
msgid ""
"Outages can cause loss of partial or full functionality of a site. "
"Strategies should be implemented to understand and plan for recovery "
"scenarios."
msgstr "中断会引起站点的部分或全部功能的尚失。理解并实现恢复策略，且要规划恢复方案。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml171(para)
msgid ""
"The deployed applications need to continue to function and, more "
"importantly, consideration should be taken of the impact on the performance "
"and reliability of the application when a site is unavailable."
msgstr "已经部署的应用需要持续的服务，且更加重要的，需要考虑由于站点的不可用带来的性能冲击和应用的可靠性。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml178(para)
msgid ""
"It is important to understand what will happen to the replication of objects"
" and data between the sites when a site goes down. If this causes queues to "
"start building up, consider how long these queues can safely exist until "
"something explodes."
msgstr "当一个站点失效时，理解在站点之间的对象和数据复制会发生什么很重要。如果这导致队列开始建立，要考虑到多长时间这些队列到什么事情爆炸发生之前可安全完成。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml185(para)
msgid ""
"Ensure determination of the method for resuming proper operations of a site "
"when it comes back online after a disaster. We recommend you architect the "
"recovery to avoid race conditions."
msgstr "确保在灾难发生之后，当业务恢复正常之前的这段时间内，恢复站点的正确操作的几种办法要决定下来。我们建议用户恢复的架构要避免竞争状态。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml192(title)
msgid "Compliance and geo-location"
msgstr "合规性和地理位置"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml193(para)
msgid ""
"An organization could have certain legal obligations and regulatory "
"compliance measures which could require certain workloads or data to not be "
"located in certain regions."
msgstr "一个组织须有一定的法律义务和法规遵从来衡量什么是需要的负载或数据能否存放在指定的地区。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml197(title)
msgid "Auditing"
msgstr "审计"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml198(para)
msgid ""
"A well thought-out auditing strategy is important in order to be able to "
"quickly track down issues. Keeping track of changes made to security groups "
"and tenant changes can be useful in rolling back the changes if they affect "
"production. For example, if all security group rules for a tenant "
"disappeared, the ability to quickly track down the issue would be important "
"for operational and legal reasons."
msgstr "为了能够快速的追查问题，一个经过好的经过深思熟虑的审计策略是非常重要的。对于安全组和租户的变动保持跟踪，在生产环境中可用于回滚，例如，如果一个租户的安全组规则消失了，能够快速追查问题的能力对于运维来说很重要。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml206(title)
msgid "Separation of duties"
msgstr "职责分工"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml207(para)
msgid ""
"A common requirement is to define different roles for the different cloud "
"administration functions. An example would be a requirement to segregate the"
" duties and permissions by site."
msgstr "一个常见的需求是为不同的云管理功能定义不同的角色。此例即是站点需要合并职责和权限的需求。"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml212(title)
msgid "Authentication between sites"
msgstr "站点之间的认证"

#: ./doc/arch-design/multi_site/section_user_requirements_multi_site.xml213(para)
msgid ""
"Ideally it is best to have a single authentication domain and not need a "
"separate implementation for each and every site. This will, of course, "
"require an authentication mechanism that is highly available and distributed"
" to ensure continuous operation. Authentication server locality is also "
"something that might be needed as well and should be planned for."
msgstr "理想中最好是有一个单一的认证域而不是在每个站点中分离的去实现。这当然会要求认证机制是高可用和分布式的确定持续可操作。局部认证服务也需要好好的规划。"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml86(None)
msgid ""
"@@image: '../figures/Multi-Site_Customer_Edge.png'; "
"md5=01850cf774e7075bd7202c6e7f087f36"
msgstr "@@image: '../figures/Multi-Site_Customer_Edge.png'; md5=01850cf774e7075bd7202c6e7f087f36"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml190(None)
msgid ""
"@@image: '../figures/Multi-site_Geo_Redundant_LB.png'; "
"md5=c94a96f6084c2e50a0eb6846f6fde479"
msgstr "@@image: '../figures/Multi-site_Geo_Redundant_LB.png'; md5=c94a96f6084c2e50a0eb6846f6fde479"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml222(None)
msgid ""
"@@image: '../figures/Multi-Site_shared_keystone1.png'; "
"md5=eaef18e7f04eec7e3f8968ad69aed7d3"
msgstr "@@image: '../figures/Multi-Site_shared_keystone1.png'; md5=eaef18e7f04eec7e3f8968ad69aed7d3"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml12(title)
#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml8(title)
#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml8(title)
#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml8(title)
#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml8(title)
msgid "Prescriptive examples"
msgstr "示例"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml13(para)
msgid ""
"Based on the needs of the intended workloads, there are multiple ways to "
"build a multi-site OpenStack installation. Below are example architectures "
"based on different requirements. These examples are meant as a reference, "
"and not a hard and fast rule for deployments. Use the previous sections of "
"this chapter to assist in selecting specific components and implementations "
"based on specific needs."
msgstr "基于所需要专注的负载，构建多区域OpenStack安装有好几种办法。下面的架构例子基于不同的需求，这些例子仅仅用作参考，对于部署不是硬性和快速的规则。使用前面本章前几节来帮助基于特殊的需求选择特定的组件和实现。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml20(para)
msgid ""
"A large content provider needs to deliver content to customers that are "
"geographically dispersed. The workload is very sensitive to latency and "
"needs a rapid response to end-users. After reviewing the user, technical and"
" operational considerations, it is determined beneficial to build a number "
"of regions local to the customer's edge. In this case rather than build a "
"few large, centralized data centers, the intent of the architecture is to "
"provide a pair of small data centers in locations that are closer to the "
"customer. In this use case, spreading applications out allows for different "
"horizontal scaling than a traditional compute workload scale. The intent is "
"to scale by creating more copies of the application in closer proximity to "
"the users that need it most, in order to ensure faster response time to user"
" requests. This provider will deploy two datacenters at each of the four "
"chosen regions. The implications of this design are based around the method "
"of placing copies of resources in each of the remote regions. Swift objects,"
" Glance images, and block storage will need to be manually replicated into "
"each region. This may be beneficial for some systems, such as the case of "
"content service, where only some of the content needs to exist in some but "
"not all regions. A centralized Keystone is recommended to ensure "
"authentication and that access to the API endpoints is easily manageable."
msgstr "一个大型的内容提供商需要为分散在不同地理位置的客户交付内容，此负载对延迟极为敏感，而且还得快速响应最终用户。经过用户的回顾，技术和运营的考虑，最后决定构建有利于本地客户边缘的几个region，在此用例中，没有选择构建几个大型的、中心化的数据中心，而是架构的意图很明确，在接近最终用户的地方提供几个小型的数据中心，在此用例中，取代传统计算负载扩展的方式，而使用不同的横向扩展快速扩充应用，为了确保用户需求的快速响应时间，为贴近用户最迫切的需求，专注于通过创建更多应用的复制的扩展。此供应商会在每4个所选择的region部署两个数据中心，此设计的实现是围绕这每个远端的region复制资源的方法。Swift对象存储服务，Glance镜像服务，以及块存储在每个region都需要手动的复制，这也许有利于一些系统，比如内容服务的用例，他们的一些内容仅出现在部分而不是全部的region。建议建立一个中心化的Keystone，确保认证服务和API端点访问可轻松管理。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml44(para)
msgid ""
"Installation of an automated DNS system such as Designate is highly "
"recommended. Unless an external Dynamic DNS system is available, application"
" administrators will need a way to manage the mapping of which application "
"copy exists in each region and how to reach it. Designate will assist by "
"making the process automatic and by populating the records in the each "
"region's zone."
msgstr "强烈建议安装一个自动的DNS系统，比如Designate。除非有外部的动态DNS系统可用，应用管理员会需要一个管理办法，在每个region中映射那个应用复制出现以及如何访问它们。Desginate将会将这些流程自动化，而且会填充记录到每个region的区。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml51(para)
msgid ""
"Telemetry for each region is also deployed, as each region may grow "
"differently or be used at a different rate. Ceilometer will run to collect "
"each region's metrics from each of the controllers and report them back to a"
" central location. This is useful both to the end user and the administrator"
" of the OpenStack environment. The end user will find this method useful, in"
" that it is possible to determine if certain locations are experiencing "
"higher load than others, and take appropriate action. Administrators will "
"also benefit by possibly being able to forecast growth per region, rather "
"than expanding the capacity of all regions simultaneously, therefore "
"maximizing the cost-effectiveness of the multi-site design."
msgstr "Telemetry也会部署到每个region中，虽然每个region的增长可能不一样或者使用的频率也不同。Ceilometer将运行在每个region中的监测数据，然后回报到中心地点。这在OpenStack环境中对于最终用户也好，对于系统管理员也好，都有很大的用处，使最终用户根据某些局部的负载高于其他地方做出决定而成为可能，然后采取相应的措施。使系统管理员在每个region预测增长成为可能，而不是去盲目的同等看待所有region而去扩展它们，因此对于多区域设计是最大化的节省资源。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml64(para)
msgid ""
"One of the key decisions of running this sort of infrastructure is whether "
"or not to provide a redundancy model. Two types of redundancy and high "
"availability models in this configuration will be implemented. The first "
"type revolves around the availability of the central OpenStack components. "
"Keystone will be made highly available in three central data centers that "
"will host the centralized OpenStack components. This prevents a loss of any "
"one of the regions causing an outage in service. It also has the added "
"benefit of being able to run a central storage repository as a primary cache"
" for distributing content to each of the regions."
msgstr "运行此类基础设施的一个关键决定是是否提供冗余模式。在此配置中有两类冗余和高可用模式需要被实现。第一类围绕中心化OpenStack组件的可用性，Keystone会基于三个中心化的数据中心而形成高可用，而成为中心化的OpenStack组件。这会防止任何的region失效而导致服务不可用。这也会为在每个region运行着中央存储仓库作为主要缓存，用于分发内容，带来额外的好处。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml75(para)
msgid ""
"The second redundancy topic is that of the edge data center itself. A second"
" data center in each of the edge regional locations will house a second "
"region near the first. This ensures that the application will not suffer "
"degraded performance in terms of latency and availability."
msgstr "第二类容易是边缘数据中心本身。在每个边缘region地带的第二个数据中心会在靠近第一个region边上承载起第二个region的功用。这确保应用不会遭受延迟和可用性方面的性能下降。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml80(para)
msgid ""
"This figure depicts the solution designed to have both a centralized set of "
"core data centers for OpenStack services and paired edge data centers:"
msgstr "此示意图描述所设计的解决方案，同时拥有一个为OpenStack服务的中心化的核心数据中心和两个边缘化的数据中心："

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml90(title)
msgid "Geo-redundant load balancing"
msgstr "地理冗余负载均衡"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml91(para)
msgid ""
"A large-scale web application has been designed with cloud principles in "
"mind. The application is designed provide service to application store, on a"
" 24/7 basis. The company has typical 2-tier architecture with a web front-"
"end servicing the customer requests and a NoSQL database back end storing "
"the information."
msgstr "在脑子里想着一个大型扩展的web应用被设计为遵循云的原则。应用被设计为在应用商店中7*24的提供服务，公司拥有典型的2层架构，前端是用户需求的web服务，后端是用NoSQL数据库存放信息。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml97(para)
msgid ""
"As of late there has been several outages in number of major public cloud "
"providersusually due to the fact these applications were running out of a "
"single geographical location. The design therefore should mitigate the "
"chance of a single site causing an outage for their business."
msgstr "最后，经常由于一些因素他们的应用运行在单个地理位置,主要的公有云提供者因此会停止一些服务。因此设计中要考虑如何降低由于单个站点引起的中断业务的几率。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml102(para)
#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml30(para)
msgid "The solution would consist of the following OpenStack components:"
msgstr "解决方案将由下列OpenStack组件组成："

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml106(para)
#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml34(para)
msgid ""
"A firewall, switches and load balancers on the public facing network "
"connections."
msgstr "防火墙、交换机、以及负载均衡设备在公网中直接面向全网的连接。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml110(para)
msgid ""
"OpenStack Controller services running, Networking, dashboard, Block Storage "
"and Compute running locally in each of the three regions. The other "
"services, Identity, Orchestration, Telemetry, Image Service and Object "
"Storage will be installed centrallywith nodes in each of the region "
"providing a redundant OpenStack Controller plane throughout the globe."
msgstr "运行着OpenStack控制器服务的：网络服务、GUI界面、块存储以及计算服务，都运行在每三个region的本地。其他的服务：认证、Orchestration、Telemetry、镜像服务以及对象存储会安装到每个region的中心节点，通过全局来提供冗余的OpenStack控制器。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml120(para)
#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml44(para)
msgid "OpenStack Compute nodes running the KVM hypervisor."
msgstr "OpenStack计算节点运行着KVM的hypervisor。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml124(para)
msgid ""
"OpenStack Object Storage for serving static objects such as images will be "
"used to ensure that all images are standardized across all the regions, and "
"replicated on a regular basis."
msgstr "OpenStack对象存储为静态内容提供服务，例如图片，确保所有的图片都通过标准化的存于所有的region，且使用定期复制。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml130(para)
msgid ""
"A Distributed DNS service available to all regionsthat allows for dynamic "
"update of DNS records of deployed instances."
msgstr "在所有的region中都有一个分布式DNS服务可用，允许动态的为已经部署的实例更新DNS记录。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml135(para)
msgid ""
"A geo-redundant load balancing service will be used to service the requests "
"from the customers based on their origin."
msgstr "基于地理位置的负载均衡服务用于顾客过去使用的需求。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml140(para)
msgid ""
"An autoscaling heat template will used to deploy the application in the "
"three regions. This template will include:"
msgstr "在三个region中都使用自动伸缩heat模板来部署应用。此模板包括："

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml145(para)
msgid "Web Servers, running Apache."
msgstr "Web服务，运行 Apache。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml148(para)
msgid ""
"Appropriate <literal>user_data</literal> to populate the central DNS servers"
" upon instance launch."
msgstr "当实例启动时，中心DNS服务器会填写合适的<literal>user_data</literal>。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml152(para)
msgid ""
"Appropriate Telemetry alarms that maintain state of the application and "
"allow for handling of region or instance failure."
msgstr "正确的Telemetry警告，维护着应用的状态且允许掌控region或实例失效。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml157(para)
msgid ""
"Another autoscaling Heat template will be used to deploy a distributed "
"MongoDB shard over the three locationswith the option of storing required "
"data on a globally available swift container. according to the usage and "
"load on the database serveradditional shards will be provisioned according "
"to the thresholds defined in Telemetry."
msgstr "另外一个自动伸缩的Heat模板会用于部署分布式MongoDB shard，在全部的三个地点存储全局可用的swift容器数据。基于数据库服务所使用的和负载，以及Telemetry定义的阀值，来决定是否增加额外的shard。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml163(para)
msgid ""
"The reason that three regions were selected here was because of the fear of "
"having abnormal load on a single region in the event of a failure. Two data "
"center would have been sufficient had the requirements been met."
msgstr "这里选择三个region的原因是由于担心偶然的异常负载在单个region会引发失效。两个数据中心足够可以满足需求。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml167(para)
msgid ""
"Orchestration is used because of the built-in functionality of autoscaling "
"and auto healing in the event of increased load. Additional configuration "
"management tools, such as Puppet or Chef could also have been used in this "
"scenario, but were not chosen due to the fact that Orchestration had the "
"appropriate built-in hooks into the OpenStack cloudwhereas the other tools "
"were external and not native to OpenStack. In additionsince this deployment "
"scenario was relatively straight forwardthe external tools were not needed."
msgstr "这里用到Orchestration是由于自动伸缩的内部功能和偶然增长的负载后的自动复原功能。另外一些配置管理工具，如Puppet或Chef也会在此场景下用到，但是不会被选择用于Orchestration，在OpenStack云中它们做不到内部的钩子，也不是OpenStack本身的工具。此外，其实相对简单的场景根本用不到这些额外的工具。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml176(para)
msgid ""
"OpenStack Object Storage is used here to serve as a back end for the Image "
"Service since was the most suitable solution for a globally distributed "
"storage solutionwith its own replication mechanism. Home grown solutions "
"could also have been used including the handling of replicationbut were not "
"chosen, because Object Storage is already an intricate part of the "
"infrastructureand proven solution."
msgstr "OpenStack对象存储在这里的使用，是为镜像服务提供后端支撑，而镜像存储最合适的解决方案就是全局的分布式存储解决方案，而对象存储恰恰满足其自身的复制机制。本土的解决方案也已经被使用，包括复制的处理，但都没有选择，因为对象存储已经是基础设施和成熟的解决方案的复杂部分。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml184(para)
msgid ""
"An external load balancing service was used and not the LBaaS in OpenStack "
"because the solution in OpenStack is not redundant and does not have any "
"awareness of geo location."
msgstr "一个额外的负载均衡服务将被使用，而不是OpenStack的LBaaS,因为OpenStack的LBaaS在OpenStack中不是冗余的解决方案而且不具有地理位置的任何特征。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml193(title)
msgid "Location-local service"
msgstr "本地服务"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml194(para)
msgid ""
"A common use for a multi-site deployment of OpenStack, is for creating a "
"Content Delivery Network. An application that uses a location-local "
"architecture will require low network latency and proximity to the user, in "
"order to provide an optimal user experience, in addition to reducing the "
"cost of bandwidth and transit, since the content resides on sites closer to "
"the customer, instead of a centralized content store that would require "
"utilizing higher cost cross country links."
msgstr "多区域OpenStack部署常见的一个场景是创建内容分发网络CDN，一个应用使用本地架构会有低网络延迟和接近用户的需求，为了提供给用户极致的体验，为了减少带宽和传送的费用，因此将内容输送到更加接近客户，而替代中心化的内容存储这种需要跨国连接的高额费用。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml203(para)
msgid ""
"This architecture usually includes a geo-location component that places user"
" requests at the closest possible node. In this scenario, 100% redundancy of"
" content across every site is a goal rather than a requirement, with the "
"intent being to maximize the amount of content available that is within a "
"minimum number of network hops for any given end user. Despite these "
"differences, the storage replication configuration has significant overlap "
"with that of a geo-redundant load balancing use case."
msgstr "此架构通常包括一个放置在最接近节点的用户需求的地理位置组件。在此场景下，目标是跨所有站点的100%冗余，已经不是一个需求，意图是为任何指定的最终用户有最大化内容可用，最小的网络hop跳数。尽管他们不一样，存储冗余配置和地理位置冗余负载均衡用例有明显的重叠。"

#: ./doc/arch-design/multi_site/section_prescriptive_examples_multi_site.xml212(para)
msgid ""
"In this example, the application utilizing this multi-site OpenStack install"
" that is location aware would launch web server or content serving instances"
" on the compute cluster in each site. Requests from clients will first be "
"sent to a global services load balancer that determines the location of the "
"client, then routes the request to the closest OpenStack site where the "
"application completes the request."
msgstr "在此例中，应用利用此多区域OpenStack基于位置敏感的安装，在每个站点的计算集群中启动web服务和内容服务的实例，来自客户的请求会第一时间发送到全局服务负载均衡器，然后负载均衡器会决定客户的位置，当应用完成请求，路由会将请求发给最近的OpenStack站点。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml8(title)
#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml8(title)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml12(title)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml90(title)
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml12(title)
#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml12(title)
#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml12(title)
#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml8(title)
msgid "Technical considerations"
msgstr "技术因素"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml9(para)
msgid ""
"There are many technical considerations to take into account with regard to "
"designing a multi-site OpenStack implementation. An OpenStack cloud can be "
"designed in a variety of ways to handle individual application needs. A "
"multi-site deployment will have additional challenges compared to single "
"site installations and will therefore be a more complex solution."
msgstr "设计一个多区域OpenStack有许多的技术因素需要被纳入有关的账单。一个OpenStack云有很多中办法来设计，去掌控分离的应用需求，一个多区域的部署相比于单一站点的安装会带来额外的挑战，也因此将会是一个更加复杂的解决方案。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml16(para)
msgid ""
"When determining capacity options be sure to take into account not just the "
"technical issues, but also the economic or operational issues that might "
"arise from specific decisions."
msgstr "当决定容量要算计的不仅仅是技术问题，还要考虑经济和运营问题，这些都可能会带来更多麻烦。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml20(para)
msgid ""
"Inter-site link capacity describes the capabilities of the connectivity "
"between the different OpenStack sites. This includes parameters such as "
"bandwidth, latency, whether or not a link is dedicated, and any business "
"policies applied to the connection. The capability and number of the links "
"between sites will determine what kind of options may be available for "
"deployment. For example, if two sites have a pair of high-bandwidth links "
"available between them, it may be wise to configure a separate storage "
"replication network between the two sites to support a single Swift endpoint"
" and a shared object storage capability between them. (An example of this "
"technique, as well as a configuration walk-through, is available at <link "
"href=\"http://docs.openstack.org/developer/swift/replication_network.html"
"#dedicated-replication-"
"network\">http://docs.openstack.org/developer/swift/replication_network.html"
"#dedicated-replication-network</link>). Another option in this scenario is "
"to build a dedicated set of tenant private networks across the secondary "
"link using overlay networks with a third party mapping the site overlays to "
"each other."
msgstr "站点间的链接能力描述的是在不同的OpenStack站点之间连通性的能力。这里包含的参数有带宽、延迟，线路是否是专用、以及任何连接的业务规则认可。站点之间连接的能力和数量将决定部署时何种属性可用。例如，如果在两个站点之间有一组高带宽的连接可用，也许就想配置一个在两个站点之间分离的存储复制网络，以支持单一的Swift端点和共享的对象存储。 (此技术的一个更好的例子，详细的配置，请参阅 <link href=\"http://docs.openstack.org/developer/swift/replication_network.html#dedicated-replication-network\">http://docs.openstack.org/developer/swift/replication_network.html#dedicated-replication-network</link>)。此场景的另外一个属性是构建专用的一组租户私有网络，在第二条线路使用覆盖网络，一个第三方的映射在彼此的站点覆盖。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml38(para)
msgid ""
"The capacity requirements of the links between sites will be driven by "
"application behavior. If the latency of the links is too high, certain "
"applications that use a large number of small packets, for example RPC "
"calls, may encounter issues communicating with each other or operating "
"properly. Additionally, OpenStack may encounter similar types of issues. To "
"mitigate this, tuning of the Identity service call timeouts may be necessary"
" to prevent issues authenticating against a central Identity service."
msgstr "应用的行为驱动着站点之间线路能力的需求，如果线路的延迟太高，某些应用使用大量的小包，比如RPC调用，就会遭遇彼此之间的通信问题和正确操作的问题。另外，OpenStack会遇到类似的问题，为了降低这些问题的发生几率，优化认证服务调用的超时时间就非常的有必要，这样可以防止认证在中心化身份服务的冲突。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml47(para)
msgid ""
"Another capacity consideration when it comes to networking for a multi-site "
"deployment is the available amount and performance of overlay networks for "
"tenant networks. If using shared tenant networks across zones, it is "
"imperative that an external overlay manager or controller be used to map "
"these overlays together. It is necessary to ensure the amount of possible "
"IDs between the zones are identical. Note that, as of the Icehouse release, "
"OpenStack Networking was not capable of managing tunnel IDs across "
"installations. This means that if one site runs out of IDs, but other does "
"not, that tenant's network will be unable to reach the other site."
msgstr "另外关于容量的考虑因素，当它涉及到多站点部署网络的可用量时，以及对于租户网络的负载网络的性能。如果使用了跨zone的共享租户网络，那么将外部覆盖管理或控制器映射到一起就很迫切。非常有必要确保zone之间的ID量一致。记住，在Icehouse版本发布时，OpenStack网络还没有在安装时拥有管理隧道ID的能力，这意味着如果其中一个站点用完了ID，但是另外一个站点没有用完，租户网络将无法达到其它站点。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml58(para)
msgid ""
"Capacity can take other forms as well. The ability for a region to grow "
"depends on scaling out the number of available compute nodes. This topic is "
"covered in greater detail in the section for compute-focused deployments. "
"However, it should be noted that cells may be necessary to grow an "
"individual region beyond a certain point. This point depends on the size of "
"your cluster and the ratio of virtual machines per hypervisor."
msgstr "容量还有其它形式的表现，region增长的能力依赖于横向扩展更多可用的计算节点。此话题在章节计算型中会谈到更多的细节。总之，务必记得也许需要为各个region增加cell以超过一定的点，此点又依赖于集群的大小和每hypervisor对虚拟机的比例。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml66(para)
msgid ""
"A third form of capacity comes in the multi-region-capable components of "
"OpenStack. Centralized Object Storage is capable of serving objects through "
"a single namespace across multiple regions. Since this works by accessing "
"the object store via swift proxy, it is possible to overload the proxies. "
"There are two options available to mitigate this issue. The first is to "
"deploy a large number of swift proxies. The drawback to this is that the "
"proxies are not load-balanced and a large file request could continually hit"
" the same proxy. The other way to mitigate this is to front-end the proxies "
"with a caching HTTP proxy and load balancer. Since swift objects are "
"returned to the requester via HTTP, this load balancer would alleviate the "
"load required on the swift proxies."
msgstr "第三种形式的容量表现在multi-region-capable 的OpenStack组件，中心化的对象存储在跨多region通过单一的命名空间能够服务对象。此工作方式由swift代理来访问对象信息，因此是有可能代理过度负载。有两种方法可减低此问题，第一，部署大量的swift代理，此方法的缺陷在于代理没有负载均衡，大量的文件请求会访问同一个proxy。第二种降低负载的办法是在代理的前端使用HTTP代理缓存和负载均衡器。因此swift对象会通过HTTP来响应请求，此负载均衡器能缓和swift代理的负载请求。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml79(title)
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml215(title)
#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml230(title)
msgid "Utilization"
msgstr "量力而行"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml80(para)
msgid ""
"While constructing a multi-site OpenStack environment is the goal of this "
"guide, the real test is whether an application can utilize it."
msgstr "构建一个多区域OpenStack环境是本书的目的，但真正的考验来自于能否有一个应用能够利用好。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml83(para)
msgid ""
"Identity is normally the first interface for the majority of OpenStack "
"users. Interacting with the Identity service is required for almost all "
"major operations within OpenStack. Therefore, it is important to ensure that"
" you provide users with a single URL for Identity service authentication. "
"Equally important is proper documentation and configuration of regions "
"within the Identity service. Each of the sites defined in your installation "
"is considered to be a region in Identity nomenclature. This is important for"
" the users of the system, when reading Identity documentation, as it is "
"required to define the region name when providing actions to an API endpoint"
" or in the dashboard."
msgstr "身份是多数OpenStack用户的第一道“门槛”，对于绝大多数OpenStack的主要操作都有和身份服务互动的需求，因此，确保你为用户提供身份认证服务单一的URL非常重要，同样重要的是身份服务的正确文档和配置region。在你安装时考虑好每个站点定义的region的身份命名空间，这对于系统管理很重要，当阅读身份文档时，它会要求当在API端点或GUI界面执行某些操作时所定义的region名称。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml94(para)
msgid ""
"Load balancing is another common issue with multi-site installations. While "
"it is still possible to run HAproxy instances with Load-Balancer-"
"as-a-Service, these will be local to a specific region. Some applications "
"may be able to cope with this via internal mechanisms. Others, however, may "
"require the implementation of an external system including global services "
"load balancers or anycast-advertised DNS."
msgstr "负载均衡是安装多站点OpenStack另外一个常见的问题，它可能运行着负载均衡即服务的HAproxy实例，这些可能是本地一个特定的region，一些应用也许通过内部机制来应对这种情况，另外，也许需要外部的系统来实现，诸如全局服务负载均衡器或者anycast-advertised DNS。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml102(para)
msgid ""
"Depending on the storage model chosen during site design, storage "
"replication and availability will also be a concern for end-users. If an "
"application is capable of understanding regions, then it is possible to keep"
" the object storage system separated by region. In this case, users who want"
" to have an object available to more than one region will need to do the "
"cross-site replication themselves. With a centralized swift proxy, however, "
"the user may need to benchmark the replication timing of the Object Storage "
"back end. Benchmarking allows the operational staff to provide users with an"
" understanding of the amount of time required for a stored or modified "
"object to become available to the entire environment."
msgstr "取决于在设计站点时的选择的存储模式，存储的复制和可用性也是最终用户所关心的。如果一个应用有理解region的能力，那么它可能会保持通过region分离的对象存储系统，在此种情形下，用户需要在多个region访问对象的话就需要去自己去跨站点复制，基于中心化的swift代理，用户也许需要后端对象存储的复制基准时间。测试基准允许运维人员提供给用户可以理解的存储需求的总计时间或者是更改对象使之在整个环境中可用。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml114(title)
#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml432(title)
#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml387(term)
#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml120(term)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml590(title)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml96(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml177(term)
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml257(title)
#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml253(title)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml18(para)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml42(term)
#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml12(para)
#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml119(term)
msgid "Performance"
msgstr "性能"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml115(para)
msgid ""
"Determining the performance of a multi-site installation involves "
"considerations that do not come into play in a single-site deployment. Being"
" a distributed deployment, multi-site deployments incur a few extra "
"penalties to performance in certain situations."
msgstr "决定多区域安装的性能所包含的考虑因素和在单站点部署是不一样的，作为分布式部署，多区域部署在一些场景中会遭遇一些额外的性能瓶颈。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml120(para)
msgid ""
"Since multi-site systems can be geographically separated, they may have "
"worse than normal latency or jitter when communicating across regions. This "
"can especially impact systems like the OpenStack Identity service when "
"making authentication attempts from regions that do not contain the "
"centralized Identity implementation. It can also affect certain applications"
" which rely on remote procedure call (RPC) for normal operation. An example "
"of this can be seen in High Performance Computing workloads."
msgstr "尽管多区域系统可以基于地理位置分离，它们会在跨region通信时遭遇糟糕的延迟和抖动。这种情况尤其影响系统的如OpenStack身份服务从region做认证尝试时没有实现中心化的身份服务。它也会影响到一些应用如远程过程调用(RPC)的正常操作，在高性能计算负载型中此类问题很常见。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml129(para)
msgid ""
"Storage availability can also be impacted by the architecture of a multi-"
"site deployment. A centralized Object Storage service requires more time for"
" an object to be available to instances locally in regions where the object "
"was not created. Some applications may need to be tuned to account for this "
"effect. Block Storage does not currently have a method for replicating data "
"across multiple regions, so applications that depend on available block "
"storage will need to manually cope with this limitation by creating "
"duplicate block storage entries in each region."
msgstr "在一个多区域部署中，存储可用性也会影响到架构。一个中心化的对象存储服务需要在region中为实例本地存取对象中频繁的使用，在对象没有建立的地方。一些应用也许为此而需要作出相应的调整。块存储目前还没有跨多个region的复制数据的方法，所以应用若依赖可用的块存储的话，需要手动的复制，由于这种限制导致在每个region都要创建重复的块存储。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml139(title)
#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml163(title)
#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml630(term)
#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml191(term)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml778(title)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml160(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml435(term)
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml268(title)
#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml107(title)
#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml47(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml448(term)
#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml136(term)
msgid "Security"
msgstr "安全性"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml140(para)
msgid ""
"Securing a multi-site OpenStack installation also brings extra challenges. "
"Tenants may expect a tenant-created network to be secure. In a multi-site "
"installation the use of a non-private connection between sites may be "
"required. This may mean that traffic would be visible to third parties and, "
"in cases where an application requires security, this issue will require "
"mitigation. Installing a VPN or encrypted connection between sites is "
"recommended in such instances."
msgstr "多区域OpenStack安装的安全会来带额外的挑战，租户会为了安全会建立一个租户创建的网络。在多区域站点安装中也许没有需求去使用非私有网络来连接站点，这意味着流量对于第三方来说是可见的，假如应用对安全有需求，这就是个问题需要去解决，安全一VPN或者将连接加密在站点之间，在此情形下就非常有必要。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml148(para)
msgid ""
"Another security consideration with regard to multi-site deployments is "
"Identity. Authentication in a multi-site deployment should be centralized. "
"Centralization provides a single authentication point for users across the "
"deployment, as well as a single point of administration for traditional "
"create, read, update and delete operations. Centralized authentication is "
"also useful for auditing purposes because all authentication tokens "
"originate from the same source."
msgstr "另外的多区域部署安全需要考虑的是身份，在多区域云中认证服务需要中心化，所谓的中心化就是在部署中为用户提供单一的认证点，以及管理这个点的创建、读取、更新和删除的原有操作。中心化的认证也对审计目的有用，因为所有的认证令牌都来自同一个源。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml157(para)
msgid ""
"Just as tenants in a single-site deployment need isolation from each other, "
"so do tenants in multi-site installations. The extra challenges in multi-"
"site designs revolve around ensuring that tenant networks function across "
"regions. Unfortunately, OpenStack Networking does not presently support a "
"mechanism to provide this functionality, therefore an external system may be"
" necessary to manage these mappings. Tenant networks may contain sensitive "
"information requiring that this mapping be accurate and consistent to ensure"
" that a tenant in one site does not connect to a different tenant in another"
" site."
msgstr "就像在单站点部署的租户需要彼此隔离，在多区域安装中的租户也一样，在多区域设计的额外挑战是围绕着如何确保跨region的租户网络功能，不幸的是，OpenStack网络所提供的功能还不支持此种机制，因为需要外部的系统来管理这些映射，租户网络包含的敏感信息需要这种映射的精准和一致，以确保在一个站点的租户不会联系到另外一个站点的不同租户。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml169(title)
#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml560(para)
#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml667(title)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml505(title)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml366(para)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml472(title)
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml360(title)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml378(para)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml488(title)
msgid "OpenStack components"
msgstr "OpenStack 组件"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml170(para)
msgid ""
"Most OpenStack installations require a bare minimum set of pieces to "
"function. These include the OpenStack Identity (keystone) for "
"authentication, OpenStack Compute (nova) for compute, OpenStack Image "
"Service (glance) for image storage, OpenStack Networking (neutron) for "
"networking, and potentially an object store in the form of OpenStack Object "
"Storage (swift). Bringing multi-site into play also demands extra components"
" in order to coordinate between regions. Centralized Identity service is "
"necessary to provide the single authentication point. Centralized dashboard "
"is also recommended to provide a single login point and a mapped experience "
"to the API and CLI options available. If necessary, a centralized Object "
"Storage service may be used and will require the installation of the swift "
"proxy service."
msgstr "大多数的OpenStack安装需要一个最小集合的功能，这些包括提供认证的OpenStack 认证(keystone)、OpenStack计算(nova)、提供镜像存储的OpenStack镜像服务(glance)、提供网络服务的OpenStack 网络(neutron)、以及可能的对象存储OpenStack对象存储(swift)。多站点的建设会带来额外的组件需求，如为了region之间的协同完成某任务，中心化的认证服务是提供单点认证的必要服务，中心化的GUI界面提供单点登录和API/CLI访问的统一入口。如果有必要，一个中心化的对象存储服务也大有用处，当然这会要求安装swift代理服务。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml184(para)
msgid ""
"It may also be helpful to install a few extra options in order to facilitate"
" certain use cases. For instance, installing designate may assist in "
"automatically generating DNS domains for each region with an automatically-"
"populated zone full of resource records for each instance. This facilitates "
"using DNS as a mechanism for determining which region would be selected for "
"certain applications."
msgstr "一些额外的选项安装会帮助改进一些场景，对于实例来说，安装Designate为每个region自动生成DNS域，为每个实例自动记录zone所有的资源信息，这种使用DNS机制会改进决策，为确定的应用选择那个region。"

#: ./doc/arch-design/multi_site/section_tech_considerations_multi_site.xml191(para)
msgid ""
"Another useful tool for managing a multi-site installation is Orchestration "
"(heat). The Orchestration module allows the use of templates to define a set"
" of instances to be launched together or for scaling existing sets. It can "
"also be used to setup matching or differentiated groupings based on regions."
" For instance, if an application requires an equally balanced number of "
"nodes across sites, the same heat template can be used to cover each site "
"with small alterations to only the region name."
msgstr "另外一个管理多区域安装的工具是Orchestration(heat)。Orchestration模块允许使用模板来定义一组实例，来一起启动或者是扩展已有的实例。它也可用于基于region的匹配设置或比较各组的不同。对于实例来说，如果一个应用要求在跨站点平均负载到多个节点，相同的heat模板可用于覆盖到每个站点，改动很小仅仅是一个region的名称。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml9(para)
msgid ""
"When you design an OpenStack network architecture, you must consider layer-2"
" and layer-3 issues. Layer-2 decisions involve those made at the data-link "
"layer, such as the decision to use Ethernet versus Token Ring. Layer-3 "
"decisions involve those made about the protocol layer and the point when IP "
"comes into the picture. As an example, a completely internal OpenStack "
"network can exist at layer 2 and ignore layer 3 however, in order for any "
"traffic to go outside of that cloud, to another network, or to the Internet,"
" a layer-3 router or switch must be involved."
msgstr "当您设计 OpenStack 网络架构时，你必须考虑二层及三层网络相关的问题。二层网络上的决定包括在数据链路层所作出的那些，比如决定是使用以太网络还是令牌环网络。三层网络上则包括关于协议层所作出的决定以及使用 IP 的时间点。例如，一个完全内部使用的 OpenStack 网络能够完全在二层存在并忽略三层网络，然而，要让流量能从云中出去到另外一个网络或者因特网中，却需要一个三层的路由或者交换机。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml19(para)
msgid ""
"The past few years have seen two competing trends in networking. One trend "
"leans towards building data center network architectures based on layer-2 "
"networking. Another trend treats the cloud environment essentially as a "
"miniature version of the Internet. This approach is radically different from"
" the network architecture approach that is used in the staging environment: "
"the Internet is based entirely on layer-3 routing rather than layer-2 "
"switching."
msgstr "过去几年间，网络架构出现了两种相互竞争的倾向。其中之一倾向于基于二层网络来构建数据中心的网络架构。另一种则倾向于认为云环境的网络本质上是一个缩小版的因特网。这一方式与用于开发及测试环境中的网络架构方式完全不同：因特网是完全基于三层路由而非二层交换的。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml29(para)
msgid ""
"A network designed on layer-2 protocols has advantages over one designed on "
"layer-3 protocols. In spite of the difficulties of using a bridge to perform"
" the network role of a router, many vendors, customers, and service "
"providers choose to use Ethernet in as many parts of their networks as "
"possible. The benefits of selecting a layer-2 design are:"
msgstr "基于二层协议设计的网络相比基于三层协议设计的网络有一定优势。尽管使用桥接来扮演路由的网络角色有困难，很多厂商、客户以及服务提供商都选择尽可能多地在他们的网络中使用以太网。选择二层网络设计的好处在于："

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml39(para)
msgid ""
"Ethernet frames contain all the essentials for networking. These include, "
"but are not limited to, globally unique source addresses, globally unique "
"destination addresses, and error control."
msgstr "以太网帧包含了所有联网所需的要素。这些要素包括但不限于，全局唯一的源地址，全局唯一的目标地址，以及错误控制。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml45(para)
msgid ""
"Ethernet frames can carry any kind of packet. Networking at layer 2 is "
"independent of the layer-3 protocol."
msgstr "以太网帧能够承载任何类型的包。二层上的联网独立于三层协议之外。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml50(para)
msgid ""
"More layers added to the Ethernet frame only slow the networking process "
"down. This is known as 'nodal processing delay'."
msgstr "往以太网帧中加入更多的层次只会使得联网过程变慢。这被称为节点处理延迟。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml55(para)
msgid ""
"Adjunct networking features, for example class of service (CoS) or "
"multicasting, can be added to Ethernet as readily as IP networks."
msgstr "额外的网络特性，例如服务类别(CoS)控制或者多播，也能够与添加至 IP 网络中一样容易地添加至以太网中。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml60(para)
msgid "VLANs are an easy mechanism for isolating networks."
msgstr "VLAN 是一个简单的用于网络隔离的机制。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml64(para)
msgid ""
"Most information starts and ends inside Ethernet frames. Today this applies "
"to data, voice (for example, VoIP) and video (for example, web cameras). The"
" concept is that, if more of the end-to-end transfer of information from a "
"source to a destination can be done in the form of Ethernet frames, more of "
"the benefits of Ethernet can be realized on the network. Though it is not a "
"substitute for IP networking, networking at layer 2 can be a powerful "
"adjunct to IP networking."
msgstr "大多数信息开始并结束于以太网帧中。目前对于数据、语音(例如 VoIP)和视频(例如 web 摄像头)来说都是如此。一般认为，假如从源端到目标端的信息传输能更多地以以太网帧的形式完成，以太网就能够在网络中更加充分地发挥其优势。尽管不能作为一个 IP 联网的替代，二层联网能够作为 IP 联网的一个强大补充。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml73(para)
msgid ""
"Layer-2 Ethernet usage has these advantages over layer-3 IP network usage:"
msgstr "使用二层以太网相对于使用三层 IP 网络有如下优势："

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml79(para)
msgid "Speed"
msgstr "速度"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml84(para)
msgid "Reduced overhead of the IP hierarchy."
msgstr "减少了 IP 层的开销"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml89(para)
msgid ""
"No need to keep track of address configuration as systems are moved around. "
"Whereas the simplicity of layer-2 protocols might work well in a data center"
" with hundreds of physical machines, cloud data centers have the additional "
"burden of needing to keep track of all virtual machine addresses and "
"networks. In these data centers, it is not uncommon for one physical node to"
" support 30-40 instances."
msgstr "系统进行迁移时不需要记录地址信息。尽管简单的二层协议可能在一个有几百台物理机器的数据中心中良好地进行工作，云数据中心中却有记录所有虚拟机地址及网络信息的额外负担。因为在这些数据中心中，一台物理节点支撑 30 到 40 台实例并不罕见。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml102(para)
msgid ""
"Networking at the frame level says nothing about the presence or absence of "
"IP addresses at the packet level. Almost all ports, links, and devices on a "
"network of LAN switches still have IP addresses, as do all the source and "
"destination hosts. There are many reasons for the continued need for IP "
"addressing. The largest one is the need to manage the network. A device or "
"link without an IP address is usually invisible to most management "
"applications. Utilities including remote access for diagnostics, file "
"transfer of configurations and software, and similar applications cannot run"
" without IP addresses as well as MAC addresses."
msgstr "数据帧级别上的联网与数据包级别上的 IP 地址存在与否并没有关系。几乎所有端口、链路以及在 LAN 交换机构成的网络上的设备仍然有其 IP 地址，同样地，所有的源和目标主机也都有。有很多原因需要继续保留 IP 地址。其中最大的一个理由是网络管理上的需要。一个没有 IP 地址的设备或者连接通常对于大多数的管理程序来说是不可见的。包括远程接入的诊断工具、用于传输配置和软件的文件传输工具以及其它类似的应用程序都不能够在没有 IP 地址或者 MAC 地址的情况下运行。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml116(title)
msgid "Layer-2 architecture limitations"
msgstr "二层架构的局限性"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml117(para)
msgid ""
"Outside of the traditional data center the limitations of layer-2 network "
"architectures become more obvious."
msgstr "在传统数据中心之外，二层网络架构的局限性更加明显。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml121(para)
msgid "Number of VLANs is limited to 4096."
msgstr "VLAN 的数目被限制在 4096。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml124(para)
msgid "The number of MACs stored in switch tables is limited."
msgstr "存储在交换表中的 MAC 地址数目是有限的。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml128(para)
msgid ""
"The need to maintain a set of layer-4 devices to handle traffic control must"
" be accommodated."
msgstr "维护一系列四层网络设备以完成流量控制的需求必须得到满足。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml132(para)
msgid ""
"MLAG, often used for switch redundancy, is a proprietary solution that does "
"not scale beyond two devices and forces vendor lock-in."
msgstr "通常被用于实现交换机冗余的 MLAG 是私有的解决方案，不能扩展至两个设备以上，并且迫使得厂商的选择受到限制。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml137(para)
msgid ""
"It can be difficult to troubleshoot a network without IP addresses and ICMP."
msgstr "解决一个没有 IP 地址和 ICMP 的网络上的问题可能会很困难。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml141(para)
msgid ""
"Configuring <glossterm baseform=\"Address Resolution Protocol "
"(ARP)\">ARP</glossterm> is considered complicated on large layer-2 networks."
msgstr "在大规模的二层网络上配置 <glossterm baseform=\"Address Resolution Protocol (ARP)\">ARP</glossterm> 会很麻烦。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml147(para)
msgid ""
"All network devices need to be aware of all MACs, even instance MACs, so "
"there is constant churn in MAC tables and network state changes as instances"
" are started or stopped."
msgstr "所有的网络设备必须知道所有的 MAC，甚至是实例的 MAC。因此随着实例的启动和停止，MAC 地址表以及网络状态都经常发生改变。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml153(para)
msgid ""
"Migrating MACs (instance migration) to different physical locations are a "
"potential problem if ARP table timeouts are not set properly."
msgstr "如果 ARP 表的超时没有被正确地设置，迁移 MAC(实例迁移)到另外的的物理位置可能引起问题。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml158(para)
msgid ""
"It is important to know that layer 2 has a very limited set of network "
"management tools. It is very difficult to control traffic, as it does not "
"have mechanisms to manage the network or shape the traffic, and network "
"troubleshooting is very difficult. One reason for this difficulty is network"
" devices have no IP addresses. As a result, there is no reasonable way to "
"check network delay in a layer-2 network."
msgstr "很重要的一点是，必须意识到二层网络上用于网络管理的工具非常有限。因此控制流量非常困难，由于二层网络没有管理网络或者对流量进行整形的机制，解决网络问题也非常困难。其中一个原因是网络设备没有 IP 地址。因此，在二层网络中没有合理的方式来检查网络延迟。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml165(para)
msgid ""
"On large layer-2 networks, configuring ARP learning can also be complicated."
" The setting for the MAC address timer on switches is critical and, if set "
"incorrectly, can cause significant performance problems. As an example, the "
"Cisco default MAC address timer is extremely long. Migrating MACs to "
"different physical locations to support instance migration can be a "
"significant problem. In this case, the network information maintained in the"
" switches could be out of sync with the new location of the instance."
msgstr "在大规模的二层网络上，配置 ARP 学习也可能很复杂。交换机上的 MAC 地址超时设置非常关键，并且，错误的设置可能引起严重的性能问题。例如 Cisco 交换机上的 MAC 地址的超时时间非常长。迁移 MAC 地址到另外的物理位置以实现实例的迁移就可能是一个显著的问题。这种情形下，交换机中维护的网络信息与实例的新位置信息就会不同步。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml174(para)
msgid ""
"In a layer-2 network, all devices are aware of all MACs, even those that "
"belong to instances. The network state information in the backbone changes "
"whenever an instance is started or stopped. As a result there is far too "
"much churn in the MAC tables on the backbone switches."
msgstr "二层网络中，所有的设备都知道所有的 MAC 地址信息，甚至属于实例的设备也如此。主干网络上的网络状态信息随着实例的启动和停止在时刻发生着改变。结果是，主干交换机的 MAC 地址表的变动会远多于正常情况。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml180(title)
msgid "Layer-3 architecture advantages"
msgstr "三层架构的优势"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml181(para)
msgid ""
"In the layer 3 case, there is no churn in the routing tables due to "
"instances starting and stopping. The only time there would be a routing "
"state change would be in the case of a Top of Rack (ToR) switch failure or a"
" link failure in the backbone itself. Other advantages of using a layer-3 "
"architecture include:"
msgstr "在三层架构的情况下，实例的启动和停止不会引起路由表的变动。路由状态的改变只会在柜顶(ToR)交换机发生错误或者在主干网络链接发生错误的情况下才会发生。其它使用三层网络架构的优势包括："

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml189(para)
msgid ""
"Layer-3 networks provide the same level of resiliency and scalability as the"
" Internet."
msgstr "三层网络提供了与因特网相同的弹性及可扩展性。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml193(para)
msgid "Controlling traffic with routing metrics is straightforward."
msgstr "使用路由度量进行流量控制非常直观。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml197(para)
msgid ""
"Layer 3 can be configured to use <glossterm baseform=\"Border Gateway "
"Protocol (BGP)\">BGP</glossterm> confederation for scalability so core "
"routers have state proportional to the number of racks, not to the number of"
" servers or instances."
msgstr "三层网络能够被配置成使用 <glossterm baseform=\"Border Gateway Protocol (BGP)\">BGP</glossterm> 联合来实现可扩展性，因此核心路由所保存的状态信息是与机柜数目成比例增长的，而非与服务器或者实例的数量成比例。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml204(para)
msgid ""
"Routing ensures that instance MAC and IP addresses out of the network core "
"reducing state churn. Routing state changes only occur in the case of a ToR "
"switch failure or backbone link failure."
msgstr "路由功能保证了网络核心之外的实例 MAC 和 IP 地址减少了对网络状态造成的变动。路由状态的改变只发生在柜顶(ToR)交换机发生错误或者主干网络链接发生错误时。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml210(para)
msgid ""
"There are a variety of well tested tools, for example ICMP, to monitor and "
"manage traffic."
msgstr "有很多经过完善测试的工具，例如 ICMP，来监控和管理流量。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml214(para)
msgid ""
"Layer-3 architectures allow for the use of Quality of Service (QoS) to "
"manage network performance."
msgstr "三层网络架构允许使用服务质量(QoS)机制来管理网络性能。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml219(title)
msgid "Layer-3 architecture limitations"
msgstr "三层架构的局限性"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml220(para)
msgid ""
"The main limitation of layer 3 is that there is no built-in isolation "
"mechanism comparable to the VLANs in layer-2 networks. Furthermore, the "
"hierarchical nature of IP addresses means that an instance will also be on "
"the same subnet as its physical host. This means that it cannot be migrated "
"outside of the subnet easily. For these reasons, network virtualization "
"needs to use IP <glossterm>encapsulation</glossterm> and software at the end"
" hosts for both isolation, as well as for separation of the addressing in "
"the virtual layer from addressing in the physical layer. Other potential "
"disadvantages of layer 3 include the need to design an IP addressing scheme "
"rather than relying on the switches to automatically keep track of the MAC "
"addresses and to configure the interior gateway routing protocol in the "
"switches."
msgstr "三层架构主要的局限在于没有类似于二层网络架构中的 VLAN 之类的内生的隔离机制。此外，IP 地址的层级性质也意味着实例将会位于与其所在的物理宿主机相同的子网中。这意味着迁移实例至子网之外并不容易。基于以上原因，网络虚拟化需要在终端宿主机上使用 IP <glossterm>封装</glossterm> 技术以及软件来实现网络隔离，以及物理层面和虚拟层面上的地址管理分离。其它三层网络架构的潜在缺点包括需要设计一个 IP 地址管理计划，而不是仅依靠交换机自动记录 MAC 地址信息，以及需要在交换机中配置内部网关路由协议。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml238(title)
msgid "Network recommendations overview"
msgstr "网络建议的总结"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml239(para)
msgid ""
"OpenStack has complex networking requirements for several reasons. Many "
"components interact at different levels of the system stack that adds "
"complexity. Data flows are complex. Data in an OpenStack cloud moves both "
"between instances across the network (also known as East-West), as well as "
"in and out of the system (also known as North-South). Physical server nodes "
"have network requirements that are independent of those used by instances "
"which need to be isolated from the core network to account for scalability. "
"It is also recommended to functionally separate the networks for security "
"purposes and tune performance through traffic shaping."
msgstr "OpenStack 由于各种原因对联网有着复杂的要求。很多组件在系统栈的不同级别上进行互动，这添加了复杂程度。数据流也一样复杂。OpenStack 中的数据可能在网络中的实例之间流动(东西向)，也可能是流出或者流入系统(南北向)。物理服务器节点有着独立于用于实例的节点的联网要求，必须被从核心网络中隔离出来以便实现可扩展性。同样的，出于安全目的，也建议根据用途划分网络，并且通过流量整形调整网络性能。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml250(para)
msgid ""
"A number of important general technical and business factors need to be "
"taken into consideration when planning and designing an OpenStack network. "
"They include:"
msgstr "计划和设计一个 OpenStack 网络时有许多重要的普遍的技术和商业要素需要被考虑到。包括："

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml255(para)
msgid ""
"A requirement for vendor independence. To avoid hardware or software vendor "
"lock-in, the design should not rely on specific features of a vendor's "
"router or switch."
msgstr "对厂商独立性的需要。要避免硬件或者软件的厂商选择受到限制，设计不应该依赖于某个厂商的路由或者交换机的独特特性。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml261(para)
msgid ""
"A requirement to massively scale the ecosystem to support millions of end "
"users."
msgstr "对于大规模地扩展生态系统以满足百万级别终端用户的需要。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml265(para)
msgid "A requirement to support indeterminate platforms and applications."
msgstr "对于支持不确定的平台和应用的要求。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml269(para)
msgid ""
"A requirement to design for cost efficient operations to take advantage of "
"massive scale."
msgstr "对于实现低成本运营以便获益于大规模扩展的设计的需要。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml273(para)
msgid ""
"A requirement to ensure that there is no single point of failure in the "
"cloud ecosystem."
msgstr "对于保证整个云生态系统中没有单点故障的需要。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml277(para)
msgid ""
"A requirement for high availability architecture to meet customer SLA "
"requirements."
msgstr "对于实现高可用架构以满足客户服务等级协议(SLA)需求的要求。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml281(para)
msgid "A requirement to be tolerant of rack level failure."
msgstr "对于容忍机柜级别的故障的要求。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml285(para)
msgid ""
"A requirement to maximize flexibility to architect future production "
"environments."
msgstr "对于最大化灵活性以便构架出未来的生产环境的要求。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml289(para)
msgid ""
"Keeping all of these in mind, the following network design recommendations "
"can be made:"
msgstr "在以上要求的前提下，可以作出下列关于网络设计的建议："

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml293(para)
msgid "Layer-3 designs are preferred over layer-2 architectures."
msgstr "应优于二层架构，先考虑三层网络架构的设计。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml297(para)
msgid ""
"Design a dense multi-path network core to support multi-directional scaling "
"and flexibility."
msgstr "设计一个密集的多路径网络核心以支持多个方向的扩展和确保灵活性。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml301(para)
msgid ""
"Use hierarchical addressing because it is the only viable option to scale "
"network ecosystem."
msgstr "使用具有层次结构的地址分配机制，因为这是扩展网络生态环境的唯一可行选项。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml305(para)
msgid ""
"Use virtual networking to isolate instance service network traffic from the "
"management and internal network traffic."
msgstr "使用虚拟联网将实例服务网络流量从管理及内部网络流量中隔离出来。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml310(para)
msgid "Isolate virtual networks using encapsulation technologies."
msgstr "使用封装技术隔离虚拟网络。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml314(para)
msgid "Use traffic shaping for performance tuning."
msgstr "使用流量整形工具调整网络性能。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml317(para)
msgid "Use eBGP to connect to the Internet up-link."
msgstr "使用 eBGP 连接至因特网上行链路。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml320(para)
msgid "Use iBGP to flatten the internal traffic on the layer-3 mesh."
msgstr "在三层网络上使用 iBGP 将内部网络流量扁平化。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml324(para)
msgid "Determine the most effective configuration for block storage network."
msgstr "确定块存储网络的最高效配置。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml329(title)
msgid "Additional considerations"
msgstr "额外的考虑因素"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml330(para)
msgid ""
"There are numerous topics to consider when designing a network-focused "
"OpenStack cloud."
msgstr "设计一个网络型的 OpenStack 云有很多因素需要考虑。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml333(title)
msgid ""
"OpenStack Networking versus legacy networking (nova-network) considerations"
msgstr "OpenStack 联网方式对传统联网(nova-network) 的考虑"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml335(para)
msgid ""
"Selecting the type of networking technology to implement depends on many "
"factors. OpenStack Networking (neutron) and legacy networking (nova-network)"
" both have their advantages and disadvantages. They are both valid and "
"supported options that fit different use cases as described in the following"
" table."
msgstr "对要实施的网络技术类型的选择依赖于很多要素。OpenStack 联网方式(neutron)和传统联网(nova-network)都有其各自的优势和劣势。他们都是有效的方式，各自所支持的用于满足不同使用场景的选项在下表中列出。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml344(th)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml176(term)
msgid "Legacy networking (nova-network)"
msgstr "传统联网方式(nova-network)"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml345(th)
msgid "OpenStack Networking"
msgstr "OpenStack 联网方式(neutron)"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml349(td)
msgid "Simple, single agent"
msgstr "简单，单独一个代理程序"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml350(td)
msgid "Complex, multiple agents"
msgstr "复杂，多个代理程序"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml353(td)
msgid "More mature, established"
msgstr "更加成熟，稳定的"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml354(td)
msgid "Newer, maturing"
msgstr "更新，正在发展不断成熟中"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml357(td)
msgid "Flat or VLAN"
msgstr "Flat 或者 VLAN"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml358(td)
msgid "Flat, VLAN, Overlays, L2-L3, SDN"
msgstr "Flat、VLAN、覆盖网络、二层到三层、软件定义网络(SDN)"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml360(td)
msgid "No plug-in support"
msgstr "没有插件支持"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml361(td)
msgid "Plug-in support for 3rd parties"
msgstr "有第三方的插件支持"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml364(td)
msgid "Scales well"
msgstr "能够很好地扩展"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml365(td)
msgid "Scaling requires 3rd party plug-ins"
msgstr "需要第三方插件进行扩展"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml368(td)
msgid "No multi-tier topologies"
msgstr "没有多层拓扑"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml369(td)
msgid "Multi-tier topologies"
msgstr "具有多层拓扑"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml375(title)
msgid "Redundant networking: ToR switch high availability risk analysis"
msgstr "冗余网络：柜顶交换机高可用风险分析"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml377(para)
msgid ""
"A technical consideration of networking is the idea that switching gear in "
"the data center that should be installed with backup switches in case of "
"hardware failure."
msgstr "联网的一个技术性考虑因素是数据中心的交换设备必须有备用的交换机以应对硬件故障的方案。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml380(para)
msgid ""
"Research into the mean time between failures (MTBF) on switches is between "
"100,000 and 200,000 hours. This number is dependent on the ambient "
"temperature of the switch in the data center. When properly cooled and "
"maintained, this translates to between 11 and 22 years before failure. Even "
"in the worst case of poor ventilation and high ambient temperatures in the "
"data center, the MTBF is still 2-3 years. This is based on published "
"research found at <link "
"href=\"http://www.garrettcom.com/techsupport/papers/ethernet_switch_reliability.pdf\">http://www.garrettcom.com/techsupport/papers/ethernet_switch_reliability.pdf</link>"
" and <link "
"href=\"http://www.n-tron.com/pdf/network_availability.pdf\">http://www.n-tron.com/pdf/network_availability.pdf</link>."
msgstr "关于交换机发生硬件故障的平均间隔时间(MTBF)的研究表明，此平均时间大概介于100,000 至 200,000 个小时之间。该数字还与交换机所在的数据中心的环境温度相关。当采用适当的制冷及维护时，有 11 至 22 年的时间交换机才可能发生硬件故障。即使在最差情况的通风条件及数据中心的高环境温度下，该发生故障的平均间隔时间仍然为 2 到 3 年。以上内容基于公开发表的研究 <link href=\"http://www.garrettcom.com/techsupport/papers/ethernet_switch_reliability.pdf\">http://www.garrettcom.com/techsupport/papers/ethernet_switch_reliability.pdf</link> 和 <link href=\"http://www.n-tron.com/pdf/network_availability.pdf\">http://www.n-tron.com/pdf/network_availability.pdf</link>。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml393(para)
msgid ""
"In most cases, it is much more economical to only use a single switch with a"
" small pool of spare switches to replace failed units than it is to outfit "
"an entire data center with redundant switches. Applications should also be "
"able to tolerate rack level outages without affecting normal operations "
"since network and compute resources are easily provisioned and plentiful."
msgstr "大多数情况下，使用单独一台交换机的同时预留几台空闲的交换机以便替换坏了的设备，要比在整个数据中心中部署冗余的交换机的方式更加经济。相关的应用也应该能够在不影响正常运营的情况下，容忍机柜级别的故障，这是由于网络及计算资源是比较容易供应的也相对充足。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml401(title)
msgid "Preparing for the future: IPv6 support"
msgstr "为将来做准备：IPv6 支持"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml402(para)
msgid ""
"One of the most important networking topics today is the impending "
"exhaustion of IPv4 addresses. In early 2014, ICANN announced that they "
"started allocating the final IPv4 address blocks to the Regional Internet "
"Registries (<link "
"href=\"http://www.internetsociety.org/deploy360/blog/2014/05/goodbye-ipv4"
"-iana-starts-allocating-final-address-"
"blocks/\">http://www.internetsociety.org/deploy360/blog/2014/05/goodbye-ipv4"
"-iana-starts-allocating-final-address-blocks/</link>). This means the IPv4 "
"address space is close to being fully allocated. As a result, it will soon "
"become difficult to allocate more IPv4 addresses to an application that has "
"experienced growth, or is expected to scale out, due to the lack of "
"unallocated IPv4 address blocks."
msgstr "目前，一个网络方面的重要话题是 IPv4 地址即将用尽。2014 年初，ICANN 宣布他们已经开始分配最后的 IPv4 地址段给区域性因特网注册(<link href=\"http://www.internetsociety.org/deploy360/blog/2014/05/goodbye-ipv4-iana-starts-allocating-final-address-blocks/\">http://www.internetsociety.org/deploy360/blog/2014/05/goodbye-ipv4-iana-starts-allocating-final-address-blocks/</link>)。这意味着 IPv4 的地址空间已经接近被完全分配了。其结果是，由于未分配的 IPv4 地址段的匮乏，很快我们随着应用成熟度提高或者由于扩展目的要为应用分配更多的 IPv4 地址就会变得困难。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml413(para)
msgid ""
"For network focused applications the future is the IPv6 protocol. IPv6 "
"increases the address space significantly, fixes long standing issues in the"
" IPv4 protocol, and will become essential for network focused applications "
"in the future."
msgstr "对于关注网络方面的应用来说，未来将是 IPv6 协议的天下。IPv6 显著地扩大了地址空间，解决了 IPv4 协议长久以来存在的问题，并且将会成为未来面向网络应用的重要乃至本质部分。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml418(para)
msgid ""
"OpenStack Networking supports IPv6 when configured to take advantage of the "
"feature. To enable it, simply create an IPv6 subnet in Networking and use "
"IPv6 prefixes when creating security groups."
msgstr "OpenStack 联网方式支持 IPv6，进行配置之后就可以享受到该特性带来的好处。要启用该特性，只需要简单地在网络模块中创建一个 IPv6 子网，并且在创建安全组时使用 IPv6 前缀即可。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml423(title)
msgid "Asymmetric links"
msgstr "非对称连接"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml424(para)
msgid ""
"When designing a network architecture, the traffic patterns of an "
"application will heavily influence the allocation of total bandwidth and the"
" number of links that are used to send and receive traffic. Applications "
"that provide file storage for customers will allocate bandwidth and links to"
" favor incoming traffic, whereas video streaming applications will allocate "
"bandwidth and links to favor outgoing traffic."
msgstr "当设计一个网络架构时，相关应用的网络流量特点将会在很大程度上影响总带宽的分配以及用以发送和接收流量的连接数目。为客户提供文件存储的应用将更偏向分配用于流入流量的带宽和连接，与此同时，视频流传输应用将更偏向分配用于流出数据的带宽和连接。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml433(para)
msgid ""
"It is important to analyze the applications' tolerance for latency and "
"jitter when designing an environment to support network focused "
"applications. Certain applications, for example VoIP, are less tolerant of "
"latency and jitter. Where latency and jitter are concerned, certain "
"applications may require tuning of QoS parameters and network device queues "
"to ensure that they are queued for transmit immediately or guaranteed "
"minimum bandwidth. Since OpenStack currently does not support these "
"functions, some considerations may need to be made for the network plug-in "
"selected."
msgstr "当设计一个用以支持面向网络的应用的环境时，对应用对于网络延时及抖动的容忍程度的分析便很重要。特定类型的应用，例如 VoIP，对于网络延时及抖动的容忍性更低。当需要关注延时及抖动时，特定类型的应用可能需要对 QoS 参数和网络设备队列进行调整以保证它们的流量进入马上发送的队列之中，或者得到最小带宽的保证。由于目前 OpenStack 并不支持这些功能，所选的网络插件是否支持这些功能便也成为一个考虑因素了。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml443(para)
msgid ""
"The location of a service may also impact the application or consumer "
"experience. If an application is designed to serve differing content to "
"differing users it will need to be designed to properly direct connections "
"to those specific locations. Use a multi-site installation for these "
"situations, where appropriate."
msgstr "服务具体的物理位置可能影响该应用或者用户体验。假如一个应用的目标是对不同用户提供不同的内容，则它必须被设计为能够恰当地将连接指向那些特定的位置。在适当的情况下，使用多站点的部署方式。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml449(para)
msgid ""
"Networking can be implemented in two separate ways. The legacy networking "
"(nova-network) provides a flat DHCP network with a single broadcast domain. "
"This implementation does not support tenant isolation networks or advanced "
"plug-ins, but it is currently the only way to implement a distributed "
"layer-3 agent using the multi_host configuration. OpenStack Networking "
"(neutron) is the official networking implementation and provides a pluggable"
" architecture that supports a large variety of network methods. Some of "
"these include a layer-2 only provider network model, external device plug-"
"ins, or even OpenFlow controllers."
msgstr "联网可以通过两种不同的方式实现。传统的联网方式(nova-network)提供了一个平坦的 DHCP 网络以及一个单一的广播域。这种实现不支持租户隔离网络，也不支持高级的插件，但它却是当前唯一的能够使用多主机配置来实现分布式三层代理的方式。OpenStack 联网方式(neutron) 是正式的网络连接实现，提供了一个支持多种多样的网络连接方式的可插入架构。其中包括了只使用二层网络的提供商网络模型，外部设备插件，甚至是 OpenFlow 控制器。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml460(para)
msgid ""
"Networking at large scales becomes a set of boundary questions. The "
"determination of how large a layer-2 domain needs to be is based on the "
"amount of nodes within the domain and the amount of broadcast traffic that "
"passes between instances. Breaking layer-2 boundaries may require the "
"implementation of overlay networks and tunnels. This decision is a balancing"
" act between the need for a smaller overhead or a need for a smaller domain."
msgstr "大规模的联网将带来一系列的边界相关的问题。关于二层网络域大小具体需要多大的确定，必须基于该域中节点的数目以及域中实例之间的广播流量的大小来作出判断。打破二层网络的边界可能要求覆盖网络或者隧道的使用。该决定是在对更小的总开销的要求和对更小的域的要求之间所作出的平衡。"

#: ./doc/arch-design/network_focus/section_tech_considerations_network_focus.xml468(para)
msgid ""
"When selecting network devices, be aware that making this decision based on "
"the greatest port density often comes with a drawback. Aggregation switches "
"and routers have not all kept pace with Top of Rack switches and may induce "
"bottlenecks on north-south traffic. As a result, it may be possible for "
"massive amounts of downstream network utilization to impact upstream network"
" devices, impacting service to the cloud. Since OpenStack does not currently"
" provide a mechanism for traffic shaping or rate limiting, it is necessary "
"to implement these features at the network hardware level."
msgstr "选择网络设备时，必须意识到基于最大的端口密度所做出的决定通常也有一个弊端。聚合交换以及路由并不能完全满足柜顶交换机的需要，这可能引起南北向流量上的瓶颈。其结果是，大量的下行网络使用可能影响上行网络设备，从而影响云中的服务。由于 OpenStack 目前并未提供流量整形或者速度限制的机制，有必要在网络硬件的级别上实现这些特性。"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml9(para)
msgid ""
"Network focused architectures vary from the general purpose designs. They "
"are heavily influenced by a specific subset of applications that interact "
"with the network in a more impacting way. Some of the business requirements "
"that will influence the design include:"
msgstr "网络型的架构不同于通用设计。这种架构在很大程度上受到特定的受网络影响较大的应用子集所影响。一些可能影响此种设计的商业需求包括："

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml16(para)
msgid ""
"User experience: User experience is impacted by network latency through slow"
" page loads, degraded video streams, and low quality VoIP sessions. Users "
"are often not aware of how network design and architecture affects their "
"experiences. Both enterprise customers and end-users rely on the network for"
" delivery of an application. Network performance problems can provide a "
"negative experience for the end-user, as well as productivity and economic "
"loss."
msgstr "用户体验：缓慢的网页载入、低速的视频流传输以及低质量的 VoIP 会话，这些都是网络延迟影响用户体验的方式。而通常用户并不知道网络的设计和架构究竟是如何影响到他们的体验的。企业客户和终端用户都依赖于使用网络来使用他们的应用。网络的性能问题可能造成终端用户的不良体验，同样的，也会造成生产力和经济上的损失。"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml28(para)
msgid ""
"Regulatory requirements: Networks need to take into consideration any "
"regulatory requirements about the physical location of data as it traverses "
"the network. For example, Canadian medical records cannot pass outside of "
"Canadian sovereign territory. Another network consideration is maintaining "
"network segregation of private data flows and ensuring that the network "
"between cloud locations is encrypted where required. Network architectures "
"are affected by regulatory requirements for encryption and protection of "
"data in flight as the data moves through various networks."
msgstr "监管上的需求：网络设计需要考虑对于在网络上传输的数据的具体物理位置的管理需求。举个例子，加拿大的医疗记录是不能够传输到加拿大主权领土范围之外的。另一个值得考虑的因素是维护私有数据流的网络隔离和确保在有必要的情况下云端之间的网络是加密的。由于数据会经过各种各样的网络进行传输，对这些传输数据的加密和保护这一类的监管需求将会影响网络架构的设计。"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml61(para)
msgid ""
"Data compliance policies governing where information needs to reside in "
"certain locations due to regular issues and, more importantly, where it "
"cannot reside in other locations for the same reason."
msgstr "管理由于监管上的问题因而数据必须存放在特定的地点或者更重要的，由于相同的原因，数据不能够存放在其它地点的数据管理政策。"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml67(para)
msgid ""
"Examples of such legal frameworks include the data protection framework of "
"the European Union (<link href=\"http://ec.europa.eu/justice/data-"
"protection/\">http://ec.europa.eu/justice/data-protection/</link>) and the "
"requirements of the Financial Industry Regulatory Authority (<link "
"href=\"http://www.finra.org/Industry/Regulation/FINRARules\">http://www.finra.org/Industry/Regulation/FINRARules</link>)"
" in the United States. Consult a local regulatory body for more information."
msgstr "相关的法律制度包括了有欧盟的数据保护框架(<link href=\"http://ec.europa.eu/justice/data-protection/\">http://ec.europa.eu/justice/data-protection/</link>)以及美国金融业监督管理局的要求(<link href=\"http://www.finra.org/Industry/Regulation/FINRARules\">http://www.finra.org/Industry/Regulation/FINRARules</link>)。请咨询当地的监管机构以了解更多相关信息。"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml76(title)
msgid "High availability issues"
msgstr "高可用问题"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml77(para)
msgid ""
"OpenStack installations with high demand on network resources have high "
"availability requirements that are determined by the application and use "
"case. Financial transaction systems will have a much higher requirement for "
"high availability than a development application. Forms of network "
"availability, for example quality of service (QoS), can be used to improve "
"the network performance of sensitive applications, for example VoIP and "
"video streaming."
msgstr "对于网络有着高需求的 OpenStack 部署，也可能有着由具体应用和使用场景所确定的对高可用的需求。金融交易系统相对于用于进行开发的应用来说，对高可用有着更高的要求。网络可用性的状态，例如服务质量(QoS)机制，能够被用于提高诸如 VoIP 和视频流传输这一类敏感应用的网络性能。"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml85(para)
msgid ""
"Often, high performance systems will have SLA requirements for a minimum QoS"
" with regard to guaranteed uptime, latency and bandwidth. The level of the "
"SLA can have a significant impact on the network architecture and "
"requirements for redundancy in the systems."
msgstr "通常来说，高性能系统有对能够保证启动时间、延迟以及带宽的最小服务质量的 SLA 要求。SLA 的级别会在很大程度上影响网络架构以及对整个系统中冗余的要求。"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml91(title)
msgid "Risks"
msgstr "风险"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml94(term)
msgid "Network misconfigurations"
msgstr "错误的网络配置"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml96(para)
msgid ""
"Configuring incorrect IP addresses, VLANs, and routes can cause outages to "
"areas of the network or, in the worst-case scenario, the entire cloud "
"infrastructure. Misconfigurations can cause disruptive problems and should "
"be automated to minimize the opportunity for operator error."
msgstr "配置了错误的 IP 地址、VLAN 或者路由可能引起网络中的某个区域，或者，在最坏的情况下，整个网络无法正常工作。错误的配置可能引起破坏性的问题，因此配置应该被自动化以使得发生操作错误的机会最小化。"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml105(term)
#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml107(title)
#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml89(title)
#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml72(title)
msgid "Capacity planning"
msgstr "容量计划"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml107(para)
msgid ""
"Cloud networks need to be managed for capacity and growth over time. There "
"is a risk that the network will not grow to support the workload. Capacity "
"planning includes the purchase of network circuits and hardware that can "
"potentially have lead times measured in months or more."
msgstr "必须对云网络的容量和随着时间的增长进行管理，这其中存在一个风险是网络的增长可能不足以支持负载的增长。关于容量的计划，包括购买新的网络线路和硬件，可能需要几个月甚至更多地时间。"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml116(term)
msgid "Network tuning"
msgstr "网络调优"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml118(para)
msgid ""
"Cloud networks need to be configured to minimize link loss, packet loss, "
"packet storms, broadcast storms, and loops."
msgstr "必须对云网络进行相应的配置以最小化链路失效、丢包、封包风暴、广播风暴以及环路等发生的可能。"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml124(term)
msgid "Single Point Of Failure (SPOF)"
msgstr "单点故障(SPOF)"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml126(para)
msgid ""
"High availability must be taken into account even at the physical and "
"environmental layers. If there is a single point of failure due to only one "
"upstream link, or only one power supply, an outage becomes unavoidable."
msgstr "甚至在物理层面以及环境层面上也需要考虑高可用。假如由于只有一条上行链路或者只有一个电源而发生单点故障，系统故障将无法避免。"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml134(term)
msgid "Complexity"
msgstr "复杂性"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml136(para)
msgid ""
"An overly complex network design becomes difficult to maintain and "
"troubleshoot. While automated tools that handle overlay networks or device "
"level configuration can mitigate this, non-traditional interconnects between"
" functions and specialized hardware need to be well documented or avoided to"
" prevent outages."
msgstr "一个过于复杂的网络设计将使得维护和解决问题变得困难。虽然使用能够处理覆盖网络级别或者设备级别的配置的自动化工具可以减轻这个困难，在功能之间以及专门的设备之间的非传统连接需要被很好的文档化或者直接避免使用这些连接以防止故障发生。"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml146(term)
msgid "Non-standard features"
msgstr "非标准特性"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml148(para)
msgid ""
"There are additional risks that arise from configuring the cloud network to "
"take advantage of vendor specific features. One example is multi-link "
"aggregation (MLAG) that is being used to provide redundancy at the "
"aggregator switch level of the network. MLAG is not a standard and, as a "
"result, each vendor has their own proprietary implementation of the feature."
" MLAG architectures are not interoperable across switch vendors, which leads"
" to vendor lock-in, and can cause delays or inability when upgrading "
"components."
msgstr "对网络进行配置使得能够获益于某厂商提供的非标准特性可能带来额外的风险。一个例子是用以在网络的聚合交换机层面上提供冗余的多链路聚合(MLAG)技术。MLAG 并非一个标准，因此，每家厂商都有其专利的对该特性的实现。MLAG 架构在不同交换机厂商之间无法彼此协作，这使得对厂商的选择受到限制，也可能在升级零件时引起延迟或者无法工作。"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml164(para)
msgid ""
"Security is often overlooked or added after a design has been implemented. "
"Consider security implications and requirements before designing the "
"physical and logical network topologies. Some of the factors that need to be"
" addressed include making sure the networks are properly segregated and "
"traffic flows are going to the correct destinations without crossing through"
" locations that are undesirable. Some examples of factors that need to be "
"taken into consideration are:"
msgstr "安全性因素常被忽略，或者在设计被具体实施之后才添加到其中去。必须在设计物理的和逻辑的网络拓扑之前就考虑安全性相关的因素和要求。需要解决的问题包括确定网络被适当地进行隔离，以及流量能够发送到正确的目的地而不用穿过不必要的地方。需要考虑的因素的一些例子如下："

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml177(para)
msgid "Overlay interconnects for joining separated tenant networks"
msgstr "覆盖网络之间的相互连接以连接分离的租户网络"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml181(para)
msgid "Routing through or avoiding specific networks"
msgstr "使路由通过或者避免通过某个特定网络"

#: ./doc/arch-design/network_focus/section_user_requirements_network_focus.xml184(para)
msgid ""
"Another security vulnerability that must be taken into account is how "
"networks are attached to hypervisors. If a network must be separated from "
"other systems at all costs, it may be necessary to schedule instances for "
"that network onto dedicated compute nodes. This may also be done to mitigate"
" against exploiting a hypervisor breakout allowing the attacker access to "
"networks from a compromised instance."
msgstr "另一个需要考虑的安全性弱点是网络应该如何被附加到宿主机之上。假如一个网络无论如何都需要与其他的系统隔离开来，那么就有可能需要调度该网络上的实例至专用的计算节点之上。这也可能用以避免从中转实例利用宿主机进行突破从而使得攻击者能够进入其它网络。"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml42(None)
msgid ""
"@@image: '../figures/Network_Web_Services1.png'; "
"md5=7ad46189444753336edd957108a1a92b"
msgstr "@@image: '../figures/Network_Web_Services1.png'; md5=7ad46189444753336edd957108a1a92b"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml201(None)
msgid ""
"@@image: '../figures/Network_Cloud_Storage2.png'; "
"md5=3cd3ce6b19b20ecd7d22af03731cc7cd"
msgstr "@@image: '../figures/Network_Cloud_Storage2.png'; md5=3cd3ce6b19b20ecd7d22af03731cc7cd"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml9(para)
msgid ""
"A large-scale web application has been designed with cloud principles in "
"mind. The application is designed to scale horizontally in a bursting "
"fashion and will generate a high instance count. The application requires an"
" SSL connection to secure data and must not lose connection state to "
"individual servers."
msgstr "一个大型的 web 应用被以能够在云中运行的想法设计出来。该应用被设计为能够以爆炸性的速度横向扩展并且会产生大量的实例。该应用要求一个 SSL 连接以保护数据安全并且要求不能够丢失到单独服务器的连接状态。"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml15(para)
msgid ""
"An example design for this workload is depicted in the figure below. In this"
" example, a hardware load balancer is configured to provide SSL offload "
"functionality and to connect to tenant networks in order to reduce address "
"consumption. This load balancer is linked to the routing architecture as it "
"will service the VIP for the application. The router and load balancer are "
"configured with GRE tunnel ID of the application's tenant network and "
"provided an IP address within the tenant subnet but outside of the address "
"pool. This is to ensure that the load balancer can communicate with the "
"application's HTTP servers without requiring the consumption of a public IP "
"address."
msgstr "这类型负载的示例设计如下图所示。在这个例子中，硬件负载均衡器被配置成为提供 SSL 功能并且连接至租户网络以减少地址的消耗。由于其将为应用提供虚拟 IP，负载均衡器被连接至路由架构。路由器和负载均衡器都以应用的租户网络的 GRE 隧道 ID 进行配置并且都配置有属于租户子网之中但是在地址池之外的 IP 地址。这确保了负载均衡器能够在不需要使用公有 IP 地址的情况下，与应用的 HTTP 服务器进行通信。"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml27(para)
msgid ""
"Because sessions persist until they are closed, the routing and switching "
"architecture is designed for high availability. Switches are meshed to each "
"hypervisor and each other, and also provide an MLAG implementation to ensure"
" that layer-2 connectivity does not fail. Routers are configured with VRRP "
"and fully meshed with switches to ensure layer-3 connectivity. Since GRE is "
"used as an overlay network, Networking is installed and configured to use "
"the Open vSwitch agent in GRE tunnel mode. This ensures all devices can "
"reach all other devices and that tenant networks can be created for private "
"addressing links to the load balancer. <placeholder-1/>"
msgstr "由于在会话关闭之前其将一直存在，路由和交换架构必须面向高可用进行设计。交换机和宿主机以及交换机之间组成网状结构，并且使用了 MLAG 以确保二层网络连接不会发生故障。路由器使用 VRRP 进行配置并且与交换机充分地组成网状结构以保证三层网络的连接。由于 GRE 技术作为一个覆盖网络被使用，联网方式被部署并配置成使用选择 GRE 隧道模式的 Open vSwitch 代理程序。这保证了所有的设备都能够连接到其它设备上，并且能够为使用私有地址到负载均衡器的连接创建租户网络。<placeholder-1/>"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml45(para)
msgid ""
"A web service architecture has many options and optional components. Due to "
"this, it can fit into a large number of other OpenStack designs however a "
"few key components will need to be in place to handle the nature of most "
"web-scale workloads. The user needs the following components:"
msgstr "web 服务的架构有很多选择，也有很多可选的组件。因此，这种架构也能够符合其它大量的 OpenStack 设计。然而，一些关键的组件还是需要存在以处理与大多数 web 类型应用具有相类似特点的工作。用户需要以下的组件："

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml52(para)
msgid ""
"OpenStack Controller services (Image, Identity, Networking and supporting "
"services such as MariaDB and RabbitMQ)"
msgstr "OpenStack 控制服务(镜像服务、认证服务、网络服务以及例如 MariaDB 和 RabbitMQ 之类的支撑服务)"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml57(para)
msgid "OpenStack Compute running KVM hypervisor"
msgstr "运行着 KVM 宿主机的 OpenStack 计算服务"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml60(para)
msgid "OpenStack Object Storage"
msgstr "OpenStack 对象存储"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml63(para)
msgid "Orchestration module"
msgstr "编排模块"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml66(para)
msgid "Telemetry module"
msgstr "计量模块"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml69(para)
msgid ""
"Beyond the normal Identity, Compute, Image Service and Object Storage "
"components, the Orchestration module is a recommended component to handle "
"properly scaling the workloads to adjust to demand. Due to the requirement "
"for auto-scaling, the design includes the Telemetry module. Web services "
"tend to be bursty in load, have very defined peak and valley usage patterns "
"and, as a result, benefit from automatic scaling of instances based upon "
"traffic. At a network level, a split network configuration will work well "
"with databases residing on private tenant networks since these do not emit a"
" large quantity of broadcast traffic and may need to interconnect to some "
"databases for content."
msgstr "在通常的认证、计算、镜像服务以及对象存储组件之外，还推荐使用编排模块以正确处理将系统根据需求进行扩展的操作。由于有自动调节规模大小的需要，此设计也使用了计量模块。web 服务在负载上通常都是不连续的，并且有着非常明确的峰值和谷值的用量特征，因此能够获益于根据网络用量自动调节实例数目大小。在网络层面上，分离的网络的结构能很好地应对位于私有租户网络上的数据库，因为这些不会引起大量的广播流量，而且可能需要连接至一些数据库获取内容。"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml84(title)
msgid "Load balancing"
msgstr "负载均衡"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml85(para)
msgid ""
"Load balancing was included in this design to spread requests across "
"multiple instances. This workload scales well horizontally across large "
"numbers of instances. This allows instances to run without publicly routed "
"IP addresses and simply rely on the load balancer for the service to be "
"globally reachable. Many of these services do not require direct server "
"return. This aids in address planning and utilization at scale since only "
"the virtual IP (VIP) must be public."
msgstr "在这个设计中，使用了负载均衡技术来使请求分布至多个实例。这能够很好的横向扩展至大量的实例。这使得实例不需要能够公开路由到的地址便可以运行，并且仅仅依赖于负载均衡器来使得服务在任何地方都可用。很多这类型的服务都不要求服务器直接返回。这同时简化了地址的计划以及在调节规模时对地址的利用，因为只有虚拟 IP (VIP)需要在公网上。"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml96(title)
msgid "Overlay networks"
msgstr "覆盖网络"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml97(para)
msgid ""
"The overlay functionality design includes OpenStack Networking in Open "
"vSwitch GRE tunnel mode. In this case, the layer-3 external routers are "
"paired with VRRP and switches should be paired with an implementation of "
"MLAG running to ensure that you do not lose connectivity with the upstream "
"routing infrastructure."
msgstr "覆盖网络功能的设计包括了使用 Open vSwitch GRE 隧道模式的 OpenStack 联网方式。在这个例子中，三层网络通往外部的路由器使用 VRRP 结对，交换机也应该使用一个具体的 MLAG 实现进行结对，从而保证了到上游路由设施的连接不会丢失。"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml107(title)
msgid "Performance tuning"
msgstr "性能调优"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml108(para)
msgid ""
"Network level tuning for this workload is minimal. Quality-of-Service (QoS) "
"will be applied to these workloads for a middle ground Class Selector "
"depending on existing policies. It will be higher than a best effort queue "
"but lower than an Expedited Forwarding or Assured Forwarding queue. Since "
"this type of application generates larger packets with longer-lived "
"connections, bandwidth utilization can be optimized for long duration TCP. "
"Normal bandwidth planning applies here with regards to benchmarking a "
"session's usage multiplied by the expected number of concurrent sessions "
"with overhead."
msgstr "这类型负载在网络层面上的调整是很小的。服务质量将根据已经确定的策略被应用于此类型的负载之上形成一个中性的类别选择器，高于尽力而为型的队列但低于加速转发或者保证转发型的队列。由于这类型的应用将产生更大的包和存在时间更长的连接，对于带宽的利用可以针对持续时间较长的 TCP 连接进行优化。常用的带宽计划，即通过测定一个会话的使用量乘以预期将同时进行的会话数目并加上其他开销来进行判断的方式，在这里可以派上用场。"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml120(title)
msgid "Network functions"
msgstr "网络功能"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml121(para)
msgid ""
"Network functions is a broad category but encompasses workloads that support"
" the rest of a system's network. These workloads tend to consist of large "
"amounts of small packets that are very short lived, such as DNS queries or "
"SNMP traps. These messages need to arrive quickly and do not deal with "
"packet loss as there can be a very large volume of them. There are a few "
"extra considerations to take into account for this type of workload and this"
" can change a configuration all the way to the hypervisor level. For an "
"application that generates 10 TCP sessions per user with an average "
"bandwidth of 512 kilobytes per second per flow and expected user count of "
"ten thousand concurrent users, the expected bandwidth plan is approximately "
"4.88 gigabits per second."
msgstr "网络功能的话题比较宽泛，但通常是指围绕在为系统的其他部分的网络提供支持的目的的工作。这类网络负载通常都是由大量的存活期比较短的小网络包组成的，例如 DNS 请求或者 SNMP 陷阱等。这类消息需要很快地到达并且由于可能非常大量而不关注丢包的问题。这类型的负载还有一些额外的考虑因素需要顾及，并且可能改变直到宿主机级别的网络配置。假设一个应用为每个用户生成 10 个 TCP 会话，每个数据流的速度平均是 512 Kbps，而预期用户的数量是 1 万个用户同时使用，预期总计的带宽计划将达到大约 4.88 Gbps。"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml134(para)
msgid ""
"The supporting network for this type of configuration needs to have a low "
"latency and evenly distributed availability. This workload benefits from "
"having services local to the consumers of the service. A multi-site approach"
" is used as well as deploying many copies of the application to handle load "
"as close as possible to consumers. Since these applications function "
"independently, they do not warrant running overlays to interconnect tenant "
"networks. Overlays also have the drawback of performing poorly with rapid "
"flow setup and may incur too much overhead with large quantities of small "
"packets and are therefore not recommended."
msgstr "此类型配置的支撑网络需要具备低延迟和均匀分布流量的能力。在使用这些服务的用户本地部署这些服务是较好的。通过部署相当多的应用副本来尽可能在更加靠近客户的地方处理客户的需求的多站点部署方法也常被使用。由于此类型的应用可以独立工作，它们并不需要使用覆盖网络去连接租户网络。在这种情况下使用覆盖网络也有其缺点，即是由于频繁的进行流规则的设置而引起的性能不加，另外在很大量的小网络包传输的情况下也会造成太多的额外开销，因此并不推荐使用。"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml145(para)
msgid ""
"QoS is desired for some workloads to ensure delivery. DNS has a major impact"
" on the load times of other services and needs to be reliable and provide "
"rapid responses. It is to configure rules in upstream devices to apply a "
"higher Class Selector to DNS to ensure faster delivery or a better spot in "
"queuing algorithms."
msgstr "对于一些情形来说，QoS 是有必要的，以保证数据的发送。DNS 查询对于其他服务的加载时间有比较大的影响，因此必须可靠并且能够提供快速的响应。因此需要在上游的网络设备上配置规则将 DNS 查询数据通过类型选择器设置为更高的优先级以保证快速转发，或者使其在队列算法中占据更佳的位置。"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml152(title)
msgid "Cloud storage"
msgstr "云存储"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml153(para)
msgid ""
"Another common use case for OpenStack environments is to provide a cloud-"
"based file storage and sharing service. You might consider this a storage-"
"focused use case, but its network-side requirements make it a network-"
"focused use case."
msgstr "另一个常见的 OpenStack 环境的应用场景是提供云端的文件存储和共享服务。您可能认为这是一个存储型的场景，但是其在网络方面的需求确实使得其成为一个网络型的场景。"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml158(para)
msgid ""
"For example, consider a cloud backup application. This workload has two "
"specific behaviors that impact the network. Because this workload is an "
"externally-facing service and an internally-replicating application, it has "
"both <glossterm baseform=\"north-south traffic\">north-south</glossterm> and"
" <glossterm>east-west traffic</glossterm> considerations, as follows:"
msgstr "举个例子，想象一下一个云备份应用。这种类型的负载有两个明确的行为将对网络产生影响。由于这种类型的负载包括一个面向外部的服务，以及一个在内部进行复制的应用，对<glossterm baseform=\"north-south traffic\">南北向</glossterm>的流量以及<glossterm>东西向的流量</glossterm>都有相关的考虑因素，如下："

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml169(term)
msgid "north-south traffic"
msgstr "南北向流量"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml171(para)
msgid ""
"When a user uploads and stores content, that content moves into the "
"OpenStack installation. When users download this content, the content moves "
"from the OpenStack installation. Because this service is intended primarily "
"as a backup, most of the traffic moves southbound into the environment. In "
"this situation, it benefits you to configure a network to be asymmetrically "
"downstream because the traffic that enters the OpenStack installation is "
"greater than the traffic that leaves the installation."
msgstr "当用户上传并存储内容，该内容就进入 OpenStack 环境中。当用户下载该内容，该内容就从 OpenStack 环境中发送出去。由于这个服务主要是作为备份服务使用，大多数流量就都是南向的流入环境之中。在这种情况下，配置一个非对称的主要用于下行的网络将较有好处，因为进入 OpenStack 环境的流量要比从环境中出去的流量更大。"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml185(term)
msgid "east-west traffic"
msgstr "东西向流量"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml187(para)
msgid ""
"Likely to be fully symmetric. Because replication originates from any node "
"and might target multiple other nodes algorithmically, it is less likely for"
" this traffic to have a larger volume in any specific direction. However "
"this traffic might interfere with north-south traffic."
msgstr "很可能是完全对称的网络。因为根据算法来说，复制行为可能从任何节点发起并指向多个其他节点，某个特定方向的流量更大的情况不大可能发生。然而，这些流量也可能干扰到南北向的流量。"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml204(para)
msgid ""
"This application prioritizes the north-south traffic over east-west traffic:"
" the north-south traffic involves customer-facing data."
msgstr "此应用将南北向的流量的优先级设置得比东西向的流量的优先级更高：南北向的流量与面向客户的数据相关。"

#: ./doc/arch-design/network_focus/section_prescriptive_examples_network_focus.xml209(para)
msgid ""
"The network design in this case is less dependent on availability and more "
"dependent on being able to handle high bandwidth. As a direct result, it is "
"beneficial to forego redundant links in favor of bonding those connections. "
"This increases available bandwidth. It is also beneficial to configure all "
"devices in the path, including OpenStack, to generate and pass jumbo frames."
msgstr "这种情况下的网络设计对可用性的依赖程度较低，而对处理高带宽的能力依赖程度较高。显然的结果是，放弃链路冗余而把链路进行绑定的效果会更好。因为这提高了可用带宽。将路径上的所有设备，以及 OpenStack 在内，配置成为能够产生并允许巨型帧通过也是有好处的。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml8(para)
msgid ""
"Network focused OpenStack architectures have many similarities to other "
"OpenStack architecture use cases. There are a number of very specific "
"considerations to keep in mind when designing for a network-centric or "
"network-heavy application environment."
msgstr "网络型的 OpenStack 架构与其他 OpenStack 架构场景具有很多相似之处。但是当设计一个以网络为主的或者重度依赖网络的应用环境时，有一些特别的因素需要考虑。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml13(para)
msgid ""
"Networks exist to serve as a medium of transporting data between systems. It"
" is inevitable that an OpenStack design has inter-dependencies with non-"
"network portions of OpenStack as well as on external systems. Depending on "
"the specific workload, there may be major interactions with storage systems "
"both within and external to the OpenStack environment. For example, if the "
"workload is a content delivery network, then the interactions with storage "
"will be two-fold. There will be traffic flowing to and from the storage "
"array for ingesting and serving content in a north-south direction. In "
"addition, there is replication traffic flowing in an east-west direction."
msgstr "网络是作为用以在系统之间传输数据的媒介存在的。一个 OpenStack 的架构设计不可避免地有着对 OpenStack 的非网络部分的内部依赖以及对外部系统的依赖。根据负载场景的不同，可能与 OpenStack 内部以及外部的存储系统有着较多的互动。例如，假如是一个内容分发网络，则与存储之间的互动将是双向的。南北向上将会有很多流量出入存储阵列以存放和提供内容。另外，在东西向上也将有用于复制的网络流量。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml25(para)
msgid ""
"Compute-heavy workloads may also induce interactions with the network. Some "
"high performance compute applications require network-based memory mapping "
"and data sharing and, as a result, will induce a higher network load when "
"they transfer results and data sets. Others may be highly transactional and "
"issue transaction locks, perform their functions and rescind transaction "
"locks at very high rates. This also has an impact on the network "
"performance."
msgstr "重度依赖计算的负载也可能与网络有相互的影响。比如一些高性能计算应用依赖基于网络的内存映射和数据共享，其结果是当实例之间传输结果和数据集的时候会产生较高的网络负载。其他的一些应用也可能是高度事务性的，非常频繁的加上事务性锁，执行相应的工作，然后解锁。这也会影响到网络的性能。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml33(para)
msgid ""
"Some network dependencies are going to be external to OpenStack. While "
"OpenStack Networking is capable of providing network ports, IP addresses, "
"some level of routing, and overlay networks, there are some other functions "
"that it cannot provide. For many of these, external systems or equipment may"
" be required to fill in the functional gaps. Hardware load balancers are an "
"example of equipment that may be necessary to distribute workloads or "
"offload certain functions. Note that, as of the Icehouse release, dynamic "
"routing is currently in its infancy within OpenStack and may need to be "
"implemented either by an external device or a specialized service instance "
"within OpenStack. Tunneling is a feature provided by OpenStack Networking, "
"however it is constrained to a Networking-managed region. If the need arises"
" to extend a tunnel beyond the OpenStack region to either another region or "
"an external system, it is necessary to implement the tunnel itself outside "
"OpenStack or by using a tunnel management system to map the tunnel or "
"overlay to an external tunnel. OpenStack does not currently provide quotas "
"for network resources. Where network quotas are required, it is necessary to"
" implement quality of service management outside of OpenStack. In many of "
"these instances, similar solutions for traffic shaping or other network "
"functions will be needed."
msgstr "有些网络方面的依赖会是在 OpenStack 环境以外的。虽然 OpenStack 联网方式已经能够提供网络端口，IP 地址管理，某种程度上的路由功能，以及覆盖网络，仍然有一些功能是其无法提供的。对于这些 OpenStack 提供不了的功能，我们就需要使用外部系统或者设备来填补功能上的空白。硬件的负载均衡器就是此类设备中的一种，需要它来分配负载或者完成部分特定的上层功能。请注意，直到 Icehouse 版本发布之时，OpenStack 中的动态路由功能仍未成熟，且可能需要使用外部的设备或者 OpenStack 中专门的服务实例来实现。OpenStack 联网提供了隧道功能，然而该功能却只能在 OpenStack 联网所管理的范围内使用。如果需要将隧道从 OpenStack 的范围扩展至另外一个区域或者外部系统，则有必要在 OpenStack 之外使用能够将隧道或者整个覆盖网络映射到外部的隧道的其它隧道管理系统来实现隧道功能。OpenStack 目前并不提供网络资源配额功能。如果需要对网络资源进行配额管理，则有必要在 OpenStack 之外采用其它的服务质量管理机制。很多类似的情形下，将需要类似流量整形或者其它网络功能的解决方案。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml57(para)
msgid ""
"Depending on the selected design, Networking itself might not even support "
"the required <glossterm baseform=\"Layer-3 network\">layer-3 "
"network</glossterm> functionality. If you choose to use the provider "
"networking mode without running the layer-3 agent, you must install an "
"external router to provide layer-3 connectivity to outside systems."
msgstr "根据所选择的设计的不同，OpenStack 联网方式有可能完全无法支持所需要的<glossterm baseform=\"Layer-3 network\">三层网络</glossterm>功能。如果选择提供商网络模式而不运行三层网络代理程序，则您必须安装一个外部的路由器来提供到外部系统的三层网络连接。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml66(para)
msgid ""
"Interaction with orchestration services is inevitable in larger-scale "
"deployments. The Orchestration module is capable of allocating network "
"resource defined in templates to map to tenant networks and for port "
"creation, as well as allocating floating IPs. If there is a requirement to "
"define and manage network resources in using orchestration, we recommend "
"that the design include the Orchestration module to meet the demands of "
"users."
msgstr "毫无疑问，在大规模部署中肯定需要用到编排服务。编排模块能够按照模板中的定义来分配映射到租户网络上的网络资源以及完成端口创建，还能够分配浮动 IP 地址。如果有需要使用编排模块来定义和管理网络资源，则建议一开始的设计就应该包含编排模块以满足用户的需要。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml75(title)
msgid "Design impacts"
msgstr "对设计的影响"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml76(para)
msgid ""
"A wide variety of factors can affect a network focused OpenStack "
"architecture. While there are some considerations shared with a general use "
"case, specific workloads related to network requirements will influence "
"network design decisions."
msgstr "有很多类型的因素能够影响到网络型的 OpenStack 架构。有些因素与一般的使用场景的架构所需要考虑的因素是相同的，而另外还有一些特别的与网络需求相关的负载会影响网络设计的决定。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml81(para)
msgid ""
"One decision includes whether or not to use Network Address Translation "
"(NAT) and where to implement it. If there is a requirement for floating IPs "
"to be available instead of using public fixed addresses then NAT is "
"required. This can be seen in network management applications that rely on "
"an IP endpoint. An example of this is a DHCP relay that needs to know the IP"
" of the actual DHCP server. In these cases it is easier to automate the "
"infrastructure to apply the target IP to a new instance rather than "
"reconfigure legacy or external systems for each new instance."
msgstr "其中一个需要决定的事情是是否使用网络地址转换(NAT)以及在哪里具体实施。假如需要的是浮动 IP 地址而不是使用固定的公共地址的话，那么就需要使用 NAT。这种情况发生在依赖 IP 端点的网络管理应用上。一个例子是 DHCP 中继需要知道真正的 DHCP 服务器的 IP。这些情况下，让基础设施能够自动将目标 IP 地址应用到新的实例之上，要比为每个新实例都重新配置传统的或者外部的系统要来得容易。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml91(para)
msgid ""
"NAT for floating IPs managed by Networking will reside within the hypervisor"
" but there are also versions of NAT that may be running elsewhere. If there "
"is a shortage of IPv4 addresses there are two common methods to mitigate "
"this externally to OpenStack. The first is to run a load balancer either "
"within OpenStack as an instance, or use an external load balancing solution."
" In the internal scenario, load balancing software, such as HAproxy, can be "
"managed with Networking's Load-Balancer-as-a-Service (LBaaS). This is "
"specifically to manage the Virtual IP (VIP) while a dual-homed connection "
"from the HAproxy instance connects the public network with the tenant "
"private network that hosts all of the content servers. In the external "
"scenario, a load balancer would need to serve the VIP and also be joined to "
"the tenant overlay network through external means or routed to it via "
"private addresses."
msgstr "为 OpenStack 联网所管理的浮动地址而使用的 NAT 通常都在宿主机上，不过也有其它用途的 NAT 会在别的地方运行。假如出现 IPv4 地址不足的情况，有两种常见的方式来在 OpenStack 之外减轻这个问题的影响。其一是以一个实例的方式在 OpenStack 内部，或者使用外部的负载均衡方案来运行负载均衡器。内部的场景下，诸如 HAproxy 这一类的负载均衡软件，能由 OpenStack 联网的负载均衡即服务(LBaas)进行管理。具体说来，这是在使用 HAproxy 实例的双路连接将外部网络和所有内容服务器所在的租户私有网络连接起来的同时，对虚拟 IP(VIP)进行管理来实现的。使用外部的负载均衡方案的场景下，负载均衡器需要为该虚拟 IP 服务，并且通过外部的方法连接到租户的覆盖网络之中，或者通过私有地址路由到其中。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml107(para)
msgid ""
"Another kind of NAT that may be useful is protocol NAT. In some cases it may"
" be desirable to use only IPv6 addresses on instances and operate either an "
"instance or an external service to provide a NAT-based transition technology"
" such as NAT64 and DNS64. This provides the ability to have a globally "
"routable IPv6 address while only consuming IPv4 addresses as necessary or in"
" a shared manner."
msgstr "另外一种可能有用的 NAT 是协议 NAT。某些情况下，可能需要在实例中只使用 IPv6 地址，然后让一个实例或者外部的服务来提供基于 NAT 的转换技术，比如说 NAT64 和 DNS64。这使得实例都有全局可达的 IPv6 地址，同时只在必要的情况下，或者以共享的方式使用 IPv4 地址。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml114(para)
msgid ""
"Application workloads will affect the design of the underlying network "
"architecture. If a workload requires network-level redundancy, the routing "
"and switching architecture will have to accommodate this. There are "
"differing methods for providing this that are dependent on the network "
"hardware selected, the performance of the hardware, and which networking "
"model is deployed. Some examples of this are the use of Link aggregation "
"(LAG) or Hot Standby Router Protocol (HSRP). There are also the "
"considerations of whether to deploy OpenStack Networking or legacy "
"networking (nova-network) and which plug-in to select for OpenStack "
"Networking. If using an external system, Networking will need to be "
"configured to run <glossterm baseform=\"Layer-2 network\">layer "
"2</glossterm> with a provider network configuration. For example, it may be "
"necessary to implement HSRP to terminate layer-3 connectivity."
msgstr "云应用的负载类型会影响底层网络架构的设计。假如负载需要网络级别上的冗余，那么路由和交换架构就得适应这种需求。基于不同网络硬件的选择，硬件的性能差异，以及要部署的是哪种联网模型这些因素，有不同的方法可以提供这种冗余。比如说链路聚合(LAG)或者热备份路由器协议(HSRP)的使用。还有个考虑因素是部署 OpenStack 联网还是传统联网(nova-network)，以及如果使用 OpenStack 联网方式的话，要选择哪些插件。如果使用外部的系统，必须将联网方式配置成能够运行带有提供商网络配置方式的<glossterm baseform=\"Layer-2 network\">二层网络</glossterm>。比如说，可能需要使用 HSRP 来终结三层网络连接。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml131(para)
msgid ""
"Depending on the workload, overlay networks may or may not be a recommended "
"configuration. Where application network connections are small, short lived "
"or bursty, running a dynamic overlay can generate as much bandwidth as the "
"packets it carries. It also can induce enough latency to cause issues with "
"certain applications. There is an impact to the device generating the "
"overlay which, in most installations, will be the hypervisor. This will "
"cause performance degradation on packet per second and connection per second"
" rates."
msgstr "根据目标负载的不同，覆盖网络可能是，也有可能不是推荐的配置。当应用的网络连接是小规模的，短暂的或者非连续的，运行一个动态的覆盖网络能产生相当于它承载的网络包一样多的流量，也有可能引起足够的延迟从而产生其它的问题。同样也会影响到产生到覆盖网络上的流量的设备，在大多数部署中该设备是是宿主机。这将导致每秒网络包数和每秒产生连接的速度这些相关的指标发生性能降低。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml140(para)
msgid ""
"Overlays also come with a secondary option that may or may not be "
"appropriate to a specific workload. While all of them will operate in full "
"mesh by default, there might be good reasons to disable this function "
"because it may cause excessive overhead for some workloads. Conversely, "
"other workloads will operate without issue. For example, most web services "
"applications will not have major issues with a full mesh overlay network, "
"while some network monitoring tools or storage replication workloads will "
"have performance issues with throughput or excessive broadcast traffic."
msgstr "覆盖网络还有另外一个可能使得其合适或者不合适特定的负载的选项。默认情况下，覆盖网络是以一种完全网状的形式存在的，但是由于这对于某些负载来说可能会产生多余的开销，所以有时可能要关掉这个功能。相对的，其它的负载也有可能能在这种情况下正常工作。比如说，大多数的 web 服务应用在完全网状的覆盖网络上没有什么严重的问题，但是一些网络监控工具或者存储复制的负载，在这种情况下却有可能因为吞吐量或者多余的广播流量而产生性能问题。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml150(para)
msgid ""
"Many people overlook an important design decision: The choice of layer-3 "
"protocols. While OpenStack was initially built with only IPv4 support, "
"Networking now supports IPv6 and dual-stacked networks. Note that, as of the"
" Icehouse release, this only includes stateless address auto configuration "
"but work is in progress to support stateless and stateful DHCPv6 as well as "
"IPv6 floating IPs without NAT. Some workloads become possible through the "
"use of IPv6 and IPv6 to IPv4 reverse transition mechanisms such as NAT64 and"
" DNS64 or <glossterm>6to4</glossterm>, because these options are available. "
"This will alter the requirements for any address plan as single-stacked and "
"transitional IPv6 deployments can alleviate the need for IPv4 addresses."
msgstr "很多人忽略了一个很重要的设计因素：三层网络协议的选择。虽然 OpenStack 一开始只有 IPv4 的支持，但是现在 OpenStack 的联网已经支持 IPv6 以及同时使用两种协议的双栈网络。请注意直到 Icehouse 版本之时，这只包括了无状态地址自动配置的机制。但是，对无状态和有状态的 DHCPv6 和不需要使用 NAT 的 IPv6 浮动地址的支持的工作正在进行中。由于使用 IPv6 以及例如 NAT64、DNS64 或者 <glossterm>6to4</glossterm> 之类的 IPv6 和 IPv4 的相互转换机制的这些选项变得可行，使得承载某些类型的负载变得可能。这将改变单栈情景下的地址计划的需求，并且，过渡性的 IPv6 部署也能够减少对于 IPv4 地址的需求。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml164(para)
msgid ""
"As of the Icehouse release, OpenStack has limited support for dynamic "
"routing, however there are a number of options available by incorporating "
"third party solutions to implement routing within the cloud including "
"network equipment, hardware nodes, and instances. Some workloads will "
"perform well with nothing more than static routes and default gateways "
"configured at the layer-3 termination point. In most cases this will "
"suffice, however some cases require the addition of at least one type of "
"dynamic routing protocol if not multiple protocols. Having a form of "
"interior gateway protocol (IGP) available to the instances inside an "
"OpenStack installation opens up the possibility of use cases for anycast "
"route injection for services that need to use it as a geographic location or"
" failover mechanism. Other applications may wish to directly participate in "
"a routing protocol, either as a passive observer as in the case of a looking"
" glass, or as an active participant in the form of a route reflector. Since "
"an instance might have a large amount of compute and memory resources, it is"
" trivial to hold an entire unpartitioned routing table and use it to provide"
" services such as network path visibility to other applications or as a "
"monitoring tool."
msgstr "直到 Icehouse 版本的发布，OpenStack 对于动态路由的支持都很有限。然而，通过集成第三方的解决方案，包括网络设备、硬件节点以及实例，有很多的选择可以在云中实现路由。有一些类型的负载只需要在三层网络的终结点处设置好静态路由和默认的网关的情况下就可以很好地工作了。大多数情况下这是足够的，但是有些使用场景却需要至少一种动态路由协议的使用，如果不是要求多种协议同时使用的话。在一个 OpenStack 部署中，使得某种内部网关协议(IGP)对于实例可用，能够让服务使用单播路由注入作为地理位置或者故障转移机制成为可能。其它的应用则可能直接参与到路由协议之中，作为一个类似 looking glass 一样的被动的观察者，或者作为一个路由反射器这样的主动参与者。由于一个实例可能具有大量的计算和内存资源，存放整个未分区的路由表并使用它来提供类似于给其它应用使用的网络路径可见性，或者监控工具等的服务，并不会是什么大问题。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml186(para)
msgid ""
"Path maximum transmission unit (MTU) failures are lesser known but harder to"
" diagnose. The MTU must be large enough to handle normal traffic, overhead "
"from an overlay network, and the desired layer-3 protocol. When you add "
"externally built tunnels, the MTU packet size is reduced. In this case, you "
"must pay attention to the fully calculated MTU size because some systems are"
" configured to ignore or drop path MTU discovery packets."
msgstr "路径最大传输单元(MTU)故障不怎么出名，但却难以判断。MTU 必须足够大以满足传输正常流量，覆盖网络的开销以及需要的三层网络协议。当假如外部的隧道时，MTU 包的大小被减小。这种情况下，您可能需要注意下最大可能的 MTU 大小，因为有些系统被配置为忽略或者丢弃用于路径 MTU 发现的网络包。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml197(title)
msgid "Tunable networking components"
msgstr "可调联网组件"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml198(para)
msgid ""
"Consider configurable networking components related to an OpenStack "
"architecture design when designing for network intensive workloads include "
"MTU and QoS. Some workloads will require a larger MTU than normal based on a"
" requirement to transfer large blocks of data. When providing network "
"service for applications such as video streaming or storage replication, it "
"is recommended to ensure that both OpenStack hardware nodes and the "
"supporting network equipment are configured for jumbo frames where possible."
" This will allow for a better utilization of available bandwidth. "
"Configuration of jumbo frames should be done across the complete path the "
"packets will traverse. If one network component is not capable of handling "
"jumbo frames then the entire path will revert to the default MTU."
msgstr "为网络资源密集型的负载进行设计时，需要考虑包括 MTU 和 QoS 在内的，与 OpenStack 架构设计有关的可配置的联网组件。有些负载，基于其对传输大块数据的需求，可能要求比平常更大的 MTU。当为类似视频流传输以及存储复制等应用提供网络服务时，建议在可能的情况下，确保 OpenStack 硬件节点以及支撑网络设备都为巨型帧进行了配置。这使得对可用的带宽的利用率更高。对巨型帧的配置需要在整个网络包会经过的路径上都完成。假如其中一个网络组件不能够处理巨型帧，则整个路径将会恢复到使用默认 MTU。"

#: ./doc/arch-design/network_focus/section_architecture_network_focus.xml210(para)
msgid ""
"Quality of Service (QoS) also has a great impact on network intensive "
"workloads by providing instant service to packets which have a higher "
"priority due to their ability to be impacted by poor network performance. In"
" applications such as Voice over IP (VoIP) differentiated services code "
"points are a near requirement for proper operation. QoS can also be used in "
"the opposite direction for mixed workloads to prevent low priority but high "
"bandwidth applications, for example backup services, video conferencing or "
"file sharing, from blocking bandwidth that is needed for the proper "
"operation of other workloads. It is possible to tag file storage traffic as "
"a lower class, such as best effort or scavenger, to allow the higher "
"priority traffic through. In cases where regions within a cloud might be "
"geographically distributed it may also be necessary to plan accordingly to "
"implement WAN optimization to combat latency or packet loss."
msgstr "服务质量(QoS)同样对网络资源密集型的复杂有着很大的影响，通过为可能受低网络性能影响的因而具有更高优先级的网络包提供及时的服务。在类似于 IP 语音(VoIP)这种服务中，差异化服务几乎是是保证正常运营的必要条件。QoS 还能以相反的方式用以将负载混合，避免诸如备份服务、视频会议或者文件共享等低优先级但却需要高带宽的应用阻塞其它服务正常运营所需要的带宽。可以通过将用于文件存储的带宽标记为类似“尽力而为”或者“清道夫”之类的更低优先级，以允许更高优先级的流量通过。在云中的区域可能分布在不同的地理地点的情况下，可能需要相应地作出计划，使用 WAN 优化来对抗延迟以及丢包。"

#: ./doc/arch-design/network_focus/section_operational_considerations_network_focus.xml9(para)
msgid ""
"Network focused OpenStack clouds have a number of operational considerations"
" that will influence the selected design. Topics including, but not limited "
"to, dynamic routing of static routes, service level agreements, and "
"ownership of user management all need to be considered."
msgstr "网络型的 OpenStack 云有一系列运营上的考虑因素会影响所选择的设计。相关的主题包括但不限于，动态路由或者静态路由，服务等级协议以及用户管理的所有权等，这些都需要被考虑。"

#: ./doc/arch-design/network_focus/section_operational_considerations_network_focus.xml14(para)
msgid ""
"One of the first required decisions is the selection of a telecom company or"
" transit provider. This is especially true if the network requirements "
"include external or site-to-site network connectivity."
msgstr "最先要作出的决定中的其中一个是对电信公司或者传输提供商的选择。在网络需求包括外部的或者站点到站点之间的网络连接时，这更是明确的。"

#: ./doc/arch-design/network_focus/section_operational_considerations_network_focus.xml18(para)
msgid ""
"Additional design decisions need to be made about monitoring and alarming. "
"These can be an internal responsibility or the responsibility of the "
"external provider. In the case of using an external provider, SLAs will "
"likely apply. In addition, other operational considerations such as "
"bandwidth, latency, and jitter can be part of a service level agreement."
msgstr "关于监控以及警报功能，也需要作出设计决定。这可以是内部的责任，也可能是外部提供商的责任。在使用外部提供商的情况下，则可能采用服务等级协议(SLA)。另外，其它运营上的考虑因素，例如带宽、延迟以及网络抖动等都可以被包含在服务等级协议之中。"

#: ./doc/arch-design/network_focus/section_operational_considerations_network_focus.xml24(para)
msgid ""
"The ability to upgrade the infrastructure is another subject for "
"consideration. As demand for network resources increase, operators will be "
"required to add additional IP address blocks and add additional bandwidth "
"capacity. Managing hardware and software life cycle events, for example "
"upgrades, decommissioning, and outages while avoiding service interruptions "
"for tenants, will also need to be considered."
msgstr "升级基础架构的能力是另外一个需要考虑的主题。随着对网络资源需求的增长，管理员将需要添加更多的 IP 地址块以及更多的带宽能力。避免对租户的服务中断的同时，管理硬件以及软件的生命周期事件例如升级、退役以及断电等，也需要被考虑到。"

#: ./doc/arch-design/network_focus/section_operational_considerations_network_focus.xml32(para)
msgid ""
"Maintainability will also need to be factored into the overall network "
"design. This includes the ability to manage and maintain IP addresses as "
"well as the use of overlay identifiers including VLAN tag IDs, GRE tunnel "
"IDs, and MPLS tags. As an example, if all of the IP addresses have to be "
"changed on a network, a process known as renumbering, then the design needs "
"to support the ability to do so."
msgstr "可维护性也是整个网络设计中的因素之一。这包括管理和维护 IP 地址，以及对包括VLAN 标记 ID、GRE 隧道 ID 和 MPLS 标记等覆盖网络的标识符等的使用的管理和维护。比如说，假如整个网络中的所有 IP 地址都要被更改，这是被称为“重新编号”的一个过程，那么设计就需要支持能够这么做。"

#: ./doc/arch-design/network_focus/section_operational_considerations_network_focus.xml39(para)
msgid ""
"Network focused applications themselves need to be addressed when concerning"
" certain operational realities. For example, the impending exhaustion of "
"IPv4 addresses, the migration to IPv6 and the utilization of private "
"networks to segregate different types of traffic that an application "
"receives or generates. In the case of IPv4 to IPv6 migrations, applications "
"should follow best practices for storing IP addresses. It is further "
"recommended to avoid relying on IPv4 features that were not carried over to "
"the IPv6 protocol or have differences in implementation."
msgstr "在考虑特定的运营上的现实问题的同时，网络型的应用本身也要被考虑到。例如，即将到来的 IPv4 地址耗尽问题，到 IPv6 的迁移，以及对用以隔离应用接收或者发出的不同类型的流量的私有网络的使用等。在 IPv4 到 IPv6 迁移的情况下，应用必须遵守保存 IP 地址的最佳实践。此外，还建议避免依赖于未在 IPv6 协议中保留的或者实现上有区别的 IPv4 特性。"

#: ./doc/arch-design/network_focus/section_operational_considerations_network_focus.xml49(para)
msgid ""
"When using private networks to segregate traffic, applications should create"
" private tenant networks for database and data storage network traffic, and "
"utilize public networks for client-facing traffic. By segregating this "
"traffic, quality of service and security decisions can be made to ensure "
"that each network has the correct level of service that it requires."
msgstr "使用私有网络以隔离流量的时候，应用需要为数据库和数据存储网络的流量创建私有租户网络，并为面向客户的流量使用公共网络。通过这样子对流量进行隔离，可以做出服务质量和安全性方面的决定以确保每个网络都对应其所需的服务级别。"

#: ./doc/arch-design/network_focus/section_operational_considerations_network_focus.xml56(para)
msgid ""
"Finally, decisions must be made about the routing of network traffic. For "
"some applications, a more complex policy framework for routing must be "
"developed. The economic cost of transmitting traffic over expensive links "
"versus cheaper links, in addition to bandwidth, latency, and jitter "
"requirements, can be used to create a routing policy that will satisfy "
"business requirements."
msgstr "最后，还要做出关于网络流量路由方面的决定。对于一些应用来说，必须为路由采用更为复杂的策略框架。在昂贵的链路和更便宜的链路上传输流量的经济成本，加上对带宽、延迟以及网络抖动等的需求，都将被用以生成能够满足商业上的需求的路由策略。"

#: ./doc/arch-design/network_focus/section_operational_considerations_network_focus.xml63(para)
msgid ""
"How to respond to network events must also be taken into consideration. As "
"an example, how load is transferred from one link to another during a "
"failure scenario could be a factor in the design. If network capacity is not"
" planned correctly, failover traffic could overwhelm other ports or network "
"links and create a cascading failure scenario. In this case, traffic that "
"fails over to one link overwhelms that link and then moves to the subsequent"
" links until the all network traffic stops."
msgstr "如何对网络事件进行响应也是考虑因素之一。例如，在故障场景下某个链路上的负载如何转移到另外的链路上，也是设计中需要考虑的因素。假如没有正确计划网络的能力，发生故障的流量可能使得其它的端口和网络链路也无法正常工作，从而造成连环式的故障场景。这种情形下，转移到某链路上的流量使得该链路无法正常工作，然后又转移到之后链路上，直到整个网络的流量都停止。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml13(para)
msgid "Hardware selection involves three key areas:"
msgstr "硬件选择分为三大块："

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml16(para)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml17(para)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml41(para)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml12(para)
msgid "Compute"
msgstr "计算"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml19(para)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml22(para)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml46(para)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml15(para)
msgid "Network"
msgstr "网络"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml25(para)
msgid ""
"Selecting hardware for a general purpose OpenStack cloud should reflect a "
"cloud with no pre-defined usage model. General purpose clouds are designed "
"to run a wide variety of applications with varying resource usage "
"requirements. These applications include any of the following:"
msgstr "为通用型OpenStack云选择硬件，印证了云是没有预先定义的使用模型的。通用型云为运行广泛的应用而设计，而每种应用对资源利用有着各自不同的需求。这些应用不会是下面分类以外的类型："

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml32(para)
msgid "RAM-intensive"
msgstr "内存密集型"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml37(para)
msgid "CPU-intensive"
msgstr "CPU密集型"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml42(para)
msgid "Storage-intensive"
msgstr "存储密集型"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml47(para)
msgid ""
"Choosing hardware for a general purpose OpenStack cloud must provide "
"balanced access to all major resources."
msgstr "为通用型OpenStack云选择硬件必须提供所有主要资源的平衡性。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml49(para)
msgid ""
"Certain hardware form factors may better suit a general purpose OpenStack "
"cloud due to the requirement for equal (or nearly equal) balance of "
"resources. Server hardware must provide the following:"
msgstr "确定硬件的形式，也许更适合通用型OpenStack云，因为通用型有对资源的对等(接近对等)平衡的需求。服务器硬件须提供如下资源平衡细节描述："

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml55(para)
msgid "Equal (or nearly equal) balance of compute capacity (RAM and CPU)"
msgstr "计算容量(内存和CPU)对等(或接近对等)"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml60(para)
msgid "Network capacity (number and speed of links)"
msgstr "网络容量(连接数量和速度)"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml65(para)
msgid ""
"Storage capacity (gigabytes or terabytes as well as Input/Output Operations "
"Per Second (<glossterm>IOPS</glossterm>)"
msgstr "存储能力(每秒输入/输入操作(<glossterm>IOPS</glossterm>)，GB或TB）"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml71(para)
msgid "Server hardware is evaluated around four conflicting dimensions."
msgstr "服务器硬件是围绕4个冲突的维度来进行评估的。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml75(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml35(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml140(term)
msgid "Server density"
msgstr "服务器密度"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml77(para)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml142(para)
msgid ""
"A measure of how many servers can fit into a given measure of physical "
"space, such as a rack unit [U]."
msgstr "关于多少台服务器能够放下到一个给定尺寸的物理空间的量度，比如一个机柜单位[U]。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml83(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml42(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml148(term)
msgid "Resource capacity"
msgstr "资源容量"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml85(para)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml44(para)
msgid ""
"The number of CPU cores, how much RAM, or how much storage a given server "
"will deliver."
msgstr "一个给定的服务器能够提供的 CPU 数目、内存大小以及存储大小。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml91(term)
#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml285(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml49(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml201(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml61(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml155(term)
msgid "Expandability"
msgstr "延伸性"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml93(para)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml51(para)
msgid ""
"The number of additional resources that can be added to a server before it "
"has reached its limit."
msgstr "服务器上还能够继续添加直到到达其限制的资源数目。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml101(para)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml58(para)
msgid ""
"The relative purchase price of the hardware weighted against the level of "
"design effort needed to build the system."
msgstr "相对硬件的购买价格，与构建系统所需要的设计功力的级别成反比。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml107(para)
msgid ""
"Increasing server density means sacrificing resource capacity or "
"expandability, however, increasing resource capacity and expandability "
"increases cost and decreases server density. As a result, determining the "
"best server hardware for a general purpose OpenStack architecture means "
"understanding how choice of form factor will impact the rest of the design. "
"The following list outlines the form factors to choose from:"
msgstr "增加服务器密度意味这损失资源容量和扩展性，同理，增加资源容量和扩展性会增加开销和减少服务器密度。结果就是，为通用型OpenStack架构决定最合适的服务器硬件意味着怎么选择都会影响到其他设计。从以下列表元素中作出选择："

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml117(para)
msgid ""
"Blade servers typically support dual-socket multi-core CPUs, which is the "
"configuration generally considered to be the \"sweet spot\" for a general "
"purpose cloud deployment. Blades also offer outstanding density. As an "
"example, both HP BladeSystem and Dell PowerEdge M1000e support up to 16 "
"servers in only 10 rack units. However, the blade servers themselves often "
"have limited storage and networking capacity. Additionally, the "
"expandability of many blade servers can be limited."
msgstr "刀片服务通常都支持双插槽多核的CPU，对于通用型云部署此配置通常被考虑为“甜点“。刀片拥有卓越的密度。举例，无论是 HP BladeSystem 还是 Dell PowerEdge M1000e，均支持在占用10U的机柜空间下达到16台服务器的密度。尽管如此，刀片服务器本身具有有限的存储和网络容量，另外扩展到多台刀片服务器也是有局限的。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml129(para)
msgid ""
"1U rack-mounted servers occupy only a single rack unit. Their benefits "
"include high density, support for dual-socket multi-core CPUs, and support "
"for reasonable RAM amounts. This form factor offers limited storage "
"capacity, limited network capacity, and limited expandability."
msgstr "1U机架式服务器仅占用1U的机柜空间，他们的有点包括高密度，支持双插槽多核的CPU，支持内存扩展。局限性就是，有限的存储容量、有限的网络容量，以及有限的可扩展性。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml137(para)
msgid ""
"2U rack-mounted servers offer the expanded storage and networking capacity "
"that 1U servers tend to lack, but with a corresponding decrease in server "
"density (half the density offered by 1U rack-mounted servers)."
msgstr "2U的机架式服务器相比1U服务器，提供可扩展的存储和网络容量，但是相应的降低了服务器密度(1U机架式服务器密度的一半)"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml144(para)
msgid ""
"Larger rack-mounted servers, such as 4U servers, will tend to offer even "
"greater CPU capacity, often supporting four or even eight CPU sockets. These"
" servers often have much greater expandability so will provide the best "
"option for upgradability. This means, however, that the servers have a much "
"lower server density and a much greater hardware cost."
msgstr "高U的机架式服务器，比如4U的服务器，可提供更多的CPU容量，通常可提供四个甚至8个CPU插槽。这些服务器拥有非常强的可扩展性，还拥有升级的最好条件。尽管如此，它们也意味着低密度和更高的开销。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml153(para)
msgid ""
"\"Sled servers\" are rack-mounted servers that support multiple independent "
"servers in a single 2U or 3U enclosure. This form factor offers increased "
"density over typical 1U-2U rack-mounted servers but tends to suffer from "
"limitations in the amount of storage or network capacity each individual "
"server supports."
msgstr "“雪撬服务器”亦是机架式服务器的一种，支持在单个2U或3U的空间放置多个独立的服务器。此种类型增加的密度超过典型的1U-2U机架服务器，但是单个服务器支持的存储和网络容量往往受到限制。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml162(para)
msgid ""
"The best form factor for server hardware supporting a general purpose "
"OpenStack cloud is driven by outside business and cost factors. No single "
"reference architecture will apply to all implementations; the decision must "
"flow from user requirements, technical considerations, and operational "
"considerations. Here are some of the key factors that influence the "
"selection of server hardware:"
msgstr "支持通用型OpenStack云的服务器硬件最佳类型，是由外部的业务和成本因素所驱动的。没有那个单一的参考架构可以满足所有的实现，决定一定要依据用户需求，技术因素，以及运维因素。这里有一些能够影响到服务器硬件的选择的关键的因素："

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml172(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml124(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml254(term)
msgid "Instance density"
msgstr "实例密度"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml174(para)
msgid ""
"Sizing is an important consideration for a general purpose OpenStack cloud. "
"The expected or anticipated number of instances that each hypervisor can "
"host is a common metric used in sizing the deployment. The selected server "
"hardware needs to support the expected or anticipated instance density."
msgstr "对于通用型OpenStack云来说规模大小是一个很重要的考虑因素。预料或预期在每个hypervisor上可以运行多少实例，是部署中衡量大小的一个普遍元素。选择服务器硬件需要支持预期的实例密度。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml184(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml134(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml264(term)
msgid "Host density"
msgstr "主机密度"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml186(para)
msgid ""
"Physical data centers have limited physical space, power, and cooling. The "
"number of hosts (or hypervisors) that can be fitted into a given metric "
"(rack, rack unit, or floor tile) is another important method of sizing. "
"Floor weight is an often overlooked consideration. The data center floor "
"must be able to support the weight of the proposed number of hosts within a "
"rack or set of racks. These factors need to be applied as part of the host "
"density calculation and server hardware selection."
msgstr "物理数据中心【相对应的有虚拟数据中心，译者注】受到物理空间、电源以及制冷的限制。主机(hypervisor)的数量需要适应所给定的条件(机架，机架单元，地板)，这是另外一个重要衡量规模大小的办法。地板受重通常是一个被忽视的因素。数据中心的地板必须能够支撑一定数量的主机，当然是放在一个机架或一组机架中。这些因素都需要作为主机密度计算的一部分和服务器硬件的选择来考虑，并需要通过。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml199(term)
msgid "Power density"
msgstr "电源密度"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml201(para)
msgid ""
"Data centers have a specified amount of power fed to a given rack or set of "
"racks. Older data centers may have a power density as power as low as 20 "
"AMPs per rack, while more recent data centers can be architected to support "
"power densities as high as 120 AMP per rack. The selected server hardware "
"must take power density into account."
msgstr "数据中心拥有一定的电源以满足指定的机架或几组机架。老的数据中心拥有的电源密度一个低于每机架20AMP。近年来数据中心通常支持电源密度为高于每机架120 AMP。选择过的服务器硬件必须将电源密度纳入考虑范围。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml211(term)
msgid "Network connectivity"
msgstr "网络连通性"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml213(para)
msgid ""
"The selected server hardware must have the appropriate number of network "
"connections, as well as the right type of network connections, in order to "
"support the proposed architecture. Ensure that, at a minimum, there are at "
"least two diverse network connections coming into each rack. For "
"architectures requiring even more redundancy, it might be necessary to "
"confirm that the network connections are from diverse telecom providers. "
"Many data centers have that capacity available."
msgstr "已选择的服务器硬件必须有合适数量的网络连接，以及恰当的类型，目的是支持建议的架构。为了确保这点，最小的情况也需要至少为每个机架连接两条网络。如果架构要求更多的冗余，也许就需要和电信供应商确认有多少线路可以连接。大多数的数据中心具备这个能力。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml227(para)
msgid ""
"The selection of form factors or architectures affects the selection of "
"server hardware. For example, if the design is a scale-out storage "
"architecture, then the server hardware selection will require careful "
"consideration when matching the requirements set to the commercial solution."
msgstr "形式因素或体系结构的选择会影响服务器硬件的选择，例如，假如设计一个横向扩展的存储架构，那么服务器硬件的选择就得小心谨慎的考虑需求，以匹配商业解决方案的需求。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml231(para)
msgid ""
"Ensure that the selected server hardware is configured to support enough "
"storage capacity (or storage expandability) to match the requirements of "
"selected scale-out storage solution. For example, if a centralized storage "
"solution is required, such as a centralized storage array from a storage "
"vendor that has InfiniBand or FDDI connections, the server hardware will "
"need to have appropriate network adapters installed to be compatible with "
"the storage array vendor's specifications."
msgstr "确保选择的服务器硬件的配置支持足够的存储容量(或存储扩展性)，以满足所选择的横向扩展存储解决方案的需求。举例，如果需求是基于集中存储解决方案，比如存储厂商的集中存储阵列需要InfiniBand或FDDI连接，那么服务器硬件就需要安装对应的网卡来兼容此特定厂商的存储阵列。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml240(para)
msgid ""
"Similarly, the network architecture will have an impact on the server "
"hardware selection and vice versa. For example, make sure that the server is"
" configured with enough additional network ports and expansion cards to "
"support all of the networks required. There is variability in network "
"expansion cards, so it is important to be aware of potential impacts or "
"interoperability issues with other components in the architecture."
msgstr "同样的，网络架构会影响到服务器硬件的选择，反之亦然。举例，确保服务器配置了足够的网络端口和扩展卡，以支持所有的网络需求。因为有网络扩展卡的兼容性问题，所以要意识到潜在影响和兼容性问题，以及架构中的其他组件。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml249(title)
msgid "Selecting storage hardware"
msgstr "选择存储硬件"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml250(para)
msgid ""
"Storage hardware architecture is largely determined by the selected storage "
"architecture. The selection of storage architecture, as well as the "
"corresponding storage hardware, is determined by evaluating possible "
"solutions against the critical factors, the user requirements, technical "
"considerations, and operational considerations. Factors that need to be "
"incorporated into the storage architecture include:"
msgstr "存储硬件结构主要是由所选择的存储体系结构来确定。存储架构的选择，以及相应的存储硬件， 通过评估可能的解决方案，即针对关键的因素，用户需求，技术因素和运维因素来做决定。需要被并入存储体系架构的因素包括："

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml261(para)
msgid ""
"Storage can be a significant portion of the overall system cost. For an "
"organization that is concerned with vendor support, a commercial storage "
"solution is advisable, although it comes with a higher price tag. If initial"
" capital expenditure requires minimization, designing a system based on "
"commodity hardware would apply. The trade-off is potentially higher support "
"costs and a greater risk of incompatibility and interoperability issues."
msgstr "存储在整个系统的开销中占有很大一部分。对于一个组织来说关心的是提供商的支持，以及更加倾向于商业的存储解决方案，尽管它们的价格是很高。假如最初的投入希望是最少的，基于普通的硬件来设计系统也是可接受的，这就是权衡问题，一个是潜在的高支持成本，还有兼容性和互操作性的高风险问题。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml273(term)
#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml521(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml189(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml49(term)
msgid "Scalability"
msgstr "可扩展性"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml275(para)
msgid ""
"Scalability, along with expandability, is a major consideration in a general"
" purpose OpenStack cloud. It might be difficult to predict the final "
"intended size of the implementation as there are no established usage "
"patterns for a general purpose cloud. It might become necessary to expand "
"the initial deployment in order to accommodate growth and user demand."
msgstr "可扩展性是通用型OpenStack云主要考虑的因素。正因为通用型云没有固定的使用模式，也许导致预测最终的使用大小是很困难的。也许就有必要增加初始部署规模以应对数据增长和用户需求。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml287(para)
msgid ""
"Expandability is a major architecture factor for storage solutions with "
"general purpose OpenStack cloud. A storage solution that expands to 50PB is "
"considered more expandable than a solution that only scales to 10PB. This "
"metric is related to, but different, from scalability, which is a measure of"
" the solution's performance as it expands. For example, the storage "
"architecture for a cloud that is intended for a development platform may not"
" have the same expandability and scalability requirements as a cloud that is"
" intended for a commercial product."
msgstr "对于通用型OpenStack云存储解决方案来说，可扩展性也是主要的架构因素。一个存储解决方案能够扩展到50PB,而另外一个只能扩到10PB,前者明显比后者的扩展性强好多倍。此扩展与scalability有关，但是不一样，scalability更加倾向于解决方案的性能衡量。举例，一个存储架构为专注于开发者平台的云和商业产品云在expandability和scalability上就不可能一样。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml301(para)
msgid ""
"Using a scale-out storage solution with direct-attached storage (DAS) in the"
" servers is well suited for a general purpose OpenStack cloud. For example, "
"it is possible to populate storage in either the compute hosts similar to a "
"grid computing solution, or into hosts dedicated to providing block storage "
"exclusively. When deploying storage in the compute hosts appropriate "
"hardware, that can support both the storage and compute services on the same"
" hardware, will be required."
msgstr "使用在服务器直接挂接存储(DAS)来作为横向扩展存储解决方案，是比较适合通用型OpenStack云的。举例，无论是采用计算主机类似的网格计算解决方案，还是给主机提供专用的块存储，这样的存储方式是可能的。当在计算主机合适的硬件上部署存储时，需要支持存储和计算服务在同一台硬件。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml309(para)
msgid ""
"Understanding the requirements of cloud services will help determine what "
"scale-out solution should be used. Determining if a single, highly "
"expandable and highly vertical, scalable, centralized storage array should "
"be included in the design. Once an approach has been determined, the storage"
" hardware needs to be selected based on this criteria."
msgstr "正确理解云服务的需求对于决定该使用什么横向扩展解决方案有非常大的帮助。假如现在需要一个单一的，高度可扩展，高度垂直化，可扩展的性能等需求，那么在设计中采用中心化的存储阵列就应该被考虑。一旦一种方法已经被确定，存储硬件需要在此基础上的标准来进行选择。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml315(para)
msgid ""
"This list expands upon the potential impacts for including a particular "
"storage architecture (and corresponding storage hardware) into the design "
"for a general purpose OpenStack cloud:"
msgstr "这个列表扩展了在设计通用型OpenStack云可能产生的影响，包括对特定存储架构(以及相应的存储硬件)"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml321(term)
#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml508(term)
#: ./doc/arch-design/introduction/section_methodology.xml182(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml237(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml96(term)
msgid "Connectivity"
msgstr "连通性"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml323(para)
msgid ""
"Ensure that, if storage protocols other than Ethernet are part of the "
"storage solution, the appropriate hardware has been selected. If a "
"centralized storage array is selected, ensure that the hypervisor will be "
"able to connect to that storage array for image storage."
msgstr "确保连通性，如果存储协议作为存储解决方案的一部分使用的是非以太网，那么选择相应的硬件。如果选择了中心化的存储阵列，hypervisor若访问镜像存储就得能够连接到阵列。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml332(term)
msgid "Usage"
msgstr "用量"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml334(para)
msgid ""
"How the particular storage architecture will be used is critical for "
"determining the architecture. Some of the configurations that will influence"
" the architecture include whether it will be used by the hypervisors for "
"ephemeral instance storage or if OpenStack Object Storage will use it for "
"object storage."
msgstr "特定的存储架构如何使用是决定架构的关键。一些配置将直接影响到架构，包括用于hypervisor的临时实例存储，OpenStack对象存储使用它来作为对象存储服务。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml343(term)
msgid "Instance and image locations"
msgstr "实例和镜像存放地"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml345(para)
msgid ""
"Where instances and images will be stored will influence the architecture."
msgstr "实例和镜像存放在哪里会影响到架构。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml351(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml124(term)
msgid "Server hardware"
msgstr "服务器硬件"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml353(para)
msgid ""
"If the solution is a scale-out storage architecture that includes DAS, it "
"will affect the server hardware selection. This could ripple into the "
"decisions that affect host density, instance density, power density, OS-"
"hypervisor, management tools and others."
msgstr "如果是一个囊括了DAS的横向存储架构的解决方案，它将影响到服务器硬件的选择。这会波及到决策，因为影响了主机密度，实例密度，电源密度，操作系统-Hypervisor，管理工具及更多。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml362(para)
msgid ""
"General purpose OpenStack cloud has multiple options. The key factors that "
"will have an influence on selection of storage hardware for a general "
"purpose OpenStack cloud are as follows:"
msgstr "通用型OpenStack云有很多属性，影响存储硬件的选择的关键因素有以下："

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml368(term)
msgid "Capacity"
msgstr "容量"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml370(para)
msgid ""
"Hardware resources selected for the resource nodes should be capable of "
"supporting enough storage for the cloud services. Defining the initial "
"requirements and ensuring the design can support adding capacity is "
"important. Hardware nodes selected for object storage should be capable of "
"support a large number of inexpensive disks with no reliance on RAID "
"controller cards. Hardware nodes selected for block storage should be "
"capable of supporting high speed storage solutions and RAID controller cards"
" to provide performance and redundancy to storage at a hardware level. "
"Selecting hardware RAID controllers that automatically repair damaged arrays"
" will assist with the replacement and repair of degraded or destroyed "
"storage devices."
msgstr "对于资源节点的硬件选择来说，须为云服务提供足够的存储。定义初始的需求和确保设计是支持增加的能力是很重要的。为对象存储选择硬件节点须支持大量的廉价磁盘，无须冗余，无须RAID控制卡。为块存储选择硬件节点须具备支持高速存储解决方案，拥有RAID控制卡保证性能，以及在硬件层的冗余能力。选择硬件RAID控制器，是其可以自动修复损坏的阵列，以帮助人工的介入，替代及修复已经降级或损坏的存储设备。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml389(para)
msgid ""
"Disks selected for object storage services do not need to be fast performing"
" disks. We recommend that object storage nodes take advantage of the best "
"cost per terabyte available for storage. Contrastingly, disks chosen for "
"block storage services should take advantage of performance boosting "
"features that may entail the use of SSDs or flash storage to provide high "
"performance block storage pools. Storage performance of ephemeral disks used"
" for instances should also be taken into consideration. If compute pools are"
" expected to have a high utilization of ephemeral storage, or requires very "
"high performance, it would be advantageous to deploy similar hardware "
"solutions to block storage."
msgstr "对于对象存储的磁盘选择来说，不需要速度太快的磁盘。我们建议对象存储节点利用最佳的每TB开销比即可。与此相反，为块存储服务选择磁盘，则须利用提高性能的特性来选择，比如使用SSD或flash磁盘来提供高性能的块存储池。即使是为实例运行的临时的磁盘也得考虑性能。如果计算池希望大量采用临时存储，或者是要求非常高的性能，就需要部署上述块存储硬件的解决方案。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml404(term)
msgid "Fault tolerance"
msgstr "容错"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml406(para)
msgid ""
"Object storage resource nodes have no requirements for hardware fault "
"tolerance or RAID controllers. It is not necessary to plan for fault "
"tolerance within the object storage hardware because the object storage "
"service provides replication between zones as a feature of the service. "
"Block storage nodes, compute nodes and cloud controllers should all have "
"fault tolerance built in at the hardware level by making use of hardware "
"RAID controllers and varying levels of RAID configuration. The level of RAID"
" chosen should be consistent with the performance and availability "
"requirements of the cloud."
msgstr "对象存储资源节点对于硬件容错或RAID控制器没有任何的要求。没必要为对象存储硬件规划容错是因为对象存储服务本身就提供了在zone之间的复制。块存储节点、计算节点以及云控制器节点都须在硬件层有容错机制，使用硬件RAID控制器的话请确认RAID配置的级别。RAID级别的选择对于云的需求来说须性能和可用性兼顾。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml424(title)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml281(title)
msgid "Selecting networking hardware"
msgstr "选择网络硬件"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml425(para)
msgid ""
"Selecting network architecture determines which network hardware will be "
"used. Networking software is determined by the selected networking hardware."
" For example, selecting networking hardware that only supports Gigabit "
"Ethernet (GbE) will impact the overall design. Similarly, deciding to use 10"
" Gigabit Ethernet (10GbE) will have a number of impacts on various areas of "
"the overall design."
msgstr "选择网络架构决定了那些网络硬件将会被使用。而网络的软件是由选择好的网络硬件所决定的。举例，选择了网络硬件仅支持千兆以太网 (GbE)会影响到整个设计。同样地，决定使用 万兆以太网(10GbE)仅会影响到整个设计的局部一些区域。 "

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml432(para)
msgid ""
"There are more subtle design impacts that need to be considered. The "
"selection of certain networking hardware (and the networking software) "
"affects the management tools that can be used. There are exceptions to this;"
" the rise of \"open\" networking software that supports a range of "
"networking hardware means that there are instances where the relationship "
"between networking hardware and networking software are not as tightly "
"defined. An example of this type of software is Cumulus Linux, which is "
"capable of running on a number of switch vendor's hardware solutions."
msgstr "有许多设计上的细节需要被考虑。选择好了网络硬件(或网络软件)会影响到管理工具的使用。除非出现下面情况：越来越多的用户倾向于使用\"开放“的网络软件来支持广泛的网络硬件，意味着某些情况下网络硬件和软件之间的关系是不是被严格定义。关于此类型的软件Cumulus Linux即是个例子，Cumulus Linux具有运行多数交换机供应商的硬件的能力。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml442(para)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml282(para)
msgid ""
"Some of the key considerations that should be included in the selection of "
"networking hardware include:"
msgstr "选择联网硬件时需要考虑的一些关键因素包括："

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml446(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml286(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml300(term)
msgid "Port count"
msgstr "端口数目"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml448(para)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml288(para)
msgid ""
"The design will require networking hardware that has the requisite port "
"count."
msgstr "设计要求网络硬件有充足的端口数目。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml453(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml293(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml307(term)
msgid "Port density"
msgstr "端口密度"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml455(para)
msgid ""
"The network design will be affected by the physical space that is required "
"to provide the requisite port count. A higher port density is preferred, as "
"it leaves more rack space for compute or storage components that may be "
"required by the design. This can also lead into concerns about fault domains"
" and power density that should be considered. Higher density switches are "
"more expensive and should also be considered, as it is important not to over"
" design the network if it is not required."
msgstr "由于端口数量的需求，就需要更大的物理空间，以至于会影响到网络的设计。一旦首选敲定了高端口密度，在设计中就得考虑为计算和存储留下机架空间。进一步还得考虑容错设备和电力密度。高密度的交换机会非常的昂贵，亦需考虑在内，当然如若不是刚性需求，这个是没有设计网络本身重要。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml468(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml308(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml323(term)
msgid "Port speed"
msgstr "端口速度"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml470(para)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml325(para)
msgid ""
"The networking hardware must support the proposed network speed, for "
"example: 1GbE, 10GbE, or 40GbE (or even 100GbE)."
msgstr "网络硬件必须支持常见的网络速度，例如：1GbE、10GbE 或者 40GbE(甚至是 100GbE)。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml477(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml316(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml331(term)
msgid "Redundancy"
msgstr "冗余"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml479(para)
msgid ""
"The level of network hardware redundancy required is influenced by the user "
"requirements for high availability and cost considerations. Network "
"redundancy can be achieved by adding redundant power supplies or paired "
"switches. If this is a requirement, the hardware will need to support this "
"configuration."
msgstr "网络硬件的冗余级别需求是受用户对于高可用和开销考虑的影响的。网络冗余可以由增加冗余的电力供应和结对的交换机来实现，加入遇到这样的需求，硬件需要支持冗余的配置。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml488(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml328(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml346(term)
msgid "Power requirements"
msgstr "电力要求"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml490(para)
msgid ""
"Ensure that the physical data center provides the necessary power for the "
"selected network hardware."
msgstr "确保物理数据中心为选择的网络硬件提供了必要的电力。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml494(para)
msgid ""
"This may be an issue for spine switches in a leaf and spine fabric, or end "
"of row (EoR) switches."
msgstr "这可能会给脊柱交换机的叶和面带来问题，同样排尾(EoR)交换机也会有问题。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml501(para)
msgid ""
"There is no single best practice architecture for the networking hardware "
"supporting a general purpose OpenStack cloud that will apply to all "
"implementations. Some of the key factors that will have a strong influence "
"on selection of networking hardware include:"
msgstr "网络硬件没有单一的最佳实践架构以支持一个通用型OpenStack云，让它满足所有的实现。一些在选择网络硬件时有重大影响的关键元素包括："

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml510(para)
msgid ""
"All nodes within an OpenStack cloud require network connectivity. In some "
"cases, nodes require access to more than one network segment. The design "
"must encompass sufficient network capacity and bandwidth to ensure that all "
"communications within the cloud, both north-south and east-west traffic have"
" sufficient resources available."
msgstr "一个OpenStack云中所有的节点都需要网络连接。在一些情况下，节点需要访问多个网段。云的设计必须围绕充足的网络容量和带宽去确保所有的通信，无论南北流量还是东西流量都需要有充足的资源可用。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml523(para)
msgid ""
"The network design should encompass a physical and logical network design "
"that can be easily expanded upon. Network hardware should offer the "
"appropriate types of interfaces and speeds that are required by the hardware"
" nodes."
msgstr "网络设计须围绕物理网路和逻辑网络能够轻松扩展的设计来开展。网络硬件须提供给服务器节点所需要的合适的接口类型和速度。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml531(term)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml696(title)
#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml127(term)
msgid "Availability"
msgstr "可用性"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml533(para)
msgid ""
"To ensure that access to nodes within the cloud is not interrupted, we "
"recommend that the network architecture identify any single points of "
"failure and provide some level of redundancy or fault tolerance. With regard"
" to the network infrastructure itself, this often involves use of networking"
" protocols such as LACP, VRRP or others to achieve a highly available "
"network connection. In addition, it is important to consider the networking "
"implications on API availability. In order to ensure that the APIs, and "
"potentially other services in the cloud are highly available, we recommend "
"you design a load balancing solution within the network architecture to "
"accommodate for these requirements."
msgstr "为确保云内部访问节点不会被中断，我们建议网络架构不要存在单点故障，应该提供一定级别的冗余和容错。网络基础设施本身就能提供一部分，比如使用网络协议诸如LACP,VRRP或其他的保证网络连接的高可用。另外，考虑网络实现的API可用亦非常重要。为了确保云中的API以及其它服务高可用，我们建议用户设计网络架构的负载均衡解决方案，以满足这些需求。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml552(title)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml343(title)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml358(title)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml370(title)
msgid "Software selection"
msgstr "软件选择"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml553(para)
msgid ""
"Software selection for a general purpose OpenStack architecture design needs"
" to include these three areas:"
msgstr "软件选择对于通用型 OpenStack 架构设计来说需要包括以下三个方面："

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml557(para)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml363(para)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml375(para)
msgid "Operating system (OS) and hypervisor"
msgstr "操作系统(OS)和虚拟机管理软件"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml563(para)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml549(title)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml369(para)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml524(title)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml381(para)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml540(title)
msgid "Supplemental software"
msgstr "增强软件"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml568(title)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml376(title)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml389(title)
msgid "Operating system and hypervisor"
msgstr "操作系统和虚拟机管理软件"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml569(para)
msgid ""
"The operating system (OS) and hypervisor have a significant impact on the "
"overall design. Selecting a particular operating system and hypervisor can "
"directly affect server hardware selection. Make sure the storage hardware "
"and topology support the selected operating system and hypervisor "
"combination. Also ensure the networking hardware selection and topology will"
" work with the chosen operating system and hypervisor combination. For "
"example, if the design uses Link Aggregation Control Protocol (LACP), the OS"
" and hypervisor both need to support it."
msgstr "操作系统(OS)和hypervisor对于整个设计有着深刻的影响。选择一个特定的操作系统和hypervisor能够直接影响到服务器硬件的选择。确保存储硬件和拓扑支持选择好的操作系统和Hypervisor组合。也得确保网络硬件的选择和拓扑可在选定的操作系统和Hypervisor组合下正常工作。例如，如果设计中使用了链路聚合控制协议(LACP)的话，操作系统和hypervisor都需要支持它才可正常工作。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml579(para)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml387(para)
msgid ""
"Some areas that could be impacted by the selection of OS and hypervisor "
"include:"
msgstr "可能受到 OS 和虚拟管理程序的选择所影响的一些领域包括："

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml585(para)
msgid ""
"Selecting a commercially supported hypervisor, such as Microsoft Hyper-V, "
"will result in a different cost model rather than community-supported open "
"source hypervisors including <glossterm baseform=\"kernel-based VM "
"(KVM)\">KVM</glossterm>, Kinstance or <glossterm>Xen</glossterm>. When "
"comparing open source OS solutions, choosing Ubuntu over Red Hat (or vice "
"versa) will have an impact on cost due to support contracts."
msgstr "选择商业支持的hypervisor，诸如微软 Hyper-V，和使用社区支持的开源hypervisor相比，在开销方面有很大的差别。开源的hypervisor有<glossterm baseform=\"kernel-based VM (KVM)\">KVM</glossterm>, Kinstance or <glossterm>Xen</glossterm>。当比较开源操作系统解决方案时，选择了Ubuntu而不是红帽(反之亦然)，由于支持的合同不同，开销也会不一样。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml597(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml404(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml414(term)
msgid "Supportability"
msgstr "受支持程度"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml599(para)
msgid ""
"Depending on the selected hypervisor, staff should have the appropriate "
"training and knowledge to support the selected OS and hypervisor "
"combination. If they do not, training will need to be provided which could "
"have a cost impact on the design."
msgstr "依赖于所选定的hypervisor，相关工作人员需要受过对应的培训以及接受相关的知识，才可支持所选定的操作系统和hpervisor组合。如果没有的话，那么在设计中就得考虑培训的提供是需要另外的开销的。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml608(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml414(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml426(term)
msgid "Management tools"
msgstr "管理工具"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml610(para)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml416(para)
msgid ""
"The management tools used for Ubuntu and Kinstance differ from the "
"management tools for VMware vSphere. Although both OS and hypervisor "
"combinations are supported by OpenStack, there will be very different "
"impacts to the rest of the design as a result of the selection of one "
"combination versus the other."
msgstr "Ubuntu和Kinstance的管理工具和VMware vSphere的管理工具是不一样的。尽管OpenStack支持它们所有的操作系统和hypervisor组合。这也会对其他的设计有着非常不同的影响，结果就是选择了一种组合再作出选择。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml620(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml425(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml437(term)
msgid "Scale and performance"
msgstr "规模和性能"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml622(para)
msgid ""
"Ensure that selected OS and hypervisor combinations meet the appropriate "
"scale and performance requirements. The chosen architecture will need to "
"meet the targeted instance-host ratios with the selected OS-hypervisor "
"combinations."
msgstr "确保所选择的操作系统和Hypervisor组合能满足相应的扩展和性能需求。所选择的架构需要满足依据所选择的操作系统-hypervisor组合目标实例-主机比例。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml632(para)
msgid ""
"Ensure that the design can accommodate regular periodic installations of "
"application security patches while maintaining required workloads. The "
"frequency of security patches for the proposed OS-hypervisor combination "
"will have an impact on performance and the patch installation process could "
"affect maintenance windows."
msgstr "确保设计能够在维护负载需求时能够容纳正常的所安装的应用的安全补丁。为操作系统-hypervisor组合打安全补丁的频率会影响到性能，而且补丁的安装流程也会影响到维护工作。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml642(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml446(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml460(term)
msgid "Supported features"
msgstr "支持的特性"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml644(para)
msgid ""
"Determine which features of OpenStack are required. This will often "
"determine the selection of the OS-hypervisor combination. Some features are "
"only available with specific OSs or hypervisors. For example, if certain "
"features are not available, the design might need to be modified to meet the"
" user requirements."
msgstr "决定那些特性是需要OpenStack提供的。这通常也决定了操作系统-hypervisor组合的选择。一些特性仅在特定的操作系统和hypervisor中是可用的。举例，如果确认某些特性无法实现，设计也许需要修改代码去满足用户的需求。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml653(term)
#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml431(term)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml457(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml472(term)
msgid "Interoperability"
msgstr "互操作性"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml655(para)
msgid ""
"You will need to consider how the OS and hypervisor combination interactions"
" with other operating systems and hypervisors, including other software "
"solutions. Operational troubleshooting tools for one OS-hypervisor "
"combination may differ from the tools used for another OS-hypervisor "
"combination and, as a result, the design will need to address if the two "
"sets of tools need to interoperate."
msgstr "用户需要考虑此操作系统和Hypervisor组合和另外的操作系统和hypervisor怎么互动，甚至包括和其它的软件。操作某一操作系统-hypervisor组合的故障排除工具，和操作其他的操作系统-hypervisor组合也许根本就不一样，那结果就是，设计时就需要交付能够使这两者工具集都能工作的工具。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml668(para)
msgid ""
"Selecting which OpenStack components are included in the overall design can "
"have a significant impact. Some OpenStack components, like compute and Image"
" Service, are required in every architecture. Other components, like "
"Orchestration, are not always required."
msgstr "选择包含那些OpenStack组件对整个设计有着显著的影响。一些OpenStack组件，如计算和镜像服务，在每个架构中都是硬性需求，但另外一些组件，如编排，就不经常被用户所需要。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml672(para)
msgid ""
"Excluding certain OpenStack components can limit or constrain the "
"functionality of other components. For example, if the architecture includes"
" Orchestration but excludes Telemetry, then the design will not be able to "
"take advantage of Orchestrations' auto scaling functionality. It is "
"important to research the component interdependencies in conjunction with "
"the technical requirements before deciding on the final architecture."
msgstr "去除某些OpenStack组件会导致其他组件的功能受限。举例，如果架构中包含了编排但是去除了Telmetry，那么这个设计就无法使用编排的自动扩展功能。在决定最终架构之前，研究组件间的内部依赖是很重要的技术需求。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml680(title)
msgid "Supplemental components"
msgstr "支撑组件"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml681(para)
msgid ""
"While OpenStack is a fairly complete collection of software projects for "
"building a platform for cloud services, there are invariably additional "
"pieces of software that need to be considered in any given OpenStack design."
msgstr "OpenStack为了构建一个平台提供云服务，是完全公平的收集软件的项目。在任何给定的OpenStack设计中都需要考虑那些附加的软件。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml688(title)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml530(title)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml547(title)
msgid "Networking software"
msgstr "联网软件"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml689(para)
msgid ""
"OpenStack Networking provides a wide variety of networking services for "
"instances. There are many additional networking software packages that can "
"be useful when managing OpenStack components. Some examples include:"
msgstr "OpenStack联网为实例提供各种各样的联网服务。有许多联网软件包可用于管理OpenStack组件，举几个例子："

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml695(para)
msgid "Software to provide load balancing"
msgstr "提供负载均衡的软件"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml700(para)
msgid "Network redundancy protocols"
msgstr "网络冗余协议"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml705(para)
msgid "Routing daemons"
msgstr "路由守护进程"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml710(para)
msgid ""
"Some of these software packages are described in more detail in the "
"<citetitle>OpenStack High Availability Guide</citetitle> (refer to the <link"
" href=\"http://docs.openstack.org/high-availability-guide/content/ch-"
"network.html\">Network controller cluster stack chapter</link> of the "
"OpenStack High Availability Guide)."
msgstr "这些软件包更加详细的描述可参考 <citetitle>OpenStack高可用指南</citetitle> 中的(<link href=\"http://docs.openstack.org/high-availability-guide/content/ch-network.html\">Network 控制器集群</link> 章节)。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml716(para)
msgid ""
"For a general purpose OpenStack cloud, the OpenStack infrastructure "
"components need to be highly available. If the design does not include "
"hardware load balancing, networking software packages like HAProxy will need"
" to be included."
msgstr "对于通用型OpenStack云来说，基础设施组件需要高可用。如果设计时没有包括硬件的负载均衡器，那么就得包含网络软件包如HAProxy。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml723(title)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml546(title)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml561(title)
msgid "Management software"
msgstr "管理软件"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml724(para)
msgid ""
"Selected supplemental software solution impacts and affects the overall "
"OpenStack cloud design. This includes software for providing clustering, "
"logging, monitoring and alerting."
msgstr "选择支撑软件解决方案影响着整个OpenStack云设计过程。这些软件可提供诸如集群、日志、监控以及告警。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml728(para)
msgid ""
"Inclusion of clustering software, such as Corosync or Pacemaker, is "
"determined primarily by the availability requirements. The impact of "
"including (or not including) these software packages is primarily determined"
" by the availability of the cloud infrastructure and the complexity of "
"supporting the configuration after it is deployed. The <link "
"href=\"http://docs.openstack.org/high-availability-"
"guide/\"><citetitle>OpenStack High Availability Guide</citetitle></link> "
"provides more details on the installation and configuration of Corosync and "
"Pacemaker, should these packages need to be included in the design."
msgstr "在集群软件中如 Corosync和Pacemaker在可用性需求中占主流。包含(不包含)这些软件包是主要决定的，要使云基础设施具有高可用的话，当然在部署之后会带来复杂的配置。<link href=\"http://docs.openstack.org/high-availability-guide/\"><citetitle>OpenStack 高可用指南</citetitle></link> 提供了更加详细的安装和配置Corosync和Pacemaker，所以在设计中这些软件包需要被包含。 "

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml739(para)
msgid ""
"Requirements for logging, monitoring, and alerting are determined by "
"operational considerations. Each of these sub-categories includes a number "
"of various options. For example, in the logging sub-category one might "
"consider Logstash, Splunk, instanceware Log Insight, or some other log "
"aggregation-consolidation tool. Logs should be stored in a centralized "
"location to make it easier to perform analytics against the data. Log data "
"analytics engines can also provide automation and issue notification by "
"providing a mechanism to both alert and automatically attempt to remediate "
"some of the more commonly known issues."
msgstr "对日志、监测以及报警的需求是由运维考虑决定的。它们的每个子类别都包含了大量的属性。举例，在日志子类别中，某些情况考虑使用Logstash,Splunk，instanceware Log Insight等，或者其他的日志聚合-合并工具。日志需要存放在中心地带，使分析数据变得更为简单。日志数据分析引擎亦得提供自动化和问题通知，通过提供一致的预警和自动修复某些常见的已知问题。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml749(para)
msgid ""
"If these software packages are required, the design must account for the "
"additional resource consumption (CPU, RAM, storage, and network bandwidth). "
"Some other potential design impacts include:"
msgstr "如果这些软件包都需要的话，设计必须计算额外的资源使用率(CPU，内存，存储以及网络带宽)。其他一些潜在影响设计的有："

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml755(para)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml573(para)
msgid ""
"OS-hypervisor combination: Ensure that the selected logging, monitoring, or "
"alerting tools support the proposed OS-hypervisor combination."
msgstr "操作系统-hypervisor组合：确保选择的日志、监测、告警等工具支持打算组合的操作系统-Hypervisor。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml760(para)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml578(para)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml621(para)
msgid ""
"Network hardware: The network hardware selection needs to be supported by "
"the logging, monitoring, and alerting software."
msgstr "网络硬件：网络硬件的选择，要看其支持日志系统、监测系统以及预警系统的情况。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml767(title)
#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml584(title)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml629(title)
msgid "Database software"
msgstr "数据库软件"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml768(para)
msgid ""
"OpenStack components often require access to back-end database services to "
"store state and configuration information. Selecting an appropriate back-end"
" database that satisfies the availability and fault tolerance requirements "
"of the OpenStack services is required. OpenStack services supports "
"connecting to a database that is supported by the SQLAlchemy python drivers,"
" however, most common database deployments make use of MySQL or variations "
"of it. We recommend that the database, which provides back-end service "
"within a general purpose cloud, be made highly available when using an "
"available technology which can accomplish that goal."
msgstr "OpenStack组件通常需要访问后端的数据库服务以存放状态和配置信息。选择合适的后端数据库以满足可用性和容错的需求，这是OpenStack服务所要求的。OpenStack服务支持的连接数据库的方式是由SQLAlchemy python所驱动，尽管如此，绝大多数部署还是使用MySQL或其变种。我们建议为通用型云提供后端服务的数据库使用高可用技术确保其高可用，方可达到架构设计的目标。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml782(title)
msgid "Addressing performance-sensitive workloads"
msgstr "针对性能敏感的负载"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml783(para)
msgid ""
"Although one of the key defining factors for a general purpose OpenStack "
"cloud is that performance is not a determining factor, there may still be "
"some performance-sensitive workloads deployed on the general purpose "
"OpenStack cloud. For design guidance on performance-sensitive workloads, we "
"recommend that you refer to the focused scenarios later in this guide. The "
"resource-focused guides can be used as a supplement to this guide to help "
"with decisions regarding performance-sensitive workloads."
msgstr "虽然性能对于通用型OpenStack云是一个至为关键的因素，但不是决定性的因素，但是仍然有一些性能敏感的负载部署。关于设计性能敏感负载的想到，我们建议用户参考本书后面针对专用场景的描述。某些针对不同资源的向导可以帮助解决性能敏感负载的问题。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml795(title)
msgid "Compute-focused workloads"
msgstr "计算型的负载"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml796(para)
msgid ""
"In an OpenStack cloud that is compute-focused, there are some design choices"
" that can help accommodate those workloads. Compute-focused workloads demand"
" more CPU and memory resources with lower priority given to storage and "
"network performance. For guidance on designing for this type of cloud, "
"please refer to <xref linkend=\"compute_focus\"/>."
msgstr "在计算型OpenStack云中的一些设计选择是可以帮助满足他们的负载的。计算型云的负载要求有更多的CPU和内存资源，相对存储和网络的性能优先级要低的多。关于设计此类型云的指南，请参考 <xref linkend=\"compute_focus\"/>。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml804(title)
msgid "Network-focused workloads"
msgstr "网络型负载"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml805(para)
msgid ""
"In a network-focused OpenStack cloud, some design choices can improve the "
"performance of these types of workloads. Network-focused workloads have "
"extreme demands on network bandwidth and services that require specialized "
"consideration and planning. For guidance on designing for this type of "
"cloud, please refer to <xref linkend=\"network_focus\"/>."
msgstr "在网络型OpenStack云中，一些设计选择能够改进这些类型负载的性能。网络型OpenStack的负载对于网络带宽和服务有着苛刻的需求，所以需要特别的考量和规划。关于此类型云的设计指南，请参考 <xref linkend=\"network_focus\"/>。"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml813(title)
msgid "Storage-focused workloads"
msgstr "存储型负载"

#: ./doc/arch-design/generalpurpose/section_architecture_general_purpose.xml814(para)
msgid ""
"Storage focused OpenStack clouds need to be designed to accommodate "
"workloads that have extreme demands on either object or block storage "
"services. For guidance on designing for this type of cloud, please refer to "
"<xref linkend=\"storage_focus\"/>."
msgstr "存储型OpenStack云需要被设计成可容纳对对象存储和块存储服务有着苛刻需求的负载。关于设计此类型云的指南，请参考<xref linkend=\"storage_focus\"/>。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml9(para)
msgid ""
"When building a general purpose cloud, you should follow the <glossterm "
"baseform=\"IaaS\">Infrastructure-as-a-Service (IaaS)</glossterm> model; a "
"platform best suited for use cases with simple requirements. General purpose"
" cloud user requirements are not complex. However, it is important to "
"capture them even if the project has minimum business and technical "
"requirements, such as a proof of concept (PoC), or a small lab platform."
msgstr "当构建通用型云时，用户需要遵循 <glossterm baseform=\"IaaS\">Infrastructure-as-a-Service (IaaS)</glossterm>模式，基于简单的需求为用户寻求最合适的平台。通用型云的用户需求并不复杂。尽管如此，也要谨慎对待，即使项目是较小的业务，或者诸如概念验证、小型实验平台等技术需求。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml17(para)
msgid ""
"The following user considerations are written from the perspective of the "
"cloud builder, not from the perspective of the end user."
msgstr "以下用户考量的内容来自于云构建者的记录，并非最终用户。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml26(para)
msgid ""
"Financial factors are a primary concern for any organization. Cost is an "
"important criterion as general purpose clouds are considered the baseline "
"from which all other cloud architecture environments derive. General purpose"
" clouds do not always provide the most cost-effective environment for "
"specialized applications or situations. Unless razor-thin margins and costs "
"have been mandated as a critical factor, cost should not be the sole "
"consideration when choosing or designing a general purpose architecture."
msgstr "财务问题对任何组织来说都是头等大事。开销是一个重要的标准，通用型云以此作为基本，其它云架构环境以此作为参考。通用型云一般不会为特殊的应用或情况提供较划算的环境，除非是不赚钱或者成本已经定了，当选择或设计一个通用架构时开销才不是唯一考虑的。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml39(term)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml31(term)
#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml46(term)
msgid "Time to market"
msgstr "上线时间"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml41(para)
msgid ""
"The ability to deliver services or products within a flexible time frame is "
"a common business factor when building a general purpose cloud. In today's "
"high-speed business world, the ability to deliver a product in six months "
"instead of two years is a driving force behind the decision to build general"
" purpose clouds. General purpose clouds allow users to self-provision and "
"gain access to compute, network, and storage resources on-demand thus "
"decreasing time to market."
msgstr "当构建一个通用型云时，有能力在灵活的时间内交付服务或产品，是业务普遍的一个情形。在今天高速发展的商务世界里，拥有在6个月内交付一款产品去替代2年完成的能力，这驱动着背后的决策者们决定构建通用型云。通用型云实现用户自服务，按需求获得访问计算、网络、存储资源，这将大大节省上线时间。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml53(term)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml40(term)
#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml33(term)
msgid "Revenue opportunity"
msgstr "赢利空间"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml55(para)
msgid ""
"Revenue opportunities for a cloud will vary greatly based on the intended "
"use case of that particular cloud. Some general purpose clouds are built for"
" commercial customer facing products, but there are alternatives that might "
"make the general purpose cloud the right choice. For example, a small cloud "
"service provider (CSP) might want to build a general purpose cloud rather "
"than a massively scalable cloud because they do not have the deep financial "
"resources needed, or because they do not, or will not, know in advance the "
"purposes for which their customers are going to use the cloud. For some "
"users, the advantages cloud itself offers mean an enhancement of revenue "
"opportunity. For others, the fact that a general purpose cloud provides only"
" baseline functionality will be a disincentive for use, leading to a "
"potential stagnation of potential revenue opportunities."
msgstr "赢利空间对于云来说是个最基本的义务。一些通用型云为商业客户构建产品，但也有替代品，可能使通用云的正确选择。例如，一个小型的云服务提供商(CSP)会构建一个通用云而放弃大规模的扩展云，也许是因为没有足够的财力支撑，有或许是因为无法得知客户使用云的目的是什么。对于一些用户来说，高级云本身就意味着赢利。但是另外一些用户，通用型云所提供的基本功能会阻碍使用，导致潜在的收入机会的停滞。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml77(title)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml54(title)
#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml82(title)
#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml41(term)
#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml53(title)
msgid "Legal requirements"
msgstr "法律需求"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml97(para)
msgid ""
"Data compliance policies governing certain types of information needing to "
"reside in certain locations due to regulatory issues - and more importantly,"
" cannot reside in other locations for the same reason."
msgstr "数据合规性-基于常规某些类型的数据需要放在某些位置，同样的原因，不能放在其他位置更加的重要。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml103(para)
#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml80(para)
#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml42(para)
#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml58(para)
msgid ""
"Examples of such legal frameworks include the <link "
"href=\"http://ec.europa.eu/justice/data-protection/\">data protection "
"framework</link> of the European Union and the requirements of the <link "
"href=\"http://www.finra.org/Industry/Regulation/FINRARules/\">Financial "
"Industry Regulatory Authority</link> in the United States. Consult a local "
"regulatory body for more information."
msgstr "相关的法律制度包括了有欧盟的<link href=\"http://ec.europa.eu/justice/data-protection/\">数据保护框架</link>以及美国<link href=\"http://www.finra.org/Industry/Regulation/FINRARules\">金融业监督管理局</link>的要求。请咨询当地的监管机构以了解更多相关信息。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml114(title)
#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml104(title)
msgid "Technical requirements"
msgstr "技术需求"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml115(para)
msgid ""
"Technical cloud architecture requirements should be weighted against the "
"business requirements."
msgstr "技术云架构需求相比业务需求，比重占得更多一些。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml122(para)
msgid ""
"As a baseline product, general purpose clouds do not provide optimized "
"performance for any particular function. While a general purpose cloud "
"should provide enough performance to satisfy average user considerations, "
"performance is not a general purpose cloud customer driver."
msgstr "作为基础产品，通用型云并不对任何特定的功能提供优化性能。虽然通用型云希望能够提供足够的性能以满足所以用户的考虑，但是性能本身并不是通用型云所关注的。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml131(term)
msgid "No predefined usage model"
msgstr "非预先定义的使用模型"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml133(para)
msgid ""
"The lack of a pre-defined usage model enables the user to run a wide variety"
" of applications without having to know the application requirements in "
"advance. This provides a degree of independence and flexibility that no "
"other cloud scenarios are able to provide."
msgstr "由于缺少预先定义的使用模型，导致用户在根本不知道应用需求的情况运行各式各样的应用。这里（OpenStack 通用型云，译者注）提供的独立性和灵活性的深度，也就只能是这么多了，不能提供更多的云场景。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml142(term)
msgid "On-demand and self-service application"
msgstr "按需或自服务应用"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml144(para)
msgid ""
"By definition, a cloud provides end users with the ability to self-provision"
" computing power, storage, networks, and software in a simple and flexible "
"way. The user must be able to scale their resources up to a substantial "
"level without disrupting the underlying host operations. One of the benefits"
" of using a general purpose cloud architecture is the ability to start with "
"limited resources and increase them over time as the user demand grows."
msgstr "根据定义，云提供给最终用户通过简单灵活的方式自适应的计算能力、存储、网络和软件的能力。用户必须能够在不破坏底层主机操作的情况下扩展资源到满足自身。使用通用型云架构的一个优点就是，在有限的资源下启动，随着时间的增加和用户的需求增长而轻松扩张的能力。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml157(term)
msgid "Public cloud"
msgstr "公有云"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml159(para)
msgid ""
"For a company interested in building a commercial public cloud offering "
"based on OpenStack, the general purpose architecture model might be the best"
" choice. Designers are not always going to know the purposes or workloads "
"for which the end users will use the cloud."
msgstr "对于一家公司对基于OpenStack构建一个商业公有云有兴趣的话，通用型架构模式也许是最好的选择。设计者毋须知道最终用户使用云的目的和具体负载。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml168(term)
msgid "Internal consumption (private) cloud"
msgstr "内部消费(私有)云"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml170(para)
msgid ""
"Organizations need to determine if it is logical to create their own clouds "
"internally. Using a private cloud, organizations are able to maintain "
"complete control over architectural and cloud components."
msgstr "组织需要决定在内部建立自己的云的逻辑。私有云的使用，组织需要维护整个架构中的控制点以及组件。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml175(para)
msgid ""
"Users will want to combine using the internal cloud with access to an "
"external cloud. If that case is likely, it might be worth exploring the "
"possibility of taking a multi-cloud approach with regard to at least some of"
" the architectural elements."
msgstr "用户打算既使用内部云又可访问外部云的组合。假如遇到类似的用例，也许值得一试的就是基于多个云的途径，考虑至少多个架构要点。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml183(para)
msgid ""
"Designs that incorporate the use of multiple clouds, such as a private cloud"
" and a public cloud offering, are described in the \"Multi-Cloud\" scenario,"
" see <xref linkend=\"multi_site\"/>."
msgstr "设计使用多个云，例如提供一个私有云和公有云的混合，有关“多云”的描述场景，请参考<xref linkend=\"multi_site\"/>。"

#: ./doc/arch-design/generalpurpose/section_user_requirements_general_purpose.xml193(para)
msgid ""
"Security should be implemented according to asset, threat, and vulnerability"
" risk assessment matrices. For cloud domains that require increased computer"
" security, network security, or information security, a general purpose "
"cloud is not considered an appropriate choice."
msgstr "安全应根据资产，威胁和脆弱性风险评估矩阵来实现。对于云领域来说，更加增加了计算安全、网络安全和信息安全等的需求。通用型云不被认为是恰当的选择。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml9(para)
msgid ""
"In the planning and design phases of the build out, it is important to "
"include the operation's function. Operational factors affect the design "
"choices for a general purpose cloud, and operations staff are often tasked "
"with the maintenance of cloud environments for larger installations."
msgstr "在构建过程中的规划和设计阶段，能够考虑到运维的内容显得异常的重要。对通用型云来说，运维因素影响着设计的选择，而且运维人员担任着维护云环境的任务，以及最初大规模的安装、部署。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml14(para)
msgid ""
"Knowing when and where to implement redundancy and high availability is "
"directly affected by expectations set by the terms of the Service Level "
"Agreements (SLAs). SLAs are contractual obligations that provide assurances "
"for service availability. They define the levels of availability that drive "
"the technical design, often with penalties for not meeting contractual "
"obligations."
msgstr "服务水平协议(SLA)的设定，就是知道何时以及何地实现冗余和高可用会直接影响到预期。SLA是提供保证服务可用性合同义务。他们定义的可用性级别驱动着技术的设计，若不能实现合同义务，则会得到相应的惩罚。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml20(para)
msgid "SLA terms that will affect the design include:"
msgstr "影响设计的SLA术语包括："

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml23(para)
msgid ""
"API availability guarantees implying multiple infrastructure services, and "
"highly available load balancers."
msgstr "由多基础设施服务和高可用负载均衡实现API可用性保证。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml28(para)
msgid ""
"Network uptime guarantees affecting switch design, which might require "
"redundant switching and power."
msgstr "网络运行时间保证影响这交换机的设计，需要交换机的冗余，以及其电源的冗余。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml33(para)
msgid ""
"Network security policies requirements need to be factored in to "
"deployments."
msgstr "网络安全规则的需求需要在部署时被处理。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml38(title)
#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml36(title)
msgid "Support and maintainability"
msgstr "支持和维护"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml39(para)
msgid ""
"To be able to support and maintain an installation, OpenStack cloud "
"management requires operations staff to understand and comprehend design "
"architecture content. The operations and engineering staff skill level, and "
"level of separation, are dependent on size and purpose of the installation. "
"Large cloud service providers, or telecom providers, are more likely to be "
"managed by a specially trained, dedicated operations organization. Smaller "
"implementations are more likely to rely on support staff that need to take "
"on combined engineering, design and operations functions."
msgstr "为了能够在安装之后能够支持和维护，OpenStack云管理需要运维人员理解设计架构内容。运维人员和工程师人员的技能级别，以及他们之间的界限，依赖于安装的规模大小和目的。大型的云服务提供商或者电信运营商，会有针对性的培训，专门的运维部门，小型的实现的话，支持人员通常是工程师、设计师、和运维人员的合体。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml48(para)
msgid ""
"Maintaining OpenStack installations requires a variety of technical skills. "
"For example, if you are to incorporate features into an architecture and "
"design that reduce the operations burden, it is advised to automate the "
"operations functions. It may, however, be beneficial to use third party "
"management companies with special expertise in managing OpenStack "
"deployment."
msgstr "维护OpenStack安装需要大量的技术技能。例如，如果用户既做架构有设计试图减轻运维的负担，那一定建议运维自动化。或许用第三方管理公司的专长去管理OpenStack部署也是不错的选择。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml56(title)
#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml59(title)
#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml127(title)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml575(para)
msgid "Monitoring"
msgstr "监控"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml57(para)
msgid ""
"OpenStack clouds require appropriate monitoring platforms to ensure errors "
"are caught and managed appropriately. Specific metrics that are critically "
"important to monitor include:"
msgstr "OpenStack云需要合适的检测平台来确保错误可以及时捕获，能够更好的管理。一些特别的计量值需要重点监测的有："

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml62(para)
msgid "Image disk utilization"
msgstr "镜像磁盘使用"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml67(para)
msgid "Response time to the Compute API"
msgstr "计算API的响应时间"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml72(para)
msgid ""
"Leveraging existing monitoring systems is an effective check to ensure "
"OpenStack environments can be monitored."
msgstr "借助已有的监测系统是一种有效的检查，确保OpenStack环境可以被监测。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml77(title)
msgid "Downtime"
msgstr "宕机时间"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml78(para)
msgid ""
"To effectively run cloud installations, initial downtime planning includes "
"creating processes and architectures that support the following:"
msgstr "为有效的运行云，开始计划宕机包括建立流程和支持的架构有下列内容："

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml83(para)
msgid "Planned (maintenance)"
msgstr "计划内(维护)"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml88(para)
msgid "Unplanned (system faults)"
msgstr "计划外(系统出错)"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml93(para)
msgid ""
"Resiliency of overall system and individual components are going to be "
"dictated by the requirements of the SLA, meaning designing for high "
"availability (HA) can have cost ramifications."
msgstr "保持弹性的系统，松耦合的组件，都是SLA的需求，这也意味着设计高可用(HA)需要花费更多。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml96(para)
msgid ""
"For example, if a compute host failed, this would be an operational "
"consideration; requiring the restoration of instances from a snapshot or re-"
"spawning an instance. The overall application design is impacted, general "
"purpose clouds should not need to provide abilities to migrate instances "
"from one host to another. Additional considerations need to be made around "
"supporting instance migration if the expectation is that the application "
"will be designed to tolerate failure. Extra support services, including "
"shared storage attached to compute hosts, might need to be deployed in this "
"example."
msgstr "举例来说，如果计算主机失效，这就是运维要考虑的；需要将之前运行在其上的实例从快照中恢复或者重新建一个一模一样的实例。整个应用程序的设计都会被影响，通用型云不强求有提供将一个实例从一台主机迁移到另外一台主机的能力。假如用户期望其应用是被设计为容错的，那么就要额外考虑支持实例的迁移，也需要额外的支持服务，包括共享存储挂载到计算主机，就需要被部署。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml108(para)
msgid "Capacity constraints for a general purpose cloud environment include:"
msgstr "在通用型云环境中的容量限制包括："

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml112(para)
msgid "Compute limits"
msgstr "计算限制"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml117(para)
msgid "Storage limits"
msgstr "存储限制"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml122(para)
msgid ""
"A relationship exists between the size of the compute environment and the "
"supporting OpenStack infrastructure controller nodes requiring support."
msgstr "计算环境的规模和支撑它的OpenStack基础设施控制器节点之间的关系是确定的。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml125(para)
msgid ""
"Increasing the size of the supporting compute environment increases the "
"network traffic and messages, adding load to the controller or networking "
"nodes. Effective monitoring of the environment will help with capacity "
"decisions on scaling."
msgstr "增加支持计算环境的规模，会增加网络流量、消息，也会增加控制器和网络节点的负载。有效的监测整个环境，对决定扩展容量很有帮助。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml129(para)
msgid ""
"Compute nodes automatically attach to OpenStack clouds, resulting in a "
"horizontally scaling process when adding extra compute capacity to an "
"OpenStack cloud. Additional processes are required to place nodes into "
"appropriate availability zones and host aggregates. When adding additional "
"compute nodes to environments, ensure identical or functional compatible "
"CPUs are used, otherwise live migration features will break. It is necessary"
" to add rack capacity or network switches as scaling out compute hosts "
"directly affects network and datacenter resources."
msgstr "计算节点自动挂接到OpenStack云，结果就是为OpenStack云添加更多的计算容量，亦即是横向扩展。此流程需要节点是安置在合适的可用区域并且是支持主机聚合。当添加额外的计算节点到环境中时，要确保CPU类型的兼容性，否则可能会使活迁移的功能失效。扩展计算节点直接的结果会影响到网络及数据中心的其他资源，因为需要增加机柜容量以及交换机。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml137(para)
msgid ""
"Assessing the average workloads and increasing the number of instances that "
"can run within the compute environment by adjusting the overcommit ratio is "
"another option. It is important to remember that changing the CPU overcommit"
" ratio can have a detrimental effect and cause a potential increase in a "
"noisy neighbor. The additional risk of increasing the overcommit ratio is "
"more instances failing when a compute host fails."
msgstr "通过评估平均负载，在计算环境中调整超分配比例来增加运行实例的数量是另外一个办法。重要的是记住，改变CPU超分配比例有负面影响以及引起其它实例故障。加大超分配的比例另外的风险是当计算节点失效后会引发更多的实例失效。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml143(para)
msgid ""
"Compute host components can also be upgraded to account for increases in "
"demand; this is known as vertical scaling. Upgrading CPUs with more cores, "
"or increasing the overall server memory, can add extra needed capacity "
"depending on whether the running applications are more CPU intensive or "
"memory intensive."
msgstr "计算主机可以按需求来进行相应的组件升级，这就是传说中的纵向扩展。升级更多核的CPU,增加整台服务器的内存，要视运行的应用是需要CPU更紧张，还是需要内存更急切，以及需要多少。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml149(para)
msgid ""
"Insufficient disk capacity could also have a negative effect on overall "
"performance including CPU and memory usage. Depending on the back-end "
"architecture of the OpenStack Block Storage layer, capacity includes adding "
"disk shelves to enterprise storage systems or installing additional block "
"storage nodes. Upgrading directly attached storage installed in compute "
"hosts, and adding capacity to the shared storage for additional ephemeral "
"storage to instances, may be necessary."
msgstr "磁盘容量不足会给整个性能带来负面影响，会波及到CPU和内存的使用。这取决于后端架构的OpenStack块存储层，可以是为企业级存储系统增加磁盘，也可以是安装新的块存储节点，也可以是为计算主机直接挂接存储，也可以为实例从共享存储中添加临时空间。都有可能。"

#: ./doc/arch-design/generalpurpose/section_operational_considerations_general_purpose.xml157(para)
msgid ""
"For a deeper discussion on many of these topics, refer to the <link "
"href=\"http://docs.openstack.org/ops\"><citetitle>OpenStack Operations "
"Guide</citetitle></link>."
msgstr "有关这些题目的更加深入的讨论，请参考 <link href=\"http://docs.openstack.org/ops\"><citetitle>OpenStack 运维实战</citetitle></link>"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml59(None)
msgid ""
"@@image: '../figures/General_Architecture3.png'; "
"md5=278d469e1d026634b3682209c454bff1"
msgstr "@@image: '../figures/General_Architecture3.png'; md5=278d469e1d026634b3682209c454bff1"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml8(title)
msgid "Prescriptive example"
msgstr "示例"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml9(para)
msgid ""
"An online classified advertising company wants to run web applications "
"consisting of Tomcat, Nginx and MariaDB in a private cloud. To be able to "
"meet policy requirements, the cloud infrastructure will run in their own "
"data center. The company has predictable load requirements, but requires "
"scaling to cope with nightly increases in demand. Their current environment "
"does not have the flexibility to align with their goal of running an open "
"source API environment. The current environment consists of the following:"
msgstr "一家在线的广告公司，名称暂时保密，打算基于私有云方式运行他们的web应用，属于网站典型的架构：Tomcat + Nginx + MariaDB。 为了迎合他们的合规性需求，云基础设施运行在他们自己的数据中心。公司对负载需求有过预测，但是仍然提出了预防突发性的需求而能够灵活扩展。他们目前的环境不具有灵活的调整目标到运行开源的应用程序接口环境。目前的环境是如下面这样："

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml18(para)
msgid ""
"Between 120 and 140 installations of Nginx and Tomcat, each with 2 vCPUs and"
" 4 GB of RAM"
msgstr "Nginx和Tomcat的安装量在120和140之间，每个应用的实例是2 虚拟CPU和4 GB内存"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml22(para)
msgid ""
"A three-node MariaDB and Galera cluster, each with 4 vCPUs and 8 GB RAM"
msgstr "MariaDB安装在3个节点并组成Galera集群，每节点拥有4 vCPU和8GB内存"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml26(para)
msgid ""
"The company runs hardware load balancers and multiple web applications "
"serving their websites, and orchestrates environments using combinations of "
"scripts and Puppet. The website generates large amounts of log data daily "
"that requires archiving."
msgstr "公司的网站运行着基于硬件的负载均衡服务器和多个web应用服务，且他们的编排环境是混合使用Puppet和脚本。网站每天都会产生大量的日志文件需要归档。"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml38(para)
msgid ""
"OpenStack Controller service running Image, Identity, Networking, combined "
"with support services such as MariaDB and RabbitMQ, configured for high "
"availability on at least three controller nodes."
msgstr "OpenStack控制器运行着诸如镜像服务、认证服务、以及网络服务等，支撑它们的服务有诸如：MariaDB、RabbitMQ，至少有三台控制器节点配置为高可用。"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml48(para)
msgid ""
"OpenStack Block Storage for use by compute instances, requiring persistent "
"storage (such as databases for dynamic sites)."
msgstr "OpenStack块存储为计算实例所使用，需要持久性存储(正如数据库对于动态站点)。"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml53(para)
msgid "OpenStack Object Storage for serving static objects (such as images)."
msgstr "OpenStack对象存储为静态对象(例如镜像)服务。"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml60(para)
msgid ""
"Running up to 140 web instances and the small number of MariaDB instances "
"requires 292 vCPUs available, as well as 584 GB RAM. On a typical 1U server "
"using dual-socket hex-core Intel CPUs with Hyperthreading, and assuming 2:1 "
"CPU overcommit ratio, this would require 8 OpenStack Compute nodes."
msgstr "运行140个web实例以及少量的MariaDB实例需要292颗vCPU,以及584GB内存。在典型的1U的服务器，使用双socket，16核，开启超线程的IntelCPU，计算为2:1的CPU超分配比例，可以得出需要8台这样的OpenStack计算节点。"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml66(para)
msgid ""
"The web application instances run from local storage on each of the "
"OpenStack Compute nodes. The web application instances are stateless, "
"meaning that any of the instances can fail and the application will continue"
" to function."
msgstr "web应用实例均运行在每个OpenStack计算节点的本地存储之上。所有的web应用实例都是无状态的，也就是意味着任何的实例宕掉，都不会影响到整体功能的继续服务。"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml70(para)
msgid ""
"MariaDB server instances store their data on shared enterprise storage, such"
" as NetApp or Solidfire devices. If a MariaDB instance fails, storage would "
"be expected to be re-attached to another instance and rejoined to the Galera"
" cluster."
msgstr "MariaDB服务器实例将数据存储在共享存储中，使用企业级存储，有NetApp和Solidfire的设备。如果一个MariaDB的实例宕掉，另外一个实例会重新挂接原来的存储，且重新加入到Galera集群中。"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml75(para)
msgid ""
"Logs from the web application servers are shipped to OpenStack Object "
"Storage for processing and archiving."
msgstr "将web应用的日志放在OpenStack对象存储中，用来集中处理和归档。"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml78(para)
msgid ""
"Additional capabilities can be realized by moving static web content to be "
"served from OpenStack Object Storage containers, and backing the OpenStack "
"Image Service with OpenStack Object Storage."
msgstr "附加功能可实现将静态的web内容迁移到OpenStack对象存储中，且使用OpenStack对象存储作为OpenStack镜像服务的后端。"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml83(para)
msgid ""
"Increasing OpenStack Object Storage means network bandwidth needs to be "
"taken into consideration. Running OpenStack Object Storage with network "
"connections offering 10 GbE or better connectivity is advised."
msgstr "增加OpenStack对象存储同时也意味着需要考虑更大的带宽。运行OpenStack对象存储，请使用10 GbE或更高的网络连接。"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml90(para)
msgid ""
"Leveraging Orchestration and Telemetry modules is also a potential issue "
"when providing auto-scaling, orchestrated web application environments. "
"Defining the web applications in <glossterm baseform=\"Heat Orchestration "
"Template (HOT)\">Heat Orchestration Templates (HOT)</glossterm> negates the "
"reliance on the current scripted Puppet solution."
msgstr "借助于Orchestration和Telemetry模块可以为web应用环境提供自动扩展的能力。使用Puppet脚本定义web应用的 <glossterm baseform=\"Heat Orchestration Template (HOT)\">Heat Orchestration Templates (HOT)</glossterm>即可实现。"

#: ./doc/arch-design/generalpurpose/section_prescriptive_example_general_purpose.xml95(para)
msgid ""
"OpenStack Networking can be used to control hardware load balancers through "
"the use of plug-ins and the Networking API. This allows users to control "
"hardware load balance pools and instances as members in these pools, but "
"their use in production environments must be carefully weighed against "
"current stability."
msgstr "OpenStack网络可以通过使用插件和网络的应用程序接口控制硬件负载均衡器。允许用户控制硬件负载均衡池以及作为池的成员的实例，但是使用它们在生产环境的话要小心权衡它的稳定程度。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml13(para)
msgid ""
"General purpose clouds are often expected to include these base services:"
msgstr "通用型云通常实现所包括的基本服务："

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml32(para)
msgid ""
"Each of these services has different resource requirements. As a result, you"
" must make design decisions relating directly to the service, as well as "
"provide a balanced infrastructure for all services."
msgstr "这些服务中的每一个都有不同的资源需求。所以，提供所有服务意味着提供平衡的基础设施，直接关系到最终的服务，依据这些作出设计决定是非常重要的。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml35(para)
msgid ""
"Consider the unique aspects of each service that requires design since "
"individual characteristics and service mass can impact the hardware "
"selection process. Hardware designs are generated for each type of the "
"following resource pools:"
msgstr "考虑到每个服务的不一致方面，需要设计为分离的因素，服务的复杂性，都会影响到硬件的选择流程。硬件的设计需要根据下列不同的资源池生成不同的配置，"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml56(para)
msgid ""
"Hardware decisions are also made in relation to network architecture and "
"facilities planning. These factors play heavily into the overall "
"architecture of an OpenStack cloud."
msgstr "许多额外的硬件决策会影响到网络的架构和设施的规划。这些问题在OpenStack云的整个架构中扮演非常重要的角色。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml61(title)
msgid "Designing compute resources"
msgstr "规划计算资源"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml62(para)
msgid ""
"When designing compute resource pools, a number of factors can impact your "
"design decisions. For example, decisions related to processors, memory, and "
"storage within each hypervisor are just one element of designing compute "
"resources. In addition, decide whether to provide compute resources in a "
"single pool or in multiple pools. We recommend the compute design allocates "
"multiple pools of resources to be addressed on-demand."
msgstr "当设计计算资源池时，有很多情形会影响到用户的设计决策。例如，和每种hypervisor相关的处理器、内存和存储仅仅是设计计算资源时考虑的一个因素。另外，将计算资源用户单一的池还是用户多个池也是有必要考虑的，我们建议用户设计将计算资源设计为资源池，实现按需使用。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml70(para)
msgid ""
"A compute design that allocates multiple pools of resources makes best use "
"of application resources running in the cloud. Each independent resource "
"pool should be designed to provide service for specific flavors of instances"
" or groupings of flavors. Designing multiple resource pools helps to ensure "
"that, as instances are scheduled onto compute hypervisors, each independent "
"node's resources will be allocated to make the most efficient use of "
"available hardware. This is commonly referred to as bin packing."
msgstr "一个计算设计在多个池中分配资源，会使云中运行的应用资源利用的最为充分。每个独立的资源池应该被设计为特定的类型的实例或一组实例提供服务，设计多个资源池可帮助确保这样，当实例被调度到hypervisor节点，每个独立的节点资源将会被分配到最合适的可用的硬件。这就是常见的集装箱模式。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml78(para)
msgid ""
"Using a consistent hardware design among the nodes that are placed within a "
"resource pool also helps support bin packing. Hardware nodes selected for "
"being a part of a compute resource pool should share a common processor, "
"memory, and storage layout. By choosing a common hardware design, it becomes"
" easier to deploy, support and maintain those nodes throughout their life "
"cycle in the cloud."
msgstr "使用一致的硬件来设计资源池中的节点对装箱起到积极作用。选择硬件节点当作计算资源池的一部分最好是拥有一样的处理器、内存以及存储类型。选择一致的硬件设计，将会在云的整个生命周期展现出更加容易部署、支持和维护的好处。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml85(para)
msgid ""
"An <firstterm>overcommit ratio</firstterm> is the ratio of available virtual"
" resources, compared to the available physical resources. OpenStack is able "
"to configure the overcommit ratio for CPU and memory. The default CPU "
"overcommit ratio is 16:1 and the default memory overcommit ratio is 1.5:1. "
"Determining the tuning of the overcommit ratios for both of these options "
"during the design phase is important as it has a direct impact on the "
"hardware layout of your compute nodes."
msgstr "OpenStack支持配置<firstterm>资源超分配比例</firstterm>，即虚拟资源比实际的物理资源，目前支持CPU和内存。默认的CPU超分配比例是16：1，默认的内存超分配比例是1.5：1。在设计阶段就要想要是否决定调整此超分配比例，因为这会直接影响到用户计算节点的硬件布局。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml92(para)
msgid ""
"For example, consider a m1.small instance uses 1 vCPU, 20GB of ephemeral "
"storage and 2,048MB of RAM. When designing a hardware node as a compute "
"resource pool to service instances, take into consideration the number of "
"processor cores available on the node as well as the required disk and "
"memory to service instances running at capacity. For a server with 2 CPUs of"
" 10 cores each, with hyperthreading turned on, the default CPU overcommit "
"ratio of 16:1 would allow for 640 (2 10 2 16) total m1.small instances. By "
"the same reasoning, using the default memory overcommit ratio of 1.5:1 you "
"can determine that the server will need at least 853GB (640 2,048MB / 1.5) "
"of RAM. When sizing nodes for memory, it is also important to consider the "
"additional memory required to service operating system and service needs."
msgstr "举例说明，想像一下，现在有一个m1.small类型的实例，使用的是1 vCPU,20GB的临时存储，2048MB的内存。当设计为此类实例提供计算资源池的硬件节点时，考虑节点需要多少个处理器、多大的磁盘、内存大小才可以满足容量需求。对于一个有2颗10个核的CPU，并开启超线程的服务器，基于默认的CPU超分配比例16：1来计算的话，它总共能运行640(2x10x2x16)个m1.small类型的实例。同样，基于默认的内存超分配比例1.5：1来计算的话，用户则需要至少853GB(640x2048/1.5x1048)内存。当基于内存来丈量服务器节点时，考虑操作系统本身和其服务所需要使用的内存也是非常重要的。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml106(para)
msgid ""
"Processor selection is an extremely important consideration in hardware "
"design, especially when comparing the features and performance "
"characteristics of different processors. Processors can include features "
"specific to virtualized compute hosts including hardware assisted "
"virtualization and technology related to memory paging (also known as EPT "
"shadowing). These types of features can have a significant impact on the "
"performance of your virtual machine running in the cloud."
msgstr "处理器的选择对于硬件设计来讲实在是太过重要了，尤其是对比不同处理器之间的特性和性能。一些近来发布的处理器，拥有针对虚拟化的特性，如硬件增强虚拟化，或者是内存分页技术(著名的EPT影子页表)。这些特性对于在云中运行的虚拟机来说，有着非常关键的影响。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml113(para)
msgid ""
"It is also important to consider the compute requirements of resource nodes "
"within the cloud. Resource nodes refer to non-hypervisor nodes providing the"
" following in the cloud:"
msgstr "考虑到云中计算需求的资源节点也是很重要的，资源节点即非hypervisor节点，在云中提供下列服务："

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml118(para)
msgid "Controller"
msgstr "控制器"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml123(para)
msgid "Object storage"
msgstr "对象存储"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml128(para)
msgid "Block storage"
msgstr "块存储"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml133(para)
msgid "Networking services"
msgstr "联网服务"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml138(para)
msgid ""
"The number of processor cores and threads has a direct correlation to the "
"number of worker threads which can be run on a resource node. As a result, "
"you must make design decisions relating directly to the service, as well as "
"provide a balanced infrastructure for all services."
msgstr "处理器核数和线程数和在资源节点可以运行多少任务线程是有直接关联的。结果就是，用户必须作出设计决定，直接关联的服务，以及为所有服务提供平衡的基础设施。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml142(para)
msgid ""
"Workload profiles are unpredictable in a general purpose cloud. Additional "
"compute resource pools can be added to the cloud later, reducing the stress "
"of unpredictability. In some cases, the demand on certain instance types or "
"flavors may not justify individual hardware design. In either of these "
"cases, initiate the design by allocating hardware designs that are capable "
"of servicing the most common instances requests. If you are looking to add "
"additional hardware designs to the overall architecture, this can be done at"
" a later time."
msgstr "在通用型云中负载是不可预测的，所以能将每个特别的用例都做到胸有成竹是非常困难的。在未来给云增加计算资源池，这种不可预测是不会带来任何问题的。在某些情况下，在确定了实例类型的需求可能不足以需要单独的硬件设计。综合来看，硬件设计方案是先满足大多数通用的实例来启动的，至于以后，寻求增加额外的硬件设计将贯穿整个多样的硬件节点设计和资源池的架构。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml154(title)
msgid "Designing network resources"
msgstr "规划网络资源"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml155(para)
msgid ""
"OpenStack clouds traditionally have multiple network segments, each of which"
" provides access to resources within the cloud to both operators and "
"tenants. The network services themselves also require network communication "
"paths which should be separated from the other networks. When designing "
"network services for a general purpose cloud, we recommend planning for a "
"physical or logical separation of network segments that will be used by "
"operators and tenants. We further suggest the creation of an additional "
"network segment for access to internal services such as the message bus and "
"databse used by the various cloud services. Segregating these services onto "
"separate networks helps to protect sensitive data and protects against "
"unauthorized access to services."
msgstr "传统的OpenStack云是有多个网段的，每个网段都提供在云中访问不仅是操作人员还可以是租户的资源。此外，网络服务本身也需要网络通讯路径以和其他网络隔离。当为通用型云设计网络服务时，强烈建议规划不论是物理的还是逻辑的都要将操作人员和租户隔离为不同的网段。进一步的建议，划分出另外一个网段，专门用于访问内部资源，诸如消息队列、数据库等各种云服务。利用不同网段隔离这些服务对于保护敏感数据以及对付没有认证的访问很有帮助。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml167(para)
msgid ""
"Based on the requirements of instances being serviced in the cloud, the "
"choice of network service will be the next decision that affects your design"
" architecture."
msgstr "基于云中实例提供的服务的需求，网络服务的选择将会是影响用户设计架构的下一个决定。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml170(para)
msgid ""
"The choice between legacy networking (nova-network), as a part of OpenStack "
"Compute, and OpenStack Networking (neutron), has a huge impact on the "
"architecture and design of the cloud network infrastructure."
msgstr "在作为OpenStack计算组件的部分遗留网络(nova-network)和OpenStack网络(neutron)之间作出选择，会极大的影响到云网络基础设施的架构和设计。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml178(para)
msgid ""
"The legacy networking (nova-network) service is primarily a layer-2 "
"networking service that functions in two modes. In legacy networking, the "
"two modes differ in their use of VLANs. When using legacy networking in a "
"flat network mode, all network hardware nodes and devices throughout the "
"cloud are connected to a single layer-2 network segment that provides access"
" to application data."
msgstr "遗留的网络服务(nova-network)主要是一个二层的网络服务，有两种模式的功能实现。在遗留网络中，两种模式的区别是它们使用VLAN的方式不同。当使用遗留网络用于浮动网络模式时，所有的网络硬件节点和设备通过一个二层的网段来连接，提供应用数据的访问。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml185(para)
msgid ""
"When the network devices in the cloud support segmentation using VLANs, "
"legacy networking can operate in the second mode. In this design model, each"
" tenant within the cloud is assigned a network subnet which is mapped to a "
"VLAN on the physical network. It is especially important to remember the "
"maximum number of 4096 VLANs which can be used within a spanning tree "
"domain. These limitations place hard limits on the amount of growth possible"
" within the data center. When designing a general purpose cloud intended to "
"support multiple tenants, we recommend the use of legacy networking with "
"VLANs, and not in flat network mode."
msgstr "当云中的网络设备可通过VLANs支持分段时，遗留网络的第二种模式就可操作了。此模式中，云中的每个组户都被分配一个网络子网，其是映射到物理网络的VLAN中的。尤其重要的一点，要记得在一个生成树域里VLANs的最大数量是4096.在数据中心此限制成为了可能成长的一个硬性限制。当设计一个支持多租户的通用型云时，特别要记住使用和VLANs一起使用遗留网络，而且不使用浮动网络模式。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml199(para)
msgid ""
"Another consideration regarding network is the fact that legacy networking "
"is entirely managed by the cloud operator; tenants do not have control over "
"network resources. If tenants require the ability to manage and create "
"network resources such as network segments and subnets, it will be necessary"
" to install the OpenStack Networking service to provide network access to "
"instances."
msgstr "另外的考虑是关于基于遗留网络的网络的管理是由云运维人员负责的。租户对网络资源没有控制权。如果租户希望有管理和创建网络资源的能力，如创建、管理一个网段或子网，那么就有必要安装OpenStack网络服务，以提供租户访问网络。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml208(term)
msgid "OpenStack Networking (neutron)"
msgstr "OpenStack 网络 (neutron)"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml210(para)
msgid ""
"OpenStack Networking (neutron) is a first class networking service that "
"gives full control over creation of virtual network resources to tenants. "
"This is often accomplished in the form of tunneling protocols which will "
"establish encapsulated communication paths over existing network "
"infrastructure in order to segment tenant traffic. These methods vary "
"depending on the specific implementation, but some of the more common "
"methods include tunneling over GRE, encapsulating with VXLAN, and VLAN tags."
msgstr "OpenStack网络 (neutron) 是第一次实现为租户提供全部的控制权来建立虚拟网络资源的网络服务。为了实现给租户流量分段，通常是基于已有的网络基础设施来封装通信路径，即以隧道协议的方式。这些方法严重依赖与特殊的实现方式，大多数通用的方式包括GRE隧道，VXLAN封\n装以及VLAN标签。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml222(para)
msgid ""
"Initially, it is suggested to design at least three network segments, the "
"first of which will be used for access to the cloud's REST APIs by tenants "
"and operators. This is referred to as a public network. In most cases, the "
"controller nodes and swift proxies within the cloud will be the only devices"
" necessary to connect to this network segment. In some cases, this network "
"might also be serviced by hardware load balancers and other network devices."
msgstr "首先建议的设计是至少划分三个网段，第一个是给租户和运维人员用于访问云的REST 应用程序接口。这也是通常说的公有网络。在多数的用例中，控制节点和swift代理是唯一的需要连接到此网段的设备。也有一些用例中，此网段也许服务于硬件的负载均衡或其他网络设备。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml230(para)
msgid ""
"The next segment is used by cloud administrators to manage hardware "
"resources and is also used by configuration management tools when deploying "
"software and services onto new hardware. In some cases, this network segment"
" might also be used for internal services, including the message bus and "
"database services, to communicate with each other. Due to the highly secure "
"nature of this network segment, it may be desirable to secure this network "
"from unauthorized access. This network will likely need to communicate with "
"every hardware node within the cloud."
msgstr "第二个网段用于云管理员管理硬件资源，也用于在新的硬件上部署软件和服务的配置管理工具。在某些情况下，此网段也许用于内部服务间的通信，包括消息总线和数据库服务。介于此网段拥有高度安全的本质，需要将此网络设置为未经授权不得访问。此网段在云中的所有硬件节点需要互联互通。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml240(para)
msgid ""
"The last network segment is used by applications and consumers to provide "
"access to the physical network and also for users accessing applications "
"running within the cloud. This network is generally segregated from the one "
"used to access the cloud APIs and is not capable of communicating directly "
"with the hardware resources in the cloud. Compute resource nodes will need "
"to communicate on this network segment, as will any network gateway services"
" which allow application data to access the physical network outside of the "
"cloud."
msgstr "第三个网段用于为应用程序和消费者访问物理网络，也为最终用户访问云中运行的应用程序提供网络。此网络是隔离能够访问云API的网络，并不能够直接和云中的硬件资源通信。计算资源节点需要基于此网段通信，以及任何的网络网关服务将允许应用程序的数据可通过物理网络到云的外部。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml253(title)
msgid "Designing storage resources"
msgstr "规划存储资源"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml254(para)
msgid ""
"OpenStack has two independent storage services to consider, each with its "
"own specific design requirements and goals. In addition to services which "
"provide storage as their primary function, there are additional design "
"considerations with regard to compute and controller nodes which will affect"
" the overall cloud architecture."
msgstr "OpenStack有两个独立的存储服务需要考虑，且每个都拥有自己特别的设计需求和目标。除了提供存储服务是他们的主要功能之外，在整个云架构中，需要额外考虑的是它们对计算/控制节点的影响。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml263(title)
msgid "Designing OpenStack Object Storage"
msgstr "规划OpenStack对象存储"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml264(para)
msgid ""
"When designing hardware resources for OpenStack Object Storage, the primary "
"goal is to maximize the amount of storage in each resource node while also "
"ensuring that the cost per terabyte is kept to a minimum. This often "
"involves utilizing servers which can hold a large number of spinning disks. "
"Whether choosing to use 2U server form factors with directly attached "
"storage or an external chassis that holds a larger number of drives, the "
"main goal is to maximize the storage available in each node."
msgstr "当为OpenStack对象存储设计硬件资源时，首要的目标就尽可能的为每个资源节点加上最多的存储，当然也要在每TB的花费上保持最低。这往往涉及到了利用服务器的容纳大量的磁盘。无论是选择使用2U服务器直接挂载磁盘，还是选择外挂大量的磁盘驱动，主要的目标还是为每个节点得到最多的存储。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml273(para)
msgid ""
"We do not recommended investing in enterprise class drives for an OpenStack "
"Object Storage cluster. The consistency and partition tolerance "
"characteristics of OpenStack Object Storage will ensure that data stays up "
"to date and survives hardware faults without the use of any specialized data"
" replication devices."
msgstr "我们并不建议为OpenStack对象存储投资企业级的设备。OpenStack对象存储的一致性和分区容错保证的数据的更新，即使是在硬件损坏的情况下仍能保证数据可用，而这都无须特别的数据复制设备。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml279(para)
msgid ""
"One of the benefits of OpenStack Object Storage is the ability to mix and "
"match drives by making use of weighting within the swift ring. When "
"designing your swift storage cluster, we recommend making use of the most "
"cost effective storage solution available at the time. Many server chassis "
"on the market can hold 60 or more drives in 4U of rack space, therefore we "
"recommend maximizing the amount of storage per rack unit at the best cost "
"per terabyte. Furthermore, we do not recommend the use of RAID controllers "
"in an object storage node."
msgstr "OpenStack对象存储一个亮点就是有混搭设备的能力，基于swift环的加权机制。当用户设计一个swift存储集群时，建议将大部分>的成本花在存储上，保证永久可用。市场上多数的服务器使用4U，可容纳60块甚至更多的磁盘驱动器，因此建议在1U空间内置放最多的驱动器，就是最好的每TB花费。进一步的建议，在对象存储节点上没必要使用RAID控制器。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml289(para)
msgid ""
"To achieve durability and availability of data stored as objects it is "
"important to design object storage resource pools to ensure they can provide"
" the suggested availability. Considering rack-level and zone-level designs "
"to accommodate the number of replicas configured to be stored in the Object "
"Storage service (the defult number of replicas is three) is important when "
"designing beyond the hardware node level. Each replica of data should exist "
"in its own availability zone with its own power, cooling, and network "
"resources available to service that specific zone."
msgstr "为了实现数据存储和对象一样的持久和可用，设计对象存储资源池显得非常的重要，在硬件节点这层之外的设计，考虑机柜层或区域层是非常重要的，在对象存储服务中配置数据复制多少份保存(默认情况是3份)。每份复制的数据最好独立的可用区域中，有独立的电源、冷却设备以及网络资源。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml298(para)
msgid ""
"Object storage nodes should be designed so that the number of requests does "
"not hinder the performance of the cluster. The object storage service is a "
"chatty protocol, therefore making use of multiple processors that have "
"higher core counts will ensure the IO requests do not inundate the server."
msgstr "对象存储节点应该被设计为在集群中不至于区区几个请求就拖性能后腿的样子。对象存储服务是一种频繁交互的协议，因此确定使用多个处理器，而且要多核的，这样才可确保不至于因为IO请求将服务器搞垮。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml306(title)
msgid "Designing OpenStack Block Storage"
msgstr "规划OpenStack块存储"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml307(para)
msgid ""
"When designing OpenStack Block Storage resource nodes, it is helpful to "
"understand the workloads and requirements that will drive the use of block "
"storage in the cloud. We recommend designing block storage pools so that "
"tenants can choose appropriate storage solutions for their applications. By "
"creating multiple storage pools of different types, in conjunction with "
"configuring an advanced storage scheduler for the block storage service, it "
"is possible to provide tenants with a large catalog of storage services with"
" a variety of performance levels and redundancy options."
msgstr "当设计OpenStack块存储资源节点时，有助于理解负载和需求，即在云中使用块存储。由于通用型云的使用模式经常是未知的。在>此建议设计块存储池做到租户可以根据他们的应用来选择不同的存储。创建多个不同类型的存储池，得与块存储服务配置高级的存储调度相结合，才可能为租户提供基于多种不同性能级别和冗余属性的大型目录存储服务。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml316(para)
msgid ""
"Block storage also takes advantage of a number of enterprise storage "
"solutions. These are addressed via a plug-in driver developed by the "
"hardware vendor. A large number of enterprise storage plug-in drivers ship "
"out-of-the-box with OpenStack Block Storage (and many more available via "
"third party channels). General purpose clouds are more likely to use "
"directly attached storage in the majority of block storage nodes, deeming it"
" necessary to provide additional levels of service to tenants which can only"
" be provided by enterprise class storage solutions."
msgstr "块存储还可以利用一些企业级存储解决方案的优势。由硬件厂商开发的插件驱动得以实现。基于OpenStack块存储有大量的企业存储写了它们带外的插件驱动(也有很大一部分是通过第三方渠道来实现的)。作为通用型云使用的是直接挂载存储到块存储节点，如果未来需要为租户提供额外级别的块存储，只须增加企业级的存储解决方案即可。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml325(para)
msgid ""
"Redundancy and availability requirements impact the decision to use a RAID "
"controller card in block storage nodes. The input-output per second (IOPS) "
"demand of your application will influence whether or not you should use a "
"RAID controller, and which level of RAID is required. Making use of higher "
"performing RAID volumes is suggested when considering performance. However, "
"where redundancy of block storage volumes is more important we recommend "
"making use of a redundant RAID configuration such as RAID 5 or RAID 6. Some "
"specialized features, such as automated replication of block storage "
"volumes, may require the use of third-party plug-ins and enterprise block "
"storage solutions in order to provide the high demand on storage. "
"Furthermore, where extreme performance is a requirement it may also be "
"necessary to make use of high speed SSD disk drives' high performing flash "
"storage solutions."
msgstr "决定在块存储节点中使用RAID控制卡主要取决于应用程序对冗余和可用性的需求。应用如果对每秒输入输出(IOPS)有很高的要求，不仅得使用RAID控制器，还得配置RAID的级别值，当性能是重要因素时，建议使用高级别的RAID值，相对比的情况是，如果冗余的因素考虑更多谢，那么就使用冗余RAID配置，比如RAID5或RAID6。一些特殊的特性，例如自动复制块存储卷，需要使用第三方插件和企业级的块存储解决方案，以满足此高级需求。进一步讲，如果有对性能有极致的要求，可以考虑使用告诉的SSD磁盘，即高性能的flash存储解决方案。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml344(para)
msgid ""
"The software selection process plays a large role in the architecture of a "
"general purpose cloud. The following have a large impact on the design of "
"the cloud:"
msgstr "软件筛选的过程在通用型云架构中扮演了重要角色。下列的选择都会在设计云时产生重大的影响。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml349(para)
msgid "Choice of operating system"
msgstr "选择操作系统"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml354(para)
msgid "Selection of OpenStack software components"
msgstr "选择OpenStack软件组件"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml359(para)
msgid "Choice of hypervisor"
msgstr "选择Hypervisor"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml364(para)
msgid "Selection of supplemental software"
msgstr "选择支撑软件"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml369(para)
msgid ""
"Operating system (OS) selection plays a large role in the design and "
"architecture of a cloud. There are a number of OSes which have native "
"support for OpenStack including:"
msgstr "操作系统(OS)的选择在云的设计和架构中扮演着重要的角色。有许多操作系统是原生就支持OpenStack的，它们是："

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml374(para)
msgid "Ubuntu"
msgstr "Ubuntu"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml379(para)
msgid "Red Hat Enterprise Linux (RHEL)"
msgstr "红帽企业Linux(RHEL)"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml384(para)
msgid "CentOS"
msgstr "CentOS"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml389(para)
msgid "SUSE Linux Enterprise Server (SLES)"
msgstr "SUSE Linux Enterprise Server (SLES)"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml395(para)
msgid ""
"Native support is not a constraint on the choice of OS; users are free to "
"choose just about any Linux distribution (or even Microsoft Windows) and "
"install OpenStack directly from source (or compile their own packages). "
"However, many organizations will prefer to install OpenStack from "
"distribution-supplied packages or repositories (although using the "
"distribution vendor's OpenStack packages might be a requirement for "
"support)."
msgstr "原生并非是限制到某些操作系统，用户仍然可以自己选择Linux的任何发行版(甚至是微软的Windows),然后从源码安装OpenStack(或者编译为某个发行版的包)。尽管如此，事实上多数组织还是会从发行版支持的包或仓库去安装OpenStack(使用分发商的OpenStack软件包也许需要他们的支持)。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml404(para)
msgid ""
"OS selection also directly influences hypervisor selection. A cloud "
"architect who selects Ubuntu, RHEL, or SLES has some flexibility in "
"hypervisor; KVM, Xen, and LXC are supported virtualization methods available"
" under OpenStack Compute (nova) on these Linux distributions. However, a "
"cloud architect who selects Hyper-V is limited to Windows Servers. "
"Similarly, a cloud architect who selects XenServer is limited to the CentOS-"
"based dom0 operating system provided with XenServer."
msgstr "操作系统的选择会直接影响到hypervisor的选择。一个云架构会选择Ubuntu,RHEL,或SLES等，它们都拥有灵活的hypervisor可供选择，同时也被OpenStack 计算(nova)所支持，如KVM,Xen,LXC等虚拟化。一个云架构若选择了Hyper-V,那么只能使用Windows服务器版本。同样的，一个云架构若选择了XenServer,也限制到基于CenOS dom0操作系统。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml412(para)
msgid "The primary factors that play into OS-hypervisor selection include:"
msgstr "影响操作系统-hypervisor选择的主要因素包括："

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml418(para)
msgid ""
"The selection of OS-hypervisor combination first and foremost needs to "
"support the user requirements."
msgstr "选择操作系统-虚拟机管理程序组合，首先且最重要的是支持用户的需求。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml424(term)
msgid "Support"
msgstr "支持"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml426(para)
msgid ""
"The selected OS-hypervisor combination needs to be supported by OpenStack."
msgstr "选择操作系统-虚拟机管理程序组合需要OpenStack支持。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml433(para)
msgid ""
"The OS-hypervisor needs to be interoperable with other features and services"
" in the OpenStack design in order to meet the user requirements."
msgstr "在OpenStack的设计中，为满足用户需求，需要操作系统的hypervisor在彼此的特性和服务中要有互操作性。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml443(title)
#: ./doc/arch-design/specialized/section_openstack_on_openstack_specialized.xml37(title)
msgid "Hypervisor"
msgstr "虚拟机管理程序"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml444(para)
msgid ""
"OpenStack supports a wide variety of hypervisors, one or more of which can "
"be used in a single cloud. These hypervisors include:"
msgstr "OpenStack支持多种Hypervisor,在单一的云中可以有一种或多种。这些Hypervisor包括："

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml449(para)
msgid "KVM (and QEMU)"
msgstr "KVM (and QEMU)"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml452(para)
msgid "XCP/XenServer"
msgstr "XCP/XenServer"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml455(para)
msgid "vSphere (vCenter and ESXi)"
msgstr "vSphere (vCenter and ESXi)"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml458(para)
msgid "Hyper-V"
msgstr "Hyper-V"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml461(para)
msgid "LXC"
msgstr "LXC"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml464(para)
msgid "Docker"
msgstr "Docker"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml467(para)
msgid "Bare-metal"
msgstr "裸金属"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml470(para)
msgid ""
"A complete list of supported hypervisors and their capabilities can be found"
" at <link "
"href=\"https://wiki.openstack.org/wiki/HypervisorSupportMatrix\">OpenStack "
"Hypervisor Support Matrix</link>."
msgstr "支持hypervisor和它们的兼容性的完整列表可以从<link href=\\\"https://wiki.openstack.org/wiki/HypervisorSupportMatrix\\\">https://wiki.openstack.org/wiki/HypervisorSupportMatrix</link>页面找到。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml474(para)
msgid ""
"We recommend general purpose clouds use hypervisors that support the most "
"general purpose use cases, such as KVM and Xen. More specific hypervisors "
"should be chosen to account for specific functionality or a supported "
"feature requirement. In some cases, there may also be a mandated requirement"
" to run software on a certified hypervisor including solutions from VMware, "
"Microsoft, and Citrix."
msgstr "通用型云须确保使用的hypervisor可以支持多数通用目的的用例，例如KVM或Xen。更多特定的hypervisor需要根据特定的功能和支持特性需求来做出选择。在一些情况下，也许是授权所需，需要运行的软件必须是在认证的hpervisor中，比如来自VMware，微软和思杰的产品。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml481(para)
msgid ""
"The features offered through the OpenStack cloud platform determine the best"
" choice of a hypervisor. As an example, for a general purpose cloud that "
"predominantly supports a Microsoft-based migration, or is managed by staff "
"that has a particular skill for managing certain hypervisors and operating "
"systems, Hyper-V would be the best available choice. While the decision to "
"use Hyper-V does not limit the ability to run alternative operating systems,"
" be mindful of those that are deemed supported. Each different hypervisor "
"also has their own hardware requirements which may affect the decisions "
"around designing a general purpose cloud. For example, to utilize the live "
"migration feature of VMware, vMotion, this requires an installation of "
"vCenter/vSphere and the use of the ESXi hypervisor, which increases the "
"infrastructure requirements."
msgstr "通过OpenStack云平台提供的特性决定了选择最佳的hyperviosr。举个例子，要使通用型云主要支持基于微软的迁移，或工作人员>所管理的是需要特定技能的去管理hypervisor或操作系统，Hyper-V也许是最好的选择。即使是决定了使用Hyper-V，这也并不意味着不可以去管理相关的操作系统，要记得OpenStack是支持多种hypervisor的。在设计通用型用时需要考虑到不同的hypervisor有他们特定的硬件需>求。例如欲整合VMware的特性：活迁移，那么就需要安装安装vMotion,给ESXi hypervisor所使用的VCenter/vSphere，这即是增加的基础设施需求。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml496(para)
msgid ""
"In a mixed hypervisor environment, specific aggregates of compute resources,"
" each with defined capabilities, enable workloads to utilize software and "
"hardware specific to their particular requirements. This functionality can "
"be exposed explicitly to the end user, or accessed through defined metadata "
"within a particular flavor of an instance."
msgstr "在混合的hypervisor环境中，等于聚合了计算资源，但是各个hypervisor定义了各自的能力，以及它们分别对软、硬件特殊的需求等。这些功能需要明确暴露给最终用户，或者通过为实例类型定义的元数据来访问。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml506(para)
msgid ""
"A general purpose OpenStack cloud design should incorporate the core "
"OpenStack services to provide a wide range of services to end-users. The "
"OpenStack core services recommended in a general purpose cloud are:"
msgstr "通用型OpenStack云的设计，使核心的OpenStack服务的互相紧密配合为最终用户提供广泛的服务。在通用型云中建议的OpenStack核心服务有："

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml512(para)
msgid "OpenStack <glossterm>Compute</glossterm> (<glossterm>nova</glossterm>)"
msgstr "OpenStack <glossterm>计算</glossterm> (<glossterm>nova</glossterm>)"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml516(para)
msgid ""
"OpenStack <glossterm>Networking</glossterm> (<glossterm>neutron</glossterm>)"
msgstr "OpenStack <glossterm>网络</glossterm> (<glossterm>neutron</glossterm>)"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml520(para)
msgid ""
"OpenStack <glossterm>Image Service</glossterm> "
"(<glossterm>glance</glossterm>)"
msgstr "OpenStack <glossterm>镜像服务</glossterm> (<glossterm>glance</glossterm>)"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml524(para)
msgid ""
"OpenStack <glossterm>Identity</glossterm> (<glossterm>keystone</glossterm>)"
msgstr "OpenStack <glossterm>认证</glossterm> (<glossterm>keystone</glossterm>)"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml528(para)
msgid ""
"OpenStack <glossterm>dashboard</glossterm> (<glossterm>horizon</glossterm>)"
msgstr "OpenStack <glossterm>仪表盘</glossterm> (<glossterm>horizon</glossterm>)"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml532(para)
msgid ""
"<glossterm>Telemetry</glossterm> module (<glossterm>ceilometer</glossterm>)"
msgstr "<glossterm>Telemetry</glossterm> module (<glossterm>ceilometer</glossterm>)"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml536(para)
msgid ""
"A general purpose cloud may also include OpenStack <glossterm>Object "
"Storage</glossterm> (<glossterm>swift</glossterm>). OpenStack "
"<glossterm>Block Storage</glossterm> (<glossterm>cinder</glossterm>). These "
"may be selected to provide storage to applications and instances."
msgstr "通用型云还包括OpenStack <glossterm>对象存储</glossterm> (<glossterm>swift</glossterm>).。选择OpenStack <glossterm>块存储</glossterm> (<glossterm>cinder</glossterm>) 是为应用和实例提供持久性的存储，"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml543(para)
msgid "However, depending on the use case, these could be optional."
msgstr "尽管如此，依赖于用例，这些是可选。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml550(para)
msgid ""
"A general purpose OpenStack deployment consists of more than just OpenStack-"
"specific components. A typical deployment involves services that provide "
"supporting functionality, including databases and message queues, and may "
"also involve software to provide high availability of the OpenStack "
"environment. Design decisions around the underlying message queue might "
"affect the required number of controller services, as well as the technology"
" to provide highly resilient database functionality, such as MariaDB with "
"Galera. In such a scenario, replication of services relies on quorum. "
"Therefore, the underlying database nodes, for example, should consist of at "
"least 3 nodes to account for the recovery of a failed Galera node. When "
"increasing the number of nodes to support a feature of the software, "
"consideration of rack space and switch port density becomes important."
msgstr "通用型OpenStack的软件部署不仅仅是OpenStack特定的组件。一个典型的部署，如提供支撑功能的服务，须包含数据库，消息队列，以及为OpenStack环境提供高可用的软件。设计的决定围绕着底层的消息队列会影响到控制器服务的多寡，正如技术上为数据库提供高弹性功能，例如在MariaDB之上使用Galera。在这些场景中，服务的复制依赖于预订的机器数，因此，考虑数据库的\n节点，例如，至少需要3个节点才可满足Galera节点的失效恢复。随着节点数量的增加，以支持软件的特性，考虑机柜的空间和交换机的端口显得非常的重要。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml565(para)
msgid ""
"Where many general purpose deployments use hardware load balancers to "
"provide highly available API access and SSL termination, software solutions,"
" for example HAProxy, can also be considered. It is vital to ensure that "
"such software implementations are also made highly available. High "
"availability can be achieved by using software such as Keepalived or "
"Pacemaker with Corosync. Pacemaker and Corosync can provide active-active or"
" active-passive highly available configuration depending on the specific "
"service in the OpenStack environment. Using this software can affect the "
"design as it assumes at least a 2-node controller infrastructure where one "
"of those nodes may be running certain services in standby mode."
msgstr "多数的通用型部署使用硬件的负载均衡来提供API访问高可用和SSL终端，但是软件的解决方案也要考虑到，比如HAProxy。至关重要的是软件实现的高可用也很靠谱。这些高可用的软件Keepalived或基于Corosync的Pacemaker。Pacemaker和Corosync配合起来可以提供双活或者单活的高可用配置，至于是否双活取决于OpenStack环境中特别的服务。使用Pacemaker会影响到设计，假定有至少2台控制器基础设施，其中一个节点可在待机模式下运行的某些服务。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml578(para)
msgid ""
"Memcached is a distributed memory object caching system, and Redis is a key-"
"value store. Both are deployed on general purpose clouds to assist in "
"alleviating load to the Identity service. The memcached service caches "
"tokens, and due to its distributed nature it can help alleviate some "
"bottlenecks to the underlying authentication system. Using memcached or "
"Redis does not affect the overall design of your architecture as they tend "
"to be deployed onto the infrastructure nodes providing the OpenStack "
"services."
msgstr "Memcached是一个分布式的内存对象缓存系统，Redia是一个key-value存储系统。在通用型云中使用这两个系统来减轻认证服务的负载。memcached服务缓存令牌，基于它天生的分布式特性可以缓减授权系统的瓶颈。使用memcached或Redis不会影响到用户的架构设计，虽然它们会部署到基础设施节点中为OpenStack提供服务。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml591(para)
msgid ""
"Performance of an OpenStack deployment is dependent on a number of factors "
"related to the infrastructure and controller services. The user requirements"
" can be split into general network performance, performance of compute "
"resources, and performance of storage systems."
msgstr "OpenStack的性能取决于和基础设施有关的因素的多少以及控制器服务的多少。按照用户需求性能可归类为通用网络性能，计算资源性能，以及存储系统性能。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml599(title)
msgid "Controller infrastructure"
msgstr "控制器基础设施"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml600(para)
msgid ""
"The Controller infrastructure nodes provide management services to the end-"
"user as well as providing services internally for the operating of the "
"cloud. The Controllers run message queuing services that carry system "
"messages between each service. Performance issues related to the message bus"
" would lead to delays in sending that message to where it needs to go. The "
"result of this condition would be delays in operation functions such as "
"spinning up and deleting instances, provisioning new storage volumes and "
"managing network resources. Such delays could adversely affect an "
"application’s ability to react to certain conditions, especially when using "
"auto-scaling features. It is important to properly design the hardware used "
"to run the controller infrastructure as outlined above in the Hardware "
"Selection section."
msgstr "控制器基础设施节点为最终用户提供的管理服务，以及在云内部为运维提供服务。控制器较典型的现象，就是运行消息队列服务，在每个服务之间携带传递系统消息。性能问题常和消息总线有关，它会延迟发送的消息到应该去的地方。这种情况的结果就是延迟了实际操作的功能，如启动或删除实例、分配一个新的存储卷、管理网络资源。类似的延迟会严重影响到应用的反应能力，尤其是使用了自动扩展这样的特性。所以运行控制器基础设施的硬件设计是头等重要的，具体参考上述硬件选择一节。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml615(para)
msgid ""
"Performance of the controller services is not limited to processing power, "
"but restrictions may emerge in serving concurrent users. Ensure that the "
"APIs and Horizon services are load tested to ensure that you are able to "
"serve your customers. Particular attention should be made to the OpenStack "
"Identity Service (Keystone), which provides the authentication and "
"authorization for all services, both internally to OpenStack itself and to "
"end-users. This service can lead to a degradation of overall performance if "
"this is not sized appropriately."
msgstr "控制器服务的性能不仅仅限于处理器的强大能力，也受限于所服务的并发用户。确认应用程序接口和Horizon服务的负载测试可以>承受来自用户客户的压力。要特别关注OpenStack认证服务(Keystone)的负载，Keystone为所有服务提供认证和授权，无论是最终用户还是OpenStack的内部服务。如果此控制器服务没有正确的被设计，会导致整个环境的性能低下。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml628(title)
msgid "Network performance"
msgstr "网络性能"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml629(para)
msgid ""
"In a general purpose OpenStack cloud, the requirements of the network help "
"determine performance capabilities. For example, small deployments may "
"employ 1 Gigabit Ethernet (GbE) networking, whereas larger installations "
"serving multiple departments or many users would be better architected with "
"10GbE networking. The performance of the running instances will be limited "
"by these speeds. It is possible to design OpenStack environments that run a "
"mix of networking capabilities. By utilizing the different interface speeds,"
" the users of the OpenStack environment can choose networks that are fit for"
" their purpose."
msgstr "通用型OpenStack云，网络的需求其实帮助决定了其本身的性能能力。例如，小的部署环境使用千兆以太网(GbE)，大型的部署环境或者许多用户就要求使用10 GbE。运行着的实例性能收到了它们的速度限制。设计OpenStack环境，让它拥有可以运行混合网络的能力是可能的。通过利用不同速度的网卡，OpenStack环境的用户可以选择不同的网络去满足不同的目的。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml640(para)
msgid ""
"For example, web application instances may run on a public network presented"
" through OpenStack Networking that has 1 GbE capability, whereas the back-"
"end database uses an OpenStack Networking network that has 10GbE capability "
"to replicate its data or, in some cases, the design may incorporate link "
"aggregation for greater throughput."
msgstr "例如，web应用的实例在公网上运行的是OpenStack网络中的1 GbE，但是其后端的数据库使用的是OpenStack网络的10 GbE以复制数据，在某些情况下，为了更大的吞吐量使用聚合链接这\n样的设计。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml646(para)
msgid ""
"Network performance can be boosted considerably by implementing hardware "
"load balancers to provide front-end service to the cloud APIs. The hardware "
"load balancers also perform SSL termination if that is a requirement of your"
" environment. When implementing SSL offloading, it is important to "
"understand the SSL offloading capabilities of the devices selected."
msgstr "网络的性能可以考虑有硬件的负载均衡来帮助实现，为云抛出的API提供前端的服务。硬件负载均衡通常也提供SSL终端，如果用户的环境有需求的话。当实现SSL减负时，理解SSL减负的能力来选择硬件，这点很重要。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml656(title)
msgid "Compute host"
msgstr "计算主机"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml657(para)
msgid ""
"The choice of hardware specifications used in compute nodes including CPU, "
"memory and disk type directly affects the performance of the instances. "
"Other factors which can directly affect performance include tunable "
"parameters within the OpenStack services, for example the overcommit ratio "
"applied to resources. The defaults in OpenStack Compute set a 16:1 over-"
"commit of the CPU and 1.5 over-commit of the memory. Running at such high "
"ratios leads to an increase in \"noisy-neighbor\" activity. Care must be "
"taken when sizing your Compute environment to avoid this scenario. For "
"running general purpose OpenStack environments it is possible to keep to the"
" defaults, but make sure to monitor your environment as usage increases."
msgstr "为计算节点选择硬件规格包括CPU,内存和磁盘类型，会直接影响到实例的性能。另外直接影响性能的情形是为OpenStack服务优化参数，例如资源的超分配比例。默认情况下OpenStack计算设置16:1为CPU的超分配比例，内存为1.5:1。运行跟高比例的超分配即会导致有些服务无法启动。调整您的计算环境时，为了避免这种情况下必须小心。运行一个通用型的OpenStack环境保持默认配置就可以，但是也要检测用户的环境中使用量的增加。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml673(title)
msgid "Storage performance"
msgstr "存储性能"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml674(para)
msgid ""
"When considering performance of OpenStack Block Storage, hardware and "
"architecture choice is important. Block Storage can use enterprise back-end "
"systems such as NetApp or EMC, scale out storage such as GlusterFS and Ceph,"
" or simply use the capabilities of directly attached storage in the nodes "
"themselves. Block Storage may be deployed so that traffic traverses the host"
" network, which could affect, and be adversely affected by, the front-side "
"API traffic performance. As such, consider using a dedicated data storage "
"network with dedicated interfaces on the Controller and Compute hosts."
msgstr "当考虑OpenStack块设备的性能时，硬件和架构的选择就显得非常重要。块存储可以使用企业级后端系统如NetApp或EMC的产品，也可以使用横向扩展存储如GlusterFS和Ceph，更可以是简单的在节点上直接附加的存储。块存储或许是云所关注的贯穿主机网络的部署，又或许是前端应用程序接口所关注的流量性能。无论怎么，都得在控制器和计算主机上考虑使用专用的数据存储网络和专用的接口。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml685(para)
msgid ""
"When considering performance of OpenStack Object Storage, a number of design"
" choices will affect performance. A user’s access to the Object Storage is "
"through the proxy services, which sit behind hardware load balancers. By the"
" very nature of a highly resilient storage system, replication of the data "
"would affect performance of the overall system. In this case, 10 GbE (or "
"better) networking is recommended throughout the storage network "
"architecture."
msgstr "当考虑OpenStack对象存储的性能时，有几样设计选择会影响到性能。用户访问对象存储是通过代理服务，它通常是在硬件负载均衡之后。由于高弹性是此存储系统的天生特性，所以复制数据将会影响到整个系统的性能。在此例中，存储网络使用10 GbE(或更高)网络是我们所建议的。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml697(para)
msgid ""
"In OpenStack, the infrastructure is integral to providing services and "
"should always be available, especially when operating with SLAs. Ensuring "
"network availability is accomplished by designing the network architecture "
"so that no single point of failure exists. A consideration of the number of "
"switches, routes and redundancies of power should be factored into core "
"infrastructure, as well as the associated bonding of networks to provide "
"diverse routes to your highly available switch infrastructure."
msgstr "在OpenStack架构下，基础设施是作为一个整体提供服务的，必须保证可用性，尤其是建立了服务水平协议。确保网络的可用性，在完成设计网络架构后不可以有单点故障存在。考虑使用多个交换机、路由器以及冗余的电源是必须考虑的，这是核心基础设施，使用bonding网卡、提供多个路由、交换机高可用等。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml706(para)
msgid ""
"The OpenStack services themselves should be deployed across multiple servers"
" that do not represent a single point of failure. Ensuring API availability "
"can be achieved by placing these services behind highly available load "
"balancers that have multiple OpenStack servers as members."
msgstr "OpenStack自身的那些服务需要在跨多个服务器上部署，不能出现单点故障。确保应用程序接口的可用性，作为多个OpenStack服务的成员放在高可用负载均衡的后面。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml711(para)
msgid ""
"OpenStack lends itself to deployment in a highly available manner where it "
"is expected that at least 2 servers be utilized. These can run all the "
"services involved from the message queuing service, for example RabbitMQ or "
"QPID, and an appropriately deployed database service such as MySQL or "
"MariaDB. As services in the cloud are scaled out, back-end services will "
"need to scale too. Monitoring and reporting on server utilization and "
"response times, as well as load testing your systems, will help determine "
"scale out decisions."
msgstr "OpenStack其本身的部署是期望高可用的，实现此需要至少两台服务器来完成。他们可以运行所有的服务，由消息队列服务连接起来，消息队列服务如RabbitMQ或QPID，还需要部署一个合适的数据库服务如MySQL或MariaDB。在云中所有的服务都是可横向扩展的，其实后端的服务同样需要扩展。检测和报告在服务器上的使用和采集，以及负载测试，都可以帮助作出横向扩展的决定。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml720(para)
msgid ""
"Care must be taken when deciding network functionality. Currently, OpenStack"
" supports both the legacy networking (nova-network) system and the newer, "
"extensible OpenStack Networking (neutron). Both have their pros and cons "
"when it comes to providing highly available access. Legacy networking, which"
" provides networking access maintained in the OpenStack Compute code, "
"provides a feature that removes a single point of failure when it comes to "
"routing, and this feature is currently missing in OpenStack Networking. The "
"effect of legacy networking’s multi-host functionality restricts failure "
"domains to the host running that instance."
msgstr "当决定网络功能的时候务必小心谨慎。当前的OpenStack不仅支持遗留网络(nova-network)系统还支持新的，可扩展的OpenStack网络(neutron)。二者在提供高可用访问时有各自的优缺点。遗留网络提供的网络服务的代码是由OpenStack计算来维护的，它可提供移除来自路由的单点故障特性，但是此特性在当前的Openstack网络中不被支持。遗留网络的多主机功能受限于仅在运行实例的主机，一旦失效，此实例将无法被访问。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml731(para)
msgid ""
"When using OpenStack Networking, the OpenStack controller servers or "
"separate Networking hosts handle routing. For a deployment that requires "
"features available in only Networking, it is possible to remove this "
"restriction by using third party software that helps maintain highly "
"available L3 routes. Doing so allows for common APIs to control network "
"hardware, or to provide complex multi-tier web applications in a secure "
"manner. It is also possible to completely remove routing from Networking, "
"and instead rely on hardware routing capabilities. In this case, the "
"switching infrastructure must support L3 routing."
msgstr "另一方面，当使用OpenStack网络时，OpenStack控制器服务器或者是分离的网络主机掌控路由。对于部署来说，需要在网络中满足此特性，有可能使用第三方软件来协助维护高可用的3层路由。这么做允许通常的应用程序接口来控制网络硬件，或者基于安全的行为提供复杂多层的web应用。从OpenStack网络中完全移除路由是可以的，取而代之的是硬件的路由能力。在此情况下，交换基础设施必须支持3层路由。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml743(para)
msgid ""
"OpenStack Networking and legacy networking both have their advantages and "
"disadvantages. They are both valid and supported options that fit different "
"network deployment models described in the <citetitle><link "
"href=\"http://docs.openstack.org/openstack-"
"ops/content/network_design.html#network_deployment_options\">OpenStack "
"Operations Guide</link></citetitle>."
msgstr "OpenStack网络和遗留网络各有各的优点和缺点。它们有效的和支持的属性适合不同的网络部署模式，详细描述见<citetitle><link href=\\\"http://docs.openstack.org/openstack-ops/content/network_design.html#network_deployment_options\\\">OpenStack 运维指南</link></citetitle>。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml750(para)
msgid ""
"Ensure your deployment has adequate back-up capabilities. As an example, in "
"a deployment that has two infrastructure controller nodes, the design should"
" include controller availability. In the event of the loss of a single "
"controller, cloud services will run from a single controller in the event of"
" failure. Where the design has higher availability requirements, it is "
"important to meet those requirements by designing the proper redundancy and "
"availability of controller nodes."
msgstr "确保用户的部署有足够的后备能力。举例来说，部署是拥有两台基础设施的控制器节点，此设计须包括控制器可用。一旦丢失单个控制器这种事件发生，云服务将会停止对外服务。当有高可用需求的设计时，解决此需求的办法就是准备冗余的、高可用的控制器节点。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml759(para)
msgid ""
"Application design must also be factored into the capabilities of the "
"underlying cloud infrastructure. If the compute hosts do not provide a "
"seamless live migration capability, then it must be expected that when a "
"compute host fails, that instance and any data local to that instance will "
"be deleted. Conversely, when providing an expectation to users that "
"instances have a high-level of uptime guarantees, the infrastructure must be"
" deployed in a way that eliminates any single point of failure when a "
"compute host disappears. This may include utilizing shared file systems on "
"enterprise storage or OpenStack Block storage to provide a level of "
"guarantee to match service features."
msgstr "应用程序的设计也必须记入到云基础设施的能力之中。如果计算主机不能提供无缝的活迁移功能，就必须预料到一旦计算节点失效，运行在其上的实例，以及其中的数据，都不可访问。反过来讲，提供给用户的是具有高级别的运行时间保证的实例，基础设施必须被部署为没有任何的单点故障，即使是某计算主机消失，也得马上有其他主机顶上。这需要构建在企业级存储的共享文件系统之上，或者是OpenStack块存储，以满足保证级别和对应的服务匹配。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml771(para)
msgid ""
"For more information on high availability in OpenStack, see the <link "
"href=\"http://docs.openstack.org/high-availability-"
"guide\"><citetitle>OpenStack High Availability Guide</citetitle></link>."
msgstr "关于OpenStack高可用更多信息，请阅读 <link href=\"http://docs.openstack.org/high-availability-guide\"><citetitle>OpenStack 高可用指南</citetitle></link>."

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml779(para)
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml272(para)
msgid ""
"A security domain comprises users, applications, servers or networks that "
"share common trust requirements and expectations within a system. Typically "
"they have the same authentication and authorization requirements and users."
msgstr "一个安全域在一个系统下包括让用户、应用、服务器和网络共享通用的信任需求和预期。典型情况是他们有相同的认证和授权的需求和用户。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml783(para)
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml277(para)
msgid "These security domains are:"
msgstr "这些安全域有："

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml786(para)
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml280(para)
#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml120(para)
msgid "Public"
msgstr "公有"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml789(para)
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml283(para)
#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml123(para)
msgid "Guest"
msgstr "客户机"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml795(para)
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml289(para)
#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml166(title)
#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml129(para)
msgid "Data"
msgstr "数据"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml798(para)
msgid ""
"These security domains can be mapped to an OpenStack deployment "
"individually, or combined. For example, some deployment topologies combine "
"both guest and data domains onto one physical network, whereas in other "
"cases these networks are physically separated. In each case, the cloud "
"operator should be aware of the appropriate security concerns. Security "
"domains should be mapped out against your specific OpenStack deployment "
"topology. The domains and their trust requirements depend upon whether the "
"cloud instance is public, private, or hybrid."
msgstr "这些安全域可以映射给分开的OpenStack部署，也可以是合并的。例如，一些部署的拓扑合并了客户机和数据域在同一物理网络，其他一些情况的网络是物理分离的。无论那种情况，云运维人员必须意识到适当的安全问题。安全域须制定出针对特定的OpenStack部署拓扑。所谓的域和其信任的需求取决于云的实例是公有的，私有的，还是混合的。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml808(para)
msgid ""
"The public security domain is an entirely untrusted area of the cloud "
"infrastructure. It can refer to the Internet as a whole or simply to "
"networks over which you have no authority. This domain should always be "
"considered untrusted."
msgstr "公有安全域对于云基础设施是完全不可信任的区域。正如将内部暴露给整个互联网，或者是没有认证的简单网络。此域一定不可以被信任。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml812(para)
msgid ""
"Typically used for compute instance-to-instance traffic, the guest security "
"domain handles compute data generated by instances on the cloud but not "
"services that support the operation of the cloud, such as API calls. Public "
"cloud providers and private cloud providers who do not have stringent "
"controls on instance use or who allow unrestricted Internet access to "
"instances should consider this domain to be untrusted. Private cloud "
"providers may want to consider this network as internal and therefore "
"trusted only if they have controls in place to assert that they trust "
"instances and all their tenants."
msgstr "典型的用户计算服务中的实例对实际的互联互通，客户安全域，在云中掌握着由实例生成的计算机数据，但是不可以通过云来访问，包括应用程序接口调用。公有云或私有云提供商不会严格的控制实例的使用，以及谁受限访问互联网，所以应指定此域是不可信任的。或许私有云提供商可以稍宽松点，因为是内部网络，还有就是它可以控制所有的实例和租户。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml823(para)
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml318(para)
msgid ""
"The management security domain is where services interact. Sometimes "
"referred to as the \"control plane\", the networks in this domain transport "
"confidential data such as configuration parameters, user names, and "
"passwords. In most deployments this domain is considered trusted."
msgstr "管理安全域即是服务交互的集中地，想一下“控制面板”，在此域中网络传输的都是机密的数据，比如配置参数、用户名称、密码等。多数部署此域为信任的。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml828(para)
msgid ""
"The data security domain is concerned primarily with information pertaining "
"to the storage services within OpenStack. Much of the data that crosses this"
" network has high integrity and confidentiality requirements and, depending "
"on the type of deployment, may also have strong availability requirements. "
"The trust level of this network is heavily dependent on other deployment "
"decisions."
msgstr "数据安全域主要关心的是OpenStack存储服务相关的信息。多数通过此网络的数据具有高度机密的要求，甚至在某些类型的部署中，还有高可用的需求。此网络的信任级别高度依赖于其他部署的决定。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml835(para)
msgid ""
"When deploying OpenStack in an enterprise as a private cloud it is usually "
"behind the firewall and within the trusted network alongside existing "
"systems. Users of the cloud are, traditionally, employees that are bound by "
"the security requirements set forth by the company. This tends to push most "
"of the security domains towards a more trusted model. However, when "
"deploying OpenStack in a public facing role, no assumptions can be made and "
"the attack vectors significantly increase. For example, the API endpoints, "
"along with the software behind them, become vulnerable to bad actors wanting"
" to gain unauthorized access or prevent access to services, which could lead"
" to loss of data, functionality, and reputation. These services must be "
"protected against through auditing and appropriate filtering."
msgstr "在一个企业部署OpenStack为私有云，通常是安置在防火墙之后，和原来的系统一并认为是可信任网络。云的用户即是原来的员工，由公司本来的安全需求所约束。这导致推动大部分的安全域趋向信任模式。但是，当部署OpenStack为面向公用的角色时，不要心存侥幸，它被攻击的几率大大增加。例如，应用程序接口端点，以及其背后的软件，很容易成为一些坏人下手的地方，获得未经授权的访问服务或者阻止其他人访问正常的服务，这可能会导致丢失数据、程序失效，乃至名声。这些服务必须被保护，通过审计以及适当的过滤来实现。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml849(para)
msgid ""
"Consideration must be taken when managing the users of the system for both "
"public and private clouds. The identity service allows for LDAP to be part "
"of the authentication process. Including such systems in an OpenStack "
"deployment may ease user management if integrating into existing systems."
msgstr "无论是公有云还是私有云，管理用户的系统必须认真的考虑。身份认证服务允许LDAP作为认证流程的一部分。Including such systems in an OpenStack deployment may ease user management if integrating into existing systems."

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml855(para)
msgid ""
"It's important to understand that user authentication requests include "
"sensitive information including user names, passwords and authentication "
"tokens. For this reason, placing the API services behind hardware that "
"performs SSL termination is strongly recommended."
msgstr "理解用户的认证需要一些敏感信息如用户名、密码和认证令牌是非常重要的。基于这个原因，强烈建议将认证的API服务隐藏在基于硬件的SSL终端之后。"

#: ./doc/arch-design/generalpurpose/section_tech_considerations_general_purpose.xml860(para)
msgid ""
"For more information OpenStack Security, see the <link "
"href=\"http://docs.openstack.org/security-guide/\"><citetitle>OpenStack "
"Security Guide</citetitle></link>"
msgstr "更多关于OpenStack安全的信息，请访问<link href=\"http://docs.openstack.org/security-guide/\"><citetitle>OpenStack 安全指南</citetitle></link>。"

#: ./doc/arch-design/introduction/section_intended_audience.xml7(title)
msgid "Intended audience"
msgstr "目标读者"

#: ./doc/arch-design/introduction/section_intended_audience.xml8(para)
msgid ""
"This book has been written for architects and designers of OpenStack clouds."
" This book is not intended for people who are deploying OpenStack. For a "
"guide on deploying and operating OpenStack, please refer to the "
"<citetitle>OpenStack Operations Guide</citetitle> (<link "
"href=\"http://docs.openstack.org/openstack-ops\">http://docs.openstack.org"
"/openstack-ops</link>)."
msgstr "本书是写给OpenStack云的架构师和设计师们。本书不是为那些打算部署OpenStack的人们写的。关于部署和实战的指南请参考 <citetitle>OpenStack 实战指南</citetitle> (<link href=\"http://docs.openstack.org/openstack-ops\">http://docs.openstack.org/openstack-ops</link>)。"

#: ./doc/arch-design/introduction/section_intended_audience.xml15(para)
msgid ""
"The reader should have prior knowledge of cloud architecture and principles,"
" experience in enterprise system design, Linux and virtualization "
"experience, and a basic understanding of networking principles and "
"protocols."
msgstr "读者需要有云计算架构和原理的知识背景，企业级系统设计经验，linux和虚拟化经验，以及可理解基本的网络原理和协议。"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml7(title)
msgid "Why and how we wrote this book"
msgstr "我们为什么及如何写作此书"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml8(para)
msgid ""
"The velocity at which OpenStack environments are moving from proof-of-"
"concepts to production deployments is leading to increasing questions and "
"issues related to architecture design considerations. By and large these "
"considerations are not addressed in the existing documentation, which "
"typically focuses on the specifics of deployment and configuration options "
"or operational considerations, rather than the bigger picture."
msgstr "OpenStack环境从验证测试迁移到实际生产部署的速度决定着和架构设计相关的问题的多寡。目前已经存在的文档中，都是定位在特定的部署、配置以及实际操作的，还没有整体框架式的相关描述。"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml16(para)
msgid ""
"We wrote this book to guide readers in designing an OpenStack architecture "
"that meets the needs of their organization. This guide concentrates on "
"identifying important design considerations for common cloud use cases and "
"provides examples based on these design guidelines. This guide does not aim "
"to provide explicit instructions for installing and configuring the cloud, "
"but rather focuses on design principles as they relate to user requirements "
"as well as technical and operational considerations. For specific guidance "
"with installation and configuration there are a number of resources already "
"available in the OpenStack documentation that help in that area."
msgstr "我们写作此书是希望能够给读者带来抛砖引玉的作用，让读者可以根据自身所在的组织具体需求来设计OpenStack架构。此指南针对通用情况的使用案例，抽取了我们认为重要的设计考虑，且根据我们的设计提供了具体的例子。此指南的目标不是为安装和配置云提供相关介绍，是专注于那些和用户需求密切相关的设计原理，相比技术和操作上的考虑也少了许多。在OpenStack文档相关的板块中关于安装和配置的相关向导/指南已经有很多资料了，寻找想要的即可。"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml28(para)
msgid ""
"This book was written in a book sprint format, which is a facilitated, rapid"
" development production method for books. For more information, see the Book"
" Sprints website (www.booksprints.net)."
msgstr "本书是基于sprint格式书写的，sprint格式是一种针对写书的便利、快速开发的一种方法。想得知更多信息，请访问Book Sprints官方站点 (www.booksprints.net)。"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml32(para)
msgid ""
"This book was written in five days during July 2014 while exhausting the "
"M&amp;M, Mountain Dew and healthy options supply, complete with juggling "
"entertainment during lunches at VMware's headquarters in Palo Alto. The "
"event was also documented on Twitter using the #OpenStackDesign hashtag. The"
" Book Sprint was facilitated by Faith Bosworth and Adam Hyde."
msgstr "本书的写作共花了5天的时间，在2014年的7月份，中间当然历经辛勤的汗水、激情以及合理的饮食。在帕洛阿尔托的VMware公司总部午饭时我们庆祝了本书的完成。整个过程我们在Twitter中使用#OpenStackDesign 直播。Faith Bosworth 和 Adam Hyde帮助我们轻松驾驭Book Sprint。"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml39(para)
msgid ""
"We would like to thank VMware for their generous hospitality, as well as our"
" employers, Cisco, Cloudscaling, Comcast, EMC, Mirantis, Rackspace, Red Hat,"
" Verizon, and VMware, for enabling us to contribute our time. We would "
"especially like to thank Anne Gentle and Kenneth Hui for all of their "
"shepherding and organization in making this happen."
msgstr "我们非常感谢VMware的盛情款待，以及我们的雇主，Cisco, Cloudscaling,Comcast,EMC,Mirantis,Rackspace,Red Hat, Verizon和VMware,能够让我们花时间做点有意义的事情。尤其感谢Anne Gentle 和 Kenneth Hui，由于二位的领导和组织，才有此书诞生的机会。"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml46(para)
msgid "The author team includes:"
msgstr "作者团队成员有："

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml49(para)
msgid ""
"Kenneth Hui (EMC) <link "
"href=\"http://twitter.com/hui_kenneth\">@hui_kenneth</link>"
msgstr "Kenneth Hui (EMC) <link href=\"http://twitter.com/hui_kenneth\">@hui_kenneth</link>"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml54(para)
msgid ""
"Alexandra Settle (Rackspace) <link "
"href=\"http://twitter.com/dewsday\">@dewsday</link>"
msgstr "Alexandra Settle (Rackspace) <link href=\"http://twitter.com/dewsday\">@dewsday</link>"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml59(para)
msgid ""
"Anthony Veiga (Comcast) <link "
"href=\"http://twitter.com/daaelar\">@daaelar</link>"
msgstr "Anthony Veiga (Comcast) <link href=\"http://twitter.com/daaelar\">@daaelar</link>"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml64(para)
msgid ""
"Beth Cohen (Verizon) <link "
"href=\"http://twitter.com/bfcohen\">@bfcohen</link>"
msgstr "Beth Cohen (Verizon) <link href=\"http://twitter.com/bfcohen\">@bfcohen</link>"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml69(para)
msgid ""
"Kevin Jackson (Rackspace) <link "
"href=\"http://twitter.com/itarchitectkev\">@itarchitectkev</link>"
msgstr "Kevin Jackson (Rackspace) <link href=\"http://twitter.com/itarchitectkev\">@itarchitectkev</link>"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml74(para)
msgid ""
"Maish Saidel-Keesing (Cisco) <link "
"href=\"http://twitter.com/maishsk\">@maishsk</link>"
msgstr "Maish Saidel-Keesing (Cisco) <link href=\"http://twitter.com/maishsk\">@maishsk</link>"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml79(para)
msgid ""
"Nick Chase (Mirantis) <link "
"href=\"http://twitter.com/NickChase\">@NickChase</link>"
msgstr "Nick Chase (Mirantis) <link href=\"http://twitter.com/NickChase\">@NickChase</link>"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml84(para)
msgid ""
"Scott Lowe (VMware) <link "
"href=\"http://twitter.com/scott_lowe\">@scott_lowe</link>"
msgstr "Scott Lowe (VMware) <link href=\"http://twitter.com/scott_lowe\">@scott_lowe</link>"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml89(para)
msgid ""
"Sean Collins (Comcast) <link "
"href=\"http://twitter.com/sc68cal\">@sc68cal</link>"
msgstr "Sean Collins (Comcast) <link href=\"http://twitter.com/sc68cal\">@sc68cal</link>"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml94(para)
msgid ""
"Sean Winn (Cloudscaling) <link "
"href=\"http://twitter.com/seanmwinn\">@seanmwinn</link>"
msgstr "Sean Winn (Cloudscaling) <link href=\"http://twitter.com/seanmwinn\">@seanmwinn</link>"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml99(para)
msgid ""
"Sebastian Gutierrez (Red Hat) <link "
"href=\"http://twitter.com/gutseb\">@gutseb</link>"
msgstr "Sebastian Gutierrez (Red Hat) <link href=\"http://twitter.com/gutseb\">@gutseb</link>"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml104(para)
msgid ""
"Stephen Gordon (Red Hat) <link "
"href=\"http://twitter.com/xsgordon\">@xsgordon</link>"
msgstr "Stephen Gordon (Red Hat) <link href=\"http://twitter.com/xsgordon\">@xsgordon</link>"

#: ./doc/arch-design/introduction/section_how_this_book_was_written.xml109(para)
msgid ""
"Vinny Valdez (Red Hat) <link "
"href=\"http://twitter.com/VinnyValdez\">@VinnyValdez</link>"
msgstr "Vinny Valdez (Red Hat) <link href=\"http://twitter.com/VinnyValdez\">@VinnyValdez</link>"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/introduction/section_methodology.xml21(None)
msgid ""
"@@image: '../figures/Methodology.png'; md5=6b187c6b7bf846d86f60b062461e7bdf"
msgstr "@@image: '../figures/Methodology.png'; md5=6b187c6b7bf846d86f60b062461e7bdf"

#: ./doc/arch-design/introduction/section_methodology.xml11(title)
msgid "Methodology"
msgstr "方法论"

#: ./doc/arch-design/introduction/section_methodology.xml12(para)
msgid ""
"The magic of the cloud is that it can do anything. It is both robust and "
"flexible, the best of both worlds. Yes, the cloud is highly flexible and it "
"can do almost anything, but to get the most out of a cloud investment, it is"
" important to define how the cloud will be used by creating and testing use "
"cases. This is the chapter that describes the thought process behind how to "
"design a cloud architecture that best suits the intended use."
msgstr "云的魅力在于它可以干任何事。无论从健壮性还是灵活性，都是这个世界上目前来说最好的。是的，云具有很高的灵活性，且可以做几乎任何事，但是想要充分发挥云的威力，定义好云将如何使用是非常重要的，否则创建和测试的使用案例意义就不复存在。此章讲述的是那些设计最适合、用户最关注的云架构背后的思考过程。"

#: ./doc/arch-design/introduction/section_methodology.xml24(para)
msgid ""
"The diagram shows at a very abstract level the process for capturing "
"requirements and building use cases. Once a set of use cases has been "
"defined, it can then be used to design the cloud architecture."
msgstr "上图展示了在获取用户需求和构建使用案例过程中的抽象流程。一旦用例被定义，它就可以被用于设计云的架构。"

#: ./doc/arch-design/introduction/section_methodology.xml27(para)
msgid ""
"Use case planning can seem counter-intuitive. After all, it takes about five"
" minutes to sign up for a server with Amazon. Amazon does not know in "
"advance what any given user is planning on doing with it, right? Wrong. "
"Amazon's product management department spends plenty of time figuring out "
"exactly what would be attractive to their typical customer and honing the "
"service to deliver it. For the enterprise, the planning process is no "
"different, but instead of planning for an external paying customer, for "
"example, the use could be for internal application developers or a web "
"portal. The following is a list of the high level objectives that need to be"
" incorporated into the thinking about creating a use case."
msgstr "用例选择规划看起来是反直觉的，比如，使用Amazon的服务，从注册到使用也就是花5分钟的时间而已。难道Amazon真的不关心用户的计划？错了，Amazon的产品管理部门花了大量的时间去研究吸引他们典型用户的究竟是什么，也在琢磨着交付更好的服务。对于企业来说，计划的流程没有什么不同，只是不会去规划外部的付费用户罢了，举例来说，用户仅仅是内部的应用程序开发者或者是web门户。下面所列的目标在考虑创建用例时用的到。"

#: ./doc/arch-design/introduction/section_methodology.xml38(para)
msgid "Overall business objectives"
msgstr "总体业务目标"

#: ./doc/arch-design/introduction/section_methodology.xml41(para)
msgid "Develop clear definition of business goals and requirements"
msgstr "开发务必清晰定义，符合业务目标和需求"

#: ./doc/arch-design/introduction/section_methodology.xml45(para)
msgid ""
"Increase project support and engagement with business, customers and end "
"users."
msgstr "增加项目的支持，积极的和业务相关人员、客户以及最终用户保持沟通。"

#: ./doc/arch-design/introduction/section_methodology.xml49(para)
msgid "Technology"
msgstr "技术"

#: ./doc/arch-design/introduction/section_methodology.xml52(para)
msgid ""
"Coordinate the OpenStack architecture across the project and leverage "
"OpenStack community efforts more effectively."
msgstr "协调OpenStack架构中各个项目，努力的通过社区获得更多的支持。"

#: ./doc/arch-design/introduction/section_methodology.xml56(para)
msgid ""
"Architect for automation as much as possible to speed development and "
"deployment."
msgstr "为自动化设计好的架构可大大的加速开发和部署。"

#: ./doc/arch-design/introduction/section_methodology.xml60(para)
msgid "Use the appropriate tools for the development effort."
msgstr "使用恰当的工具可增加开发的效率。"

#: ./doc/arch-design/introduction/section_methodology.xml63(para)
msgid ""
"Create better and more test metrics and test harnesses to support continuous"
" and integrated development, test processes and automation."
msgstr "创建更好的、更多的测试指标和测试工具，以支持开发的持续集成、测试流程和自动化。"

#: ./doc/arch-design/introduction/section_methodology.xml68(para)
msgid "Organization"
msgstr "组织"

#: ./doc/arch-design/introduction/section_methodology.xml71(para)
msgid "Better messaging of management support of team efforts"
msgstr "选用好多消息工具，良好的管理支持团队。"

#: ./doc/arch-design/introduction/section_methodology.xml74(para)
msgid ""
"Develop better cultural understanding of Open Source, cloud architectures, "
"Agile methodologies, continuous development, test and integration, overall "
"development concepts in general"
msgstr "增强文化氛围，诸如对于开源的理解，云架构，敏捷开发，持续开发/测试/集成等，总而言之，涉及到开发的所有环节都需要。"

#: ./doc/arch-design/introduction/section_methodology.xml79(para)
msgid ""
"As an example of how this works, consider a business goal of using the cloud"
" for the company's E-commerce website. This goal means planning for "
"applications that will support thousands of sessions per second, variable "
"workloads, and lots of complex and changing data. By identifying the key "
"metrics, such as number of concurrent transactions per second, size of "
"database, and so on, it is possible to then build a method for testing the "
"assumptions."
msgstr "举例来说明上述的一切，想想一个业务目标是将其公司的电子商务站点使用云来构建。此目标意味着应用程序将要支持每秒成千上万的会话，各种负载以及大量复杂和瞬息完变的数据。通过识别诸如每秒并发事务，数据库的大小等关键指标，相信构建出一个基于假设的测试方法是可行的。"

#: ./doc/arch-design/introduction/section_methodology.xml87(title)
msgid "Develop functional user scenarios"
msgstr "基于用户场景开发功能"

#: ./doc/arch-design/introduction/section_methodology.xml88(para)
msgid ""
"Develop functional user scenarios that can be used to develop test cases "
"that can be used to measure overall project trajectory. If the organization "
"is not ready to commit to an application or applications that can be used to"
" develop user requirements, it needs to create requirements to build valid "
"test harnesses and develop usable metrics. Once the metrics are established,"
" as requirements change, it is easier to respond to the changes quickly "
"without having to worry overly much about setting the exact requirements in "
"advance. Think of this as creating ways to configure the system, rather than"
" redesigning it every time there is a requirements change."
msgstr "基于用户场景开发功能，可轻松开发测试用例，即可在项目的整个过程中有个掂量。假如组织没有准备好一个应用，或者没有准备好一个用于开发用户需求的应用，那么就需要创建需求，以构建合适的测试工具和开发可用的指标。一旦指标确认，即使遇到需求变更，也可轻松面对快速变化，而且无须过度担心提前具体需求。将此类比于使用创新的方法配置系统，不能因为需求的变化而每次都重新设计。"

#: ./doc/arch-design/introduction/section_methodology.xml104(title)
msgid "Limit cloud feature set"
msgstr "云的局限特性集"

#: ./doc/arch-design/introduction/section_methodology.xml105(para)
msgid ""
"Create requirements that address the pain points, but do not recreate the "
"entire OpenStack tool suite. The requirement to build OpenStack, only "
"better, is self-defeating. It is important to limit scope creep by "
"concentrating on developing a platform that will address tool limitations "
"for the requirements, but not recreating the entire suite of tools. Work "
"with technical product owners to establish critical features that are needed"
" for a successful cloud deployment."
msgstr "建立需求是发掘用户痛点，而不是重新创建OpenStack已经有的工具集。认为建立OpenStack的只有一种好办法，那只能弄巧成拙。在开发一个平台中通过限制集中带来的慢速是非常重要的，因为它会导致需求转变为处理工具本身，所以请不要重新创建一整套的工具。欲成功的部署云，与技术产品负责人一起建立关键功能显得不可或缺。"

#: ./doc/arch-design/introduction/section_methodology.xml118(title)
msgid "Application cloud readiness"
msgstr "为云准备好应用程序"

#: ./doc/arch-design/introduction/section_methodology.xml119(para)
msgid ""
"Although the cloud is designed to make things easier, it is important to "
"realize that \"using cloud\" is more than just firing up an instance and "
"dropping an application on it. The \"lift and shift\" approach works in "
"certain situations, but there is a fundamental difference between clouds and"
" traditional bare-metal-based environments, or even traditional virtualized "
"environments."
msgstr "尽管云被设计出来是让事情变得更简单，但是要意识到“使用云”不仅仅是建立一个实例然后将应用丟进去就这么简单是非常重要的。这种一夜之间平地起高楼的事情是需要确定的情况的，要明白在云和过去的基于服务器硬件环境以及过去虚拟化环境是有着本质上的区别的。"

#: ./doc/arch-design/introduction/section_methodology.xml125(para)
msgid ""
"In traditional environments, with traditional enterprise applications, the "
"applications and the servers that run on them are \"pets\". They're lovingly"
" crafted and cared for, the servers have names like Gandalf or Tardis, and "
"if they get sick, someone nurses them back to health. All of this is "
"designed so that the application does not experience an outage."
msgstr "在过去的环境中，还有那些过去的企业级应用，服务器和应用的运行都是被当作“宠物”看待的，他们被精心的照看和爱护，甚至每台服务器都有自己的名字如“甘道夫“或”哆啦唉梦“,一旦他们生病了，则需要人去护理直到恢复健康。所有的这些设计表明应用是不可以停止。"

#: ./doc/arch-design/introduction/section_methodology.xml131(para)
msgid ""
"In cloud environments, on the other hand, servers are more like cattle. "
"There are thousands of them, they get names like NY-1138-Q, and if they get "
"sick, they get put down and a sysadmin installs another one. Traditional "
"applications that are unprepared for this kind of environment, naturally "
"will suffer outages, lost data, or worse."
msgstr "在云的环境中，打个比方，服务器更像是牛群中的某一头牛。它们太多了，成千上万，命名的方式可能是类似的编号 NY-1138-Q，如果它们中的一个出问题了，管理员会直接抛弃它，再重新安装和启动一个即可。遗留的应用还没有准备好运行在此云环境中，所以很自然的会遭遇停运，丢失数据，甚至更加糟糕的。"

#: ./doc/arch-design/introduction/section_methodology.xml137(para)
msgid ""
"There are other reasons to design applications with cloud in mind. Some are "
"defensive, such as the fact that applications cannot be certain of exactly "
"where or on what hardware they will be launched, they need to be flexible, "
"or at least adaptable. Others are proactive. For example, one of the "
"advantages of using the cloud is scalability, so applications need to be "
"designed in such a way that they can take advantage of those and other "
"opportunities."
msgstr "在为云设计应用还有另外一些原因需要注意。一些是防御性的，例如一些应用并不能准确的确定在什么地方或什么样的硬件去启动，所以他们需要灵活性，即使做不到至少应该保持适应性更强。另外一些则是主动性的，例如，使用云的一个优点是其有高扩展性，所以应用需要被设计的能够使用这些优点，当然云还有更多的优点，也得一并考虑。"

#: ./doc/arch-design/introduction/section_methodology.xml146(title)
msgid "Determining whether an application is cloud-ready"
msgstr "决定那些应用程序是可在云中运行"

#: ./doc/arch-design/introduction/section_methodology.xml147(para)
msgid ""
"There are several factors to take into consideration when looking at whether"
" an application is a good fit for the cloud."
msgstr "寻找适合于在云中运行的应用，还是有几种方法可以考虑的。"

#: ./doc/arch-design/introduction/section_methodology.xml151(term)
msgid "Structure"
msgstr "结构"

#: ./doc/arch-design/introduction/section_methodology.xml153(para)
msgid ""
"A large, monolithic, single-tiered legacy application typically isn't a good"
" fit for the cloud. Efficiencies are gained when load can be spread over "
"several instances, so that a failure in one part of the system can be "
"mitigated without affecting other parts of the system, or so that scaling "
"can take place where the app needs it."
msgstr "那些大型的、单层次的、铁板一块的旧的应用是非常典型的不适合云环境的。将负载分割为多个实例会获得高效，所以部分系统失效不会特别影响其他部分的系统，或者说随应用的需要而横向扩展。"

#: ./doc/arch-design/introduction/section_methodology.xml168(para)
msgid ""
"Applications that depend on specific hardwaresuch as a particular chip set "
"or an external device such as a fingerprint readermight not be a good fit "
"for the cloud, unless those dependencies are specifically addressed. "
"Similarly, if an application depends on an operating system or set of "
"libraries that cannot be used in the cloud, or cannot be virtualized, that "
"is a problem."
msgstr "如果应用程序依赖特别的硬件，比如特别的芯片或者是类似指纹识别等外设，是不适合于云计算的。除非使用特别的方式来实现。同样的，如果应用依赖于操作系统或一组程序库不能用于云环境，或者无法在虚拟化环境中运行，这就真的成了问题了。"

#: ./doc/arch-design/introduction/section_methodology.xml184(para)
msgid ""
"Self-contained applications or those that depend on resources that are not "
"reachable by the cloud in question, will not run. In some situations, work "
"around these issues with custom network setup, but how well this works "
"depends on the chosen cloud environment."
msgstr "自包含的应用或它们所依赖的资源在云的环境无法实现，将无法运行。也许在一些情况下，通过自定义网络解决了这些问题，但是运行是否良好还得看选择云的环境。"

#: ./doc/arch-design/introduction/section_methodology.xml195(term)
msgid "Durability and resilience"
msgstr "耐久性和弹性"

#: ./doc/arch-design/introduction/section_methodology.xml197(para)
msgid ""
"Despite the existence of SLAs, things break: servers go down, network "
"connections are disrupted, or too many tenants on a server make a server "
"unusable. An application must be sturdy enough to contend with these issues."
msgstr "尽管有服务水平协议(SLA)的存在,但是还是会有一些坏的事情发生：服务器宕机，网络连接发生紊乱，多个租户无法访问服务。应用程序必须足够的稳固，以应对上述事情的发生。"

#: ./doc/arch-design/introduction/section_methodology.xml209(title)
msgid "Designing for the cloud"
msgstr "设计云"

#: ./doc/arch-design/introduction/section_methodology.xml210(para)
msgid ""
"Here are some guidelines to keep in mind when designing an application for "
"the cloud:"
msgstr "这里有一些原则忠告，在为一个应用设计云的时候请时刻铭记："

#: ./doc/arch-design/introduction/section_methodology.xml214(para)
msgid ""
"Be a pessimist: Assume everything fails and design backwards. Love your "
"chaos monkey."
msgstr "做一个悲观主义者：承担一切失败，基于目标选择手段。善待那些将系统搞坏的程序。"

#: ./doc/arch-design/introduction/section_methodology.xml218(para)
msgid ""
"Put your eggs in multiple baskets: Leverage multiple providers, geographic "
"regions and availability zones to accommodate for local availability issues."
" Design for portability."
msgstr "将鸡蛋放在多个篮子里：考虑多个供应商，基于地理分区不同的数据中心，多可用的zones以容纳本地存在的隐患。可移植性的设计。"

#: ./doc/arch-design/introduction/section_methodology.xml224(para)
msgid ""
"Think efficiency: Inefficient designs will not scale. Efficient designs "
"become cheaper as they scale. Kill off unneeded components or capacity."
msgstr "考虑效率：低效的设计将不可扩展。高效的设计可以无须花费多少钱即可轻松扩展。去掉那些不需要的组件或容量。"

#: ./doc/arch-design/introduction/section_methodology.xml229(para)
msgid ""
"Be paranoid: Design for defense in depth and zero tolerance by building in "
"security at every level and between every component. Trust no one."
msgstr "保持偏执：深度设计防御，通过构建在每一层和每个组件之间的安全确保零差错。不信任任何人。"

#: ./doc/arch-design/introduction/section_methodology.xml234(para)
msgid ""
"But not too paranoid: Not every application needs the platinum solution. "
"Architect for different SLA's, service tiers and security levels."
msgstr "但是也不要太偏执：不是所有的应用都需要钻石级的解决方案。为不同的服务水平协议、不同的服务层和安全级别等分别设计不同的架构。"

#: ./doc/arch-design/introduction/section_methodology.xml239(para)
msgid ""
"Manage the data: Data is usually the most inflexible and complex area of a "
"cloud and cloud integration architecture. Don't short change the effort in "
"analyzing and addressing data needs."
msgstr "管理数据：数据通常是最为灵活的也最复杂的一块，尤其是在云中或云集成的架构中。要在分析和传送数据付出更多的努力。"

#: ./doc/arch-design/introduction/section_methodology.xml245(para)
msgid ""
"Hands off: Leverage automation to increase consistency and quality and "
"reduce response times."
msgstr "放手：自动化可以增加一致性、质量以及减少响应的时间。"

#: ./doc/arch-design/introduction/section_methodology.xml249(para)
msgid ""
"Divide and conquer: Pursue partitioning and parallel layering wherever "
"possible. Make components as small and portable as possible. Use load "
"balancing between layers."
msgstr "分离和征服：尽可能分区和并行的分层。尽可能的确保组件足够小且可移植。在层之间使用负载均衡。"

#: ./doc/arch-design/introduction/section_methodology.xml255(para)
msgid ""
"Think elasticity: Increasing resources should result in a proportional "
"increase in performance and scalability. Decreasing resources should have "
"the opposite effect."
msgstr "保持弹性：随着增加的资源，确保结果是增加的性能和扩展。减少资源要没有负面影响。"

#: ./doc/arch-design/introduction/section_methodology.xml261(para)
msgid ""
"Be dynamic: Enable dynamic configuration changes such as auto scaling, "
"failure recovery and resource discovery to adapt to changing environments, "
"faults and workload volumes."
msgstr "保持动态：激活动态配置变化诸如自动扩展，失效恢复，资源发现等，以适应变化的环境，错误的发生以及负载的变化。"

#: ./doc/arch-design/introduction/section_methodology.xml267(para)
msgid ""
"Stay close: Reduce latency by moving highly interactive components and data "
"near each other."
msgstr "贴近原则：通过移动高度密切的组件和相似数据靠近以减少延迟。"

#: ./doc/arch-design/introduction/section_methodology.xml271(para)
msgid ""
"Keep it loose: Loose coupling, service interfaces, separation of concerns, "
"abstraction and well defined API's deliver flexibility."
msgstr "保持松散：松耦合，服务接口，分离关注度高的点，抽象并定义好的应用程序接口，交付灵活。"

#: ./doc/arch-design/introduction/section_methodology.xml276(para)
msgid ""
"Be cost aware: Autoscaling, data transmission, virtual software licenses, "
"reserved instances, and so on can rapidly increase monthly usage charges. "
"Monitor usage closely."
msgstr "注意开销：自动扩展，数据传输，虚拟软件许可证，保留的实例等等均会快速增加每月的使用支出。密切监测使用情况。"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml7(title)
msgid "How this book is organized"
msgstr "本书是如何组织的"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml8(para)
msgid ""
"This book has been organized into various chapters that help define the use "
"cases associated with making architectural choices related to an "
"<glossterm>OpenStack</glossterm> cloud installation. Each chapter is "
"intended to stand alone to encourage individual chapter readability, however"
" each chapter is designed to contain useful information that may be "
"applicable in situations covered by other chapters. Cloud architects may use"
" this book as a comprehensive guide by reading all of the use cases, but it "
"is also possible to review only the chapters which pertain to a specific use"
" case. When choosing to read specific use cases, note that it may be "
"necessary to read more than one section of the guide to formulate a complete"
" design for the cloud. The use cases covered in this guide include:"
msgstr "本书采用多个章节来组织，通过使用案例来帮助用户作出架构选择，以<glossterm>OpenStack</glossterm>云安装来具体体现。每一章关注一个单一的架构以鼓励读者可随意的阅读，但是每一章包含的一些适用场景的信息也是其他章节需要的。云架构师也许通过阅读所有的案例将此书作为一个全面的参考，但是很可能仅重复阅读其中适合于某一案例的章节。当选择阅读挑选的使用案例时，请记住需要阅读更多的章节，以为云制定完整的设计。本指南中覆盖到的使用案例包括："

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml25(para)
msgid ""
"<link linkend=\"generalpurpose\">General purpose</link>: A cloud built with "
"common components that should address 80% of common use cases."
msgstr "<link linkend=\"generalpurpose\">通用型</link>: 使用通用的组件构建一个云，是多数的使用案例，占80%。"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml32(para)
msgid ""
"<link linkend=\"compute_focus\">Compute focused</link>: A cloud designed to "
"address compute intensive workloads such as high performance computing "
"(HPC)."
msgstr "<link linkend=\"compute_focus\">计算型</link>: 专注于计算密集性、高负载的云，例如高性能计算(HPC)"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml39(para)
msgid ""
"<link linkend=\"storage_focus\">Storage focused</link>: A cloud focused on "
"storage intensive workloads such as data analytics with parallel file "
"systems."
msgstr "<link linkend=\"storage_focus\">存储型</link>: 用于存储密集负载的云，例如基于并行文件系统的数据分析。"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml46(para)
msgid ""
"<link linkend=\"network_focus\">Network focused</link>: A cloud depending on"
" high performance and reliable networking, such as a <glossterm>content "
"delivery network (CDN)</glossterm>."
msgstr "<link linkend=\"network_focus\">网络型</link>: 依赖于网络的高性能和高可靠的云，例如 <glossterm>内容传送网络 (CDN)</glossterm>。"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml54(para)
msgid ""
"<link linkend=\"multi_site\">Multi-site</link>: A cloud built with multiple "
"sites available for application deployments for geographical, reliability or"
" data locality reasons."
msgstr "<link linkend=\"multi_site\">多站点</link>: 构建一个基于地理分布、可靠性、数据位置等原因的应用程序部署且需多个站点可供服务的云。"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml62(para)
msgid ""
"<link linkend=\"hybrid\">Hybrid cloud</link>: An architecture where multiple"
" disparate clouds are connected either for failover, hybrid cloud bursting, "
"or availability."
msgstr "<link linkend=\"hybrid\">混合云</link>: 一种多个不同的云相杂的架构，目的是提供可用性，失效切换，防止单一云的突然崩溃。"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml70(para)
msgid ""
"<link linkend=\"massively_scalable\">Massively scalable</link>: An "
"architecture that is intended for cloud service providers or other extremely"
" large installations."
msgstr "<link linkend=\"massively_scalable\">大规模扩展</link>: 专注于云计算服务提供者或其他大规模扩展安装的架构。"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml78(para)
msgid ""
"A chapter titled <link linkend=\"specialized\">Specialized cases</link> "
"provides information on architectures that have not previously been covered "
"in the defined use cases."
msgstr "章节 <link linkend=\"specialized\">特殊用例</link>阐释了上述所定义的使用案例中没有覆盖到的架构信息。"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml83(para)
msgid ""
"Each chapter in the guide is then further broken down into the following "
"sections:"
msgstr "本指南的每一章都会分出以下小节："

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml87(para)
msgid "Introduction: Provides an overview of the architectural use case."
msgstr "介绍：此架构使用案例的额要介绍"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml91(para)
msgid ""
"User requirements: Defines the set of user considerations that typically "
"come into play for that use case."
msgstr "用户需求：用户所考虑的内容，那些典型的在组织中起关键作用的。"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml96(para)
msgid ""
"Technical considerations: Covers the technical issues that must be accounted"
" when dealing with this use case."
msgstr "技术考虑：在实际案例中所处理的技术问题。"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml101(para)
msgid ""
"Operational considerations: Covers the ongoing operational tasks associated "
"with this use case and architecture."
msgstr "实践考虑：在实际案例中和架构考虑中的那些不断的操作任务。"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml106(para)
msgid ""
"Architecture: Covers the overall architecture associated with the use case."
msgstr "架构：总体架构"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml110(para)
msgid ""
"Prescriptive examples: Presents one or more scenarios where this "
"architecture could be deployed."
msgstr "实例：架构设计被实际部署的一个或几个场景。"

#: ./doc/arch-design/introduction/section_how_this_book_is_organized.xml115(para)
msgid "A glossary covers the terms used in the book."
msgstr "书中所用到的术语词汇表"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml9(para)
msgid ""
"Operationally, there are a number of considerations that affect the design "
"of compute-focused OpenStack clouds. Some examples might include enforcing "
"strict API availability requirements, understanding and dealing with failure"
" scenarios, or managing host maintenance schedules."
msgstr "从运营的角度讲，有许多考虑的因素会影响到计算型OpenStack云的设计。例如对API可用有强制严格的需求，理解和处理失效的场景，又或者是管理主机维护计划等。"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml13(para)
msgid ""
"Service-level agreements (SLAs) are a contractual obligation that gives "
"assurances around the availability of a provided service. As such, factoring"
" in promises of availability implies a certain level of redundancy and "
"resiliency when designing an OpenStack cloud."
msgstr "服务水平协议(SLA)是一种合同义务，它给服务的可用性提供一个保证。因此，当设计一个OpenStack云时，兑现合同上的承诺就是实现可用性，确保冗余和弹性的水平。"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml19(para)
msgid ""
"Guarantees for API availability imply multiple infrastructure services "
"combined with appropriately high available load balancers."
msgstr "保证API的可用性，暗示着多个基础设施服务是由高可用、负载均衡支撑着的。"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml24(para)
msgid ""
"Network uptime guarantees will affect the switch design and might require "
"redundant switching and power."
msgstr "网络运行时间的保证会影响到交换机的设计，或许要求冗余的交换机及电力供应。"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml28(para)
msgid ""
"Network security policy requirements need to be factored in to deployments."
msgstr "网络安全规则的要求需要被考虑到部署流程。"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml32(para)
msgid ""
"Knowing when and where to implement redundancy and high availability (HA) is"
" directly affected by the terms contained in any associated SLA, if one is "
"present."
msgstr "如果存在SLA的话，它其中的条款必定包含，知道何时何地实现冗余和高可用(HA)。"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml37(para)
msgid ""
"OpenStack cloud management requires operations staff to be able to "
"understand and comprehend design architecture content on some level. The "
"level of skills and the level of separation of the operations and "
"engineering staff is dependent on the size and purpose of the installation. "
"A large cloud service provider or a telecom provider is more inclined to be "
"managed by a specially trained dedicated operations organization. A smaller "
"implementation is more inclined to rely on a smaller support staff that "
"might need to take on the combined engineering, design and operations "
"functions."
msgstr "为了较好的支持和维护、安装，OpenStack云管理需求运维人员理解和搞懂架构设计的内容。运维人员和工程师人员的技能级别，区分他们，取决于安装的规模和目的。大型云服务提供商，或者电信级提供商，拥有特别的培训计划，有专门的运维队伍。对于小型组织来说，就要求支持团队要精，即是工程师、设计师、运维一起做。"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml47(para)
msgid ""
"Maintaining OpenStack installations require a variety of technical skills. "
"Some of these skills may include the ability to debug Python log output to a"
" basic level as well as an understanding of networking concepts."
msgstr "维护OpenStack安装需要大量的技术技能。其中一些技能也许需要调试Python日志输出的能力，这还仅仅是最基本的，另外拥有网络相关方面的理解也很重要。"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml51(para)
msgid ""
"Consider incorporating features into the architecture and design that reduce"
" the operational burden. Some examples include automating some of the "
"operations functions, or alternatively exploring the possibility of using a "
"third party management company with special expertise in managing OpenStack "
"deployments."
msgstr "考虑一下结合架构和设计的内部功能将有助于减少运维的负担。比如一些包含自动化方面的运维功能，又或者是在管理OpenStack部署中使用了第三方的管理工具的一些特别的技巧，能够前期探索一番。"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml60(para)
msgid ""
"Like any other infrastructure deployment, OpenStack clouds need an "
"appropriate monitoring platform to ensure errors are caught and managed "
"appropriately. Consider leveraging any existing monitoring system to see if "
"it will be able to effectively monitor an OpenStack environment. While there"
" are many aspects that need to be monitored, specific metrics that are "
"critically important to capture include image disk utilization, or response "
"time to the Compute API."
msgstr "和其它的基础设施部署一样，OpenStack云需要一个合适的监测平台，来确保错误能够及时捕获以及正确的响应。考虑充分利用已有的监控系统，看它是否能够有效地监视OpenStack环境。OpenStack云的方方面面都需要被监测，一些特别的指标的捕获异常的重要，比如镜像磁盘使用率，访问计算API的响应时间等。"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml70(title)
msgid "Expected and unexpected server downtime"
msgstr "计划内和计划外服务器宕机时间"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml71(para)
msgid ""
"At some point, servers will fail. The SLAs in place affect how the design "
"has to address recovery time. Recovery of a failed host may mean restoring "
"instances from a snapshot, or respawning that instance on another available "
"host, which then has consequences on the overall application design running "
"on the OpenStack cloud."
msgstr "天有不测风云，服务器也会宕机，且一定会宕机。保证SLA的情况下，如何设计缩短恢复时间才是应该考虑的。恢复一个失效的主机，或者是从快照中重載实例，又或者是从另外可用的主机重新启动一个实例。这些后果都得考虑到，然后设计运行在OpenStack云中的所有应用。"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml77(para)
msgid ""
"It might be acceptable to design a compute-focused cloud without the ability"
" to migrate instances from one host to another, because the expectation is "
"that the application developer must handle failure within the application "
"itself. Conversely, a compute-focused cloud might be provisioned to provide "
"extra resilience as a requirement of that business. In this scenario, it is "
"expected that extra supporting services are also deployed, such as shared "
"storage attached to hosts to aid in recovery and resiliency of services in "
"order to meet strict SLAs."
msgstr "设计一个计算型云时，是可以接受实例没有从一台主机迁移到另外主机的能力的。因为应用程序的开发者们希望能够在应用程序内部掌控失效状况。相反的，一个计算型云应根据业务需求部署可提供外加的弹性，在此场景下，希望外加的支撑服务已经部署，诸如给主机挂接共享存储以提供紧急恢复和弹性服务，来满足服务水平协议。"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml90(para)
msgid ""
"Adding extra capacity to an OpenStack cloud is an easy horizontally scaling "
"process, as consistently configured nodes automatically attach to an "
"OpenStack cloud. Be mindful, however, of any additional work to place the "
"nodes into appropriate Availability Zones and Host Aggregates if necessary. "
"The same (or very similar) CPUs are recommended when adding extra nodes to "
"the environment because it reduces the chance to break any live-migration "
"features if they are present. Scaling out hypervisor hosts also has a direct"
" effect on network and other data center resources, so factor in this "
"increase when reaching rack capacity or when extra network switches are "
"required."
msgstr "为OpenStack云增加额外的容量是很轻松横向扩展的过程，像其它配置好的节点一样会自动挂接到OpenStack云。请记住，尽管如此，但也请在必要的时候才去增加节点到合适的可用域和主机聚合。在增加额外的节点到现有的环境中时，我们建议尽可能的使用相同(或类似)的CPU型号的主机，否则原来支持的在线迁移就可能失效。横向扩展hypervisor主机也会直接影响到网络和其它数据中心的资源，所以得考虑这种增长，例如当达到机架容量上限或需要额外的网络交换机时。"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml102(para)
msgid ""
"Compute hosts can also have internal components changed to account for "
"increases in demand, a process also known as vertical scaling. Swapping a "
"CPU for one with more cores, or increasing the memory in a server, can help "
"add extra needed capacity depending on whether the running applications are "
"more CPU intensive or memory based (as would be expected in a compute-"
"focused OpenStack cloud)."
msgstr "计算主机有时也需要根据需求来增加内部组件，这一过程通常叫做纵向扩展。换一个更多核的CPU，或者给服务器增加内存，可以帮助增加额外需要的容量，当然具体得看所运行的应用程序是需要多少CPU和内存(正如计算型云所期望的)。"

#: ./doc/arch-design/compute_focus/section_operational_considerations_compute_focus.xml109(para)
msgid ""
"Another option is to assess the average workloads and increase the number of"
" instances that can run within the compute environment by adjusting the "
"overcommit ratio. While only appropriate in some environments, it's "
"important to remember that changing the CPU overcommit ratio can have a "
"detrimental effect and cause a potential increase in a noisy neighbor. The "
"added risk of increasing the overcommit ratio is that more instances will "
"fail when a compute host fails. In a compute-focused OpenStack design "
"architecture, increasing the CPU overcommit ratio increases the potential "
"for noisy neighbor issues and is not recommended."
msgstr "另外一个属性是评估平均负载和增加运行在计算环境中的实例数量，即通过调整超分配比例。但这仅适合于某些环境，更改CPU超分配比例会带来负面影响而且会增加影响到其他组件的风险，记住这点很重要。增加超分配比例带来的风险有，当一个计算主机宕机会引发除其本机运行的实例之外更多的实例会失效。在计算型OpenStack设计架构中，增加CPU超分配比例会增加破坏系统的风险，这是我们不建议的。"

#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml13(para)
msgid ""
"Compute intensive workloads are defined by their high utilization of CPU, "
"RAM, or both. User requirements will determine if a cloud must be built to "
"accommodate anticipated performance demands."
msgstr "计算密集性负载是由他们对CPU，内存，或二者的高利用率所定义。用户的需求将决定一个计算型云须要构建成为满足预期的性能要求。"

#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml22(para)
msgid ""
"Cost is not generally a primary concern for a compute-focused cloud, however"
" some organizations might be concerned with cost avoidance. Repurposing "
"existing resources to tackle compute-intensive tasks instead of needing to "
"acquire additional resources may offer cost reduction opportunities."
msgstr "开销对于计算型云来书通常不是主要担忧的因素，尽管一些组织也许会想着如何减少成本。理由现有资源来处理计算密集型任务，而不是获取更多的资源，可以有效的降低成本。"

#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml33(para)
msgid ""
"Compute-focused clouds can be used to deliver products more quickly, for "
"example, speeding up a company's software development life cycle (SDLC) for "
"building products and applications."
msgstr "计算型云可用于更加快速的交付产品，举例，通过构建产品和应用以加速一家公司的软件开发生命周期(SDLC)。"

#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml42(para)
msgid ""
"Companies that are interested in building services or products that rely on "
"the power of the compute resources will benefit from a compute-focused "
"cloud. Examples include the analysis of large data sets (via Hadoop or "
"Cassandra) or completing computational intensive tasks such as rendering, "
"scientific computation, or simulations."
msgstr "企业从计算型云获利就得构建加强计算资源的服务或产品。例如包括大数据分析(通过Hadoop或Cassandra)，或者是完成计算密集型的任务诸如渲染、科学计算、模拟现实等。"

#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml74(para)
msgid ""
"Data compliancecertain types of information needs to reside in certain "
"locations due to regular issuesand more important cannot reside in other "
"locations for the same reason."
msgstr "数据合规性-基于常规某些类型的数据需要放在某些位置，同样的原因，不能放在其他位置更加的重要。"

#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml91(para)
msgid ""
"The following are some technical requirements that need to be incorporated "
"into the architecture design."
msgstr "下列一些技术需求需要被设计架构时纳入。"

#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml98(para)
msgid ""
"If a primary technical concern is for the environment to deliver high "
"performance capability, then a compute-focused design is an obvious choice "
"because it is specifically designed to host compute-intensive workloads."
msgstr "如果云环境的主要技术是用于交付高性能计算的能力，那么一个计算型云的设计显然会被选择，因为它本身就被设计为主机计算密集型。"

#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml106(term)
msgid "Workload persistence"
msgstr "持久负载"

#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml108(para)
msgid ""
"Workloads can be either short-lived or long running. Short-lived workloads "
"might include continuous integration and continuous deployment (CI-CD) jobs,"
" where large numbers of compute instances are created simultaneously to "
"perform a set of compute-intensive tasks. The results or artifacts are then "
"copied from the instance into long-term storage before the instance is "
"destroyed. Long-running workloads, like a Hadoop or high-performance "
"computing (HPC) cluster, typically ingest large data sets, perform the "
"computational work on those data sets, then push the results into long term "
"storage. Unlike short-lived workloads, when the computational work is "
"completed, they will remain idle until the next job is pushed to them. Long-"
"running workloads are often larger and more complex, so the effort of "
"building them is mitigated by keeping them active between jobs. Another "
"example of long running workloads is legacy applications that typically are "
"persistent over time."
msgstr "负载可以是短时间的，也可以是长久运行的。短时间的负载比如持续集成和持续部署(CI-CD)任务，大量的计算实例被并行创建以处理计算密集型任务。结果会在实例销毁之前被拷贝出来存放到可长时间保存的存储中。长久运行的负载，例如Hadoop或高性能计算(HPC)集群，通常摄取大量的数据集，然后计算处理这些数据集，最后将结果存放到长时间保存的存储中。和短时间负载不一样的是，当计算工作结束时，它会保持空闲知道下一个任务推给它们。长时间运行的负载通常规模大而且复杂性高，所以尽力保持它们在任务之间的活跃，可以缓减构建的压力。另外一个长时间负载的例子是旧的应用通常都会持续一段时间。"

#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml133(para)
msgid ""
"Workloads targeted for a compute-focused OpenStack cloud generally do not "
"require any persistent block storage (although some usages of Hadoop with "
"HDFS may dictate the use of persistent block storage). A shared filesystem "
"or object store will maintain the initial data set(s) and serve as the "
"destination for saving the computational results. By avoiding the input-"
"output (IO) overhead, workload performance is significantly enhanced. "
"Depending on the size of the data set(s), it might be necessary to scale the"
" object store or shared file system to match the storage demand."
msgstr "目标为负载的计算型OpenStack云通常不需要任何的持久性块存储(虽然一些使用Hadoop的应用，用HDFS来作为持久性的块存储)。一个共享文件系统或对象存储就可以担当起初始化数据集(s)以及服务于保存计算结果。 通过避免输入 - 输出(IO)的开销，工作负载性能被显著增强。取决于数据集()的大小，也许扩展对象存储或共享文件系统以满足存储需求是必要的。"

#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml148(term)
msgid "User interface"
msgstr "用户界面"

#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml150(para)
msgid ""
"Like any other cloud architecture, a compute-focused OpenStack cloud "
"requires an on-demand and self-service user interface. End users must be "
"able to provision computing power, storage, networks and software simply and"
" flexibly. This includes scaling the infrastructure up to a substantial "
"level without disrupting host operations."
msgstr "和其他类型的云架构一样，计算型OpenStack云需要按需服务和自助服务的用户界面。最终用户必须可以简单而又灵活的部署计算资源的诸如电力、存储、网络和软件。这也包括扩展基础设施到大规模级别而无须中断主机的操作。"

#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml162(para)
msgid ""
"Security is going to be highly dependent on the business requirements. For "
"example, a computationally intense drug discovery application will obviously"
" have much higher security requirements than a cloud that is designed for "
"processing market data for a retailer. As a general start, the security "
"recommendations and guidelines provided in the OpenStack Security Guide are "
"applicable."
msgstr "安全在业务的需求下将成为高度依赖的服务。举例，一个需要密集计算的药物发现应用相比于为处理市场零售数据所设计的云有着更高的安全需求。作为云的一般入门，关于安全建议和向导，我们在《OpenStack安全指南》这本书有更加详尽的描述。"

#: ./doc/arch-design/compute_focus/section_user_requirements_compute_focus.xml176(para)
msgid ""
"The compute intensive cloud from the operational perspective is similar to "
"the requirements for the general-purpose cloud. More details on operational "
"requirements can be found in the general-purpose design section."
msgstr "从运营的角度讲计算型云和通用型有着同样的需求，更多关于运营的需求可在通用型设计的章节中找到。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml9(para)
msgid "The hardware selection covers three areas:"
msgstr "硬件选择涵盖三个方面："

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml21(para)
msgid ""
"An OpenStack cloud with extreme demands on processor and memory resources is"
" considered to be compute-focused, and requires hardware that can handle "
"these demands. This can mean choosing hardware which might not perform as "
"well on storage or network capabilities. In a compute- focused architecture,"
" storage and networking are required while loading a data set into the "
"computational cluster, but are not otherwise in heavy demand."
msgstr "对于计算型OpenStack云的硬件选择来说，必须能够响应计算密集的负载。计算型的定义就是对处理器和内存资源的极限需求。计算型OpenStack架构设计的硬件选择必须能够体现出处理计算密集的负载能力，要知道它不是存储密集也不是重型的网络负载。也许在载入数据到计算集群时会对网络和存储产生很重的负载，但是这不能当作存储型或网络型，它们有另外的考虑。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml30(para)
msgid "Compute (server) hardware must be evaluated against four dimensions:"
msgstr "计算(服务器)硬件需要从以下四个不同的方面进行评估："

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml37(para)
msgid ""
"A measure of how many servers can fit into a given amount of physical space,"
" such as a rack unit (U)."
msgstr "一个衡量就是在给定的物理空间内可以放多少台服务器，例如机架式单元(U)。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml63(para)
msgid ""
"The dimensions need to be weighed against each other to determine the best "
"design for the desired purpose. For example, increasing server density means"
" sacrificing resource capacity or expandability. Increasing resource "
"capacity and expandability can increase cost but decreases server density. "
"Decreasing cost can mean decreasing supportability, server density, resource"
" capacity, and expandability."
msgstr "为达到期望的目的而决定最佳设计需要对一些因素作出取舍和平衡。举例来说，增加服务器密度意味着牺牲资源的容量或扩展性。增加资源容量或扩展性又增加了开销但是降低了服务器密度。减少开销又意味着减低支持力度，服务器密度，资源容量和扩展性。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml69(para)
msgid ""
"A compute-focused cloud should have an emphasis on server hardware that can "
"offer more CPU sockets, more CPU cores, and more RAM. Network connectivity "
"and storage capacity are less critical. The hardware will need to be "
"configured to provide enough network connectivity and storage capacity to "
"meet minimum user requirements, but they are not the primary consideration."
msgstr "为一个计算型云选择硬件,重点要看服务器硬件是否可以提供更多的CPU插槽，更多的CPU核的数量，以及更多的内存，至于网络连接和存储容量就显得次要一些。硬件需要的配置以提供足够的网络连接和存储容量满足用户的最低需求即可，但是这不是主要需要考虑的。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml75(para)
msgid ""
"Some server hardware form factors are better suited than others, as CPU and "
"RAM capacity have the highest priority. Some considerations for selecting "
"hardware:"
msgstr "一些服务器硬件的因素更加适合其他类型的，但是CPU和内存的能力拥有最高的优先级。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml80(para)
msgid ""
"Most blade servers can support dual-socket multi-core CPUs. To avoid this "
"CPU limit, select \"full width\" or \"full height\" blades, however this "
"will also decrease the server density. For example, high density blade "
"servers (like HP BladeSystem or Dell PowerEdge M1000e) which support up to "
"16 servers in only ten rack units. Using half-height blades is twice as "
"dense as using full-height blades, which results in only eight servers per "
"ten rack units."
msgstr "大多数的刀片服务器都支持双插槽、多核的CPU的。要避免去选择“全宽”或“全高”的刀片，它们会损失服务器密度。举个例子，使用高密度的刀片服务器，如(HP BladeSystem和Dell PowerEgde M1000e),它们都使用半高的刀片，可支持16台服务器，且仅占用10个机柜单元，它相比于全高的刀片有效的减低了50%的密度，因为全高的刀片在每10个机柜单元仅可以放置8台服务器。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml89(para)
msgid ""
"1U rack-mounted servers (servers that occupy only a single rack unit) may be"
" able to offer greater server density than a blade server solution. It is "
"possible to place forty 1U servers in a rack, providing space for the top of"
" rack (ToR) switches, compared to 32 full width blade servers. However, as "
"of the Icehouse release, 1U servers from the major vendors are limited to "
"dual-socket, multi-core CPU configurations. To obtain greater than dual-"
"socket support in a 1U rack-mount form factor, you will need to buy systems "
"from original design (ODMs) or second-tier manufacturers."
msgstr "1U机架式服务器(服务器仅占用一个机架单元)要比刀片服务解决方案提供更大的服务器密度。它可以在一个机柜中安放40台服务器，相当于在一个机柜中置放32台“全宽”或“全高”的刀片服务器加上顶部空间(ToR)的交换机。但是会有双CPU插槽、多核CPU配置的限制，记住这点，就在IceHouse版本发布时，无论是HP，IBM还是Dell都无法提供多于2个CPU插槽的1U机架式服务器。要想使1U的服务器支持超过2个插槽，用户需要通过原始设计制造商(ODM)或二线制造商来购买。这会给企业带来额外的问题：重新评估供应商的政策，支持的力度是否够，非一线供应商的硬件质量保证等。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml100(para)
msgid ""
"2U rack-mounted servers provide quad-socket, multi-core CPU support, but "
"with a corresponding decrease in server density (half the density offered by"
" 1U rack-mounted servers)."
msgstr "2U机架式服务器提供四插槽、多核CPU的支持，但是它相应的降低了服务器密度(相当于1U机架式服务器的一半)。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml105(para)
msgid ""
"Larger rack-mounted servers, such as 4U servers, often provide even greater "
"CPU capacity, commonly supporting four or even eight CPU sockets. These "
"servers have greater expandability, but such servers have much lower server "
"density and are often more expensive."
msgstr "大型机架式服务器，比如4U服务器，可提供更为强大的CPU容量。通常支持4个甚至8个CPU插槽。拥有很强的扩展性，但是这些服务器会带来低密度，以及更加昂贵的开销。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml111(para)
msgid ""
"\"Sled servers\" (rack-mounted servers that support multiple independent "
"servers in a single 2U or 3U enclosure) deliver increased density as "
"compared to typical 1U or 2U rack-mounted servers. For example, many sled "
"servers offer four independent dual-socket nodes in 2U for a total of eight "
"CPU sockets in 2U. However, the dual-socket limitation on individual nodes "
"may not be sufficient to offset their additional cost and configuration "
"complexity."
msgstr "“雪撬服务器”(支持在单个2U或3U的空间放置多个独立的服务器)增加的密度超过典型的1U-2U机架服务器，举例来说，很多雪撬服务器提供在2U的空间置放4个独立的双插槽CPU,即2U服务器拥有8颗CPU，尽管如此，分离节点的双插槽限制不足以抵消它们额外带来的开销和配置的复杂性。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml120(para)
msgid ""
"Consider these facts when choosing server hardware for a compute- focused "
"OpenStack design architecture:"
msgstr "下列因素会严重影响到计算型OpenStack架构设计的服务器硬件选择："

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml126(para)
msgid ""
"In a compute-focused architecture, instance density is lower, which means "
"CPU and RAM over-subscription ratios are also lower. More hosts will be "
"required to support the anticipated scale due to instance density being "
"lower, especially if the design uses dual-socket hardware designs."
msgstr "在此架构中实例密度要被考虑为低，因此CPU和内存的超额认购比例也要低。为了支持实例低密度的预期扩展需要更多的主机，尤>其是设计中使用了双插槽的硬件。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml136(para)
msgid ""
"Another option to address the higher host count that might be needed with "
"dual socket designs is to use a quad socket platform. Taking this approach "
"will decrease host density, which increases rack count. This configuration "
"may affect the network requirements, the number of power connections, and "
"possibly impact the cooling requirements."
msgstr "解决高主机计数的另外的办法是使用四路平台。这样的话降低了主机密度，也增加了机架数，这样的配置会影响到网络需求，电源连接数量，还有可能影响的制冷需求。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml145(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml275(term)
msgid "Power and cooling density"
msgstr "电源和制冷密度"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml147(para)
msgid ""
"The power and cooling density requirements might be lower than with blade, "
"sled, or 1U server designs because of lower host density (by using 2U, 3U or"
" even 4U server designs). For data centers with older infrastructure, this "
"may be a desirable feature."
msgstr "电力和制冷的密度需求要低于刀片、雪撬或1U服务器，因为(使用2U,3U甚至4U服务器)拥有更低的主机密度。对于数据中心内有旧的基础设施，这是非常有用的特性。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml155(para)
msgid ""
"Compute-focused OpenStack design architecture server hardware selection "
"results in a \"scale up\" versus \"scale out\" decision. Selecting a better "
"solution, smaller number of larger hosts, or a larger number of smaller "
"hosts depends on a combination of factors: cost, power, cooling, physical "
"rack and floor space, support-warranty, and manageability."
msgstr "计算型OpenStack架构设计的服务器硬件选择只有两种结果可决定：纵向扩展抑或横向扩展。在少而大的服务器主机和多而小的服务器主机选择更好的解决方案，取决于多种因素：预算、电力、制冷、物理机架和地板的空间、售后服务力度、以及可管理性。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml162(title)
msgid "Storage hardware selection"
msgstr "存储硬件选择"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml163(para)
msgid ""
"For a compute-focused OpenStack design architecture, the selection of "
"storage hardware is not critical as it is not primary criteria, however it "
"is still important. There are a number of different factors that a cloud "
"architect must consider:"
msgstr "对于计算型OpenStack架构设计来说，选择存储硬件不是关键，因为它并非主要标准，虽然如此，但还是比较重要的。云架构师必须考虑如下几种不同的因素："

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml171(para)
msgid ""
"The overall cost of the solution will play a major role in what storage "
"architecture (and resulting storage hardware) is selected."
msgstr "在解决方案的整个开销中，扮演主要角色的是选择采用什么样的存储架构(及存储硬件)。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml179(para)
msgid ""
"The performance of the solution is also a big role and can be measured by "
"observing the latency of storage I-O requests. In a compute-focused "
"OpenStack cloud, storage latency can be a major consideration. In some "
"compute-intensive workloads, minimizing the delays that the CPU experiences "
"while fetching data from the storage can have a significant impact on the "
"overall performance of the application."
msgstr "性能的解决方案也是一重量级的角色，可以通过存储I-O的延迟需求来测量。在计算型OpenStack云，存储延迟是个主要考虑的对象。在一些计算密集型负载中，从存储中获取数据时的最小延迟CPU都会影响到应用的整个性能。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml191(para)
msgid ""
"This section will refer to the term \"scalability\" to refer to how well the"
" storage solution performs as it is expanded up to its maximum size. A "
"storage solution that performs well in small configurations but has "
"degrading performance as it expands would not be considered scalable. On the"
" other hand, a solution that continues to perform well at maximum expansion "
"would be considered scalable."
msgstr "此节参考术语\"扩展性“，来解释存储解决方案的表现可扩展到最大规模是怎么个好法。一个存储解决方案在小型配置时表现良好，但是在规模扩展的过程中性能降低，这就不是好的扩展性，也不会被考虑。换句话说，一个解决方案只有在规模扩展最大性能没有任何的降低才是好的扩展性。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml203(para)
msgid ""
"Expandability refers to the overall ability of the solution to grow. A "
"storage solution that expands to 50 PB is considered more expandable than a "
"solution that only scales to 10PB. Note that this metric is related to, but "
"different from, scalability, which is a measure of the solution's "
"performance as it expands."
msgstr "规模扩展性是指在整个解决方案的扩张的整体能力。一个存储解决方案可以扩展到50PB，一定比仅能扩展到10PB的规模扩展性强，也会更加倾向于前者。记住一点，规模扩展性和通常所说的扩展性有关系，但是不一样，扩展性更加强调的是在规模扩展的过程中表现出来的性能衡量。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml212(para)
msgid ""
"For a compute-focused OpenStack cloud, latency of storage is a major "
"consideration. Using solid-state disks (SSDs) to minimize latency for "
"instance storage and reduce CPU delays caused by waiting for the storage "
"will increase performance. Consider using RAID controller cards in compute "
"hosts to improve the performance of the underlying disk subsystem."
msgstr "对于计算型OpenStack云来说，存储的延迟是主要应该考虑的。使用固态硬盘(SSD)以使实例存储延迟最小以及减少由于等待存储产生的CPU延迟，可大大提升性能。考虑让计算主机的磁盘子系统使用RAID控制卡对改善性能也大有帮助。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml218(para)
msgid ""
"The selection of storage architecture, and the corresponding storage "
"hardware (if there is the option), is determined by evaluating possible "
"solutions against the key factors listed above. This will determine if a "
"scale-out solution (such as Ceph, GlusterFS, or similar) should be used, or "
"if a single, highly expandable and scalable centralized storage array would "
"be a better choice. If a centralized storage array is the right fit for the "
"requirements, the hardware will be determined by the array vendor. It is "
"also possible to build a storage array using commodity hardware with Open "
"Source software, but there needs to be access to people with expertise to "
"build such a system. Conversely, a scale-out storage solution that uses "
"direct-attached storage (DAS) in the servers may be an appropriate choice. "
"If so, then the server hardware needs to be configured to support the "
"storage solution."
msgstr "存储架构的选择，以及存储硬件的选择(如果可以的话)，上面列出的几个因素是相互有冲突的，需评估决定。如果是横向扩展解决方案的选择诸如(Ceph，GlusterFS，或类似的),如果是单一的，高扩展性的，那么选择中心化的存储阵列就没错。如果中心存储阵列能够满足需求，那么硬件的决定就是如何选择阵列供应商的事情了。使用商业硬件和开源软件来构建存储阵列也是完全可能的，只是需要构建这样的系统需要专业的人员罢了。反过来说，一个横向扩展的存储解决方案使用直接挂接存储(DAS)给服务器也许是个恰当的选择。如果是这样的话，服务器硬件就需要配置以支持此种存储解决方案。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml232(para)
msgid ""
"The following lists some of the potential impacts that may affect a "
"particular storage architecture, and the corresponding storage hardware, of "
"a compute-focused OpenStack cloud:"
msgstr "下面列出在一个计算型OpenStack云中可能影响到特定的存储架构及其对应的存储硬件的因素："

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml239(para)
msgid ""
"Based on the storage solution selected, ensure the connectivity matches the "
"storage solution requirements. If a centralized storage array is selected, "
"it is important to determine how the hypervisors will connect to the storage"
" array. Connectivity could affect latency and thus performance, so check "
"that the network characteristics will minimize latency to boost the overall "
"performance of the design."
msgstr "根据所选择的存储解决方案，要确保它的连接和存储解决方案的需求是匹配的。如果是选择了中心化的存储阵列，决定有多少台hypervisor会连接到此阵列中是很重要的。连接会影响到延迟以及它们的性能，所以监测网络因素以达到最小延迟，提升整体的性能。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml249(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml109(term)
msgid "Latency"
msgstr "延迟"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml251(para)
msgid ""
"Determine if the use case will have consistent or highly variable latency."
msgstr "确定使用场景是否有固定的还是很容易变化的延迟。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml256(term)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml116(term)
msgid "Throughput"
msgstr "吞吐量"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml258(para)
msgid ""
"To improve overall performance, make sure that the storage solution "
"throughout is optimized. While it is not likely that a compute-focused cloud"
" will have major data I-O to and from storage, this is an important factor "
"to consider."
msgstr "为了改善整体的性能，要确保存储解决方案是整个被优化过的。虽然从一个计算型云的角度讲不太可能有从存储过来的重型数据，考虑到这是一个重要的因素就够了。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml265(term)
msgid "Server Hardware"
msgstr "服务器硬件"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml267(para)
msgid ""
"If the solution uses DAS, this impacts, and is not limited to, the server "
"hardware choice that will ripple into host density, instance density, power "
"density, OS-hypervisor, and management tools."
msgstr "如果解决方案中使用了DAS，这会影响到但不限于，服务器硬件的选择会波及到主机密度、实例密度、电力密度、操作系统-hypervisor、以及管理工具。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml274(para)
msgid ""
"Where instances need to be made highly available, or they need to be capable"
" of migration between hosts, use of a shared storage file-system to store "
"instance ephemeral data should be employed to ensure that compute services "
"can run uninterrupted in the event of a node failure."
msgstr "当实例有高可用的需求时，或者实例需要拥有在主机间迁移的能力，使用共享存储或共享文件系统存放实例历史数据，确保计算服务在节点宕机的情况下不会中断。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml295(para)
msgid ""
"The network design will be affected by the physical space that is required "
"to provide the requisite port count. A switch that can provide 48 10 GbE "
"ports in 1U has a much higher port density than a switch that provides 24 10"
" GbE ports in 2U. A higher port density is preferred, as it leaves more rack"
" space for compute or storage components that might be required by the "
"design. This also leads into concerns about fault domains and power density "
"that must also be considered. Higher density switches are more expensive and"
" should also be considered, as it is important not to over design the "
"network if it is not required."
msgstr "网络的设计会受到物理空间的影响，需要提供足够的端口数。一个占用1U机柜空间的可提供48个 10GbE端口的交换机，显而易见的要比占用2U机柜空间的仅提供24个 10GbE端口的交换机有着更高的端口密度。高端口密度是首先选择的，因为其可以为计算和存储省下机柜空间。这也会引起人们的思考，容错的情况呢？电力密度？高密度的交换机更加的昂贵，也应该被考虑使用，但是没有必要覆盖设计中所有的网络，要视实际情况而定。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml310(para)
msgid ""
"The networking hardware must support the proposed network speed, for "
"example: 1 GbE, 10 GbE, or 40 GbE (or even 100 GbE)."
msgstr "网络硬件必须支持建议的网速： 1 GbE, 10 GbE, 或 40 GbE (甚至是 100 GbE)."

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml318(para)
msgid ""
"The level of network hardware redundancy required is influenced by the user "
"requirements for high availability and cost considerations. Network "
"redundancy can be achieved by adding redundant power supplies or paired "
"switches. If this is a requirement, the hardware will need to support this "
"configuration. User requirements will determine if a completely redundant "
"network infrastructure is required."
msgstr "网络硬件冗余级别需求会被用户对高可用和开销的考虑所影响。网络冗余可以是增加双电力供应也可以是结对的交换机。如果这是必须的，那么对应的服务器硬件就需要配置以支持冗余的情况。用户的需求也是决定是否采用全冗余网络基础设施的关键。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml330(para)
msgid ""
"Ensure that the physical data center provides the necessary power for the "
"selected network hardware. This is not an issue for top of rack (ToR) "
"switches, but may be an issue for spine switches in a leaf and spine fabric,"
" or end of row (EoR) switches."
msgstr "确保物理数据中心为所选择的网络硬件提供了必要的电力。对于机柜顶端型(ToR)交换机没有什么影响，但是spine交换机的叶和fabric以及排尾(EoR)交换机就可能发生问题，假如电力不足的话。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml338(para)
msgid ""
"It is important to first understand additional factors as well as the use "
"case because these additional factors heavily influence the cloud network "
"architecture. Once these key considerations have been decided, the proper "
"network can be designed to best serve the workloads being placed in the "
"cloud."
msgstr "首先了解附加因素和用户是非常重要的，因为这些附加因素会严重影响到云的网络架构。一旦这些关键因素已经决定，适当的网络可以被设计的更好，以满足云中的工作负载。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml343(para)
msgid ""
"We recommend designing the network architecture using a scalable network "
"model that makes it easy to add capacity and bandwidth. A good example of "
"such a model is the leaf-spline model. In this type of network design, it is"
" possible to easily add additional bandwidth as well as scale out to "
"additional racks of gear. It is important to select network hardware that "
"will support the required port count, port speed and port density while also"
" allowing for future growth as workload demands increase. It is also "
"important to evaluate where in the network architecture it is valuable to "
"provide redundancy. Increased network availability and redundancy comes at a"
" cost, therefore we recommend to weigh the cost versus the benefit gained "
"from utilizing and deploying redundant network switches and using bonded "
"interfaces at the host level."
msgstr "我们建议设计网络架构时使用扩展性网络模式，让增加容量和带宽变得更加容易。一个较好的例子是使用leaf-spline模式，在此类型网络设计中，它可轻松增加额外的带宽以及横向的扩展。选择网络硬件非常重要，是否能满足端口数的需求？端口速度？以及端口密度。评估网络架构是否值得提供冗余也很重要，毕竟增加网络的可用性和冗余是要花钱的，因此，我们建议用户作出取舍，一边是钱，另一边是部署冗余的网络交换机以及主机级别的网卡bond。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml359(para)
msgid ""
"Selecting software to be included in a compute-focused OpenStack "
"architecture design must include three main areas:"
msgstr "对于计算型OpenStack云架构设计的软件选择必须包括以下三类："

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml372(para)
msgid ""
"Design decisions made in each of these areas impact the rest of the "
"OpenStack architecture design."
msgstr "决定了上述其中的任何一项，都要影响到其余两个的架构设计。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml377(para)
msgid ""
"The selection of operating system (OS) and hypervisor has a significant "
"impact on the end point design. Selecting a particular operating system and "
"hypervisor could affect server hardware selection. For example, a selected "
"combination needs to be supported on the selected hardware. Ensuring the "
"storage hardware selection and topology supports the selected operating "
"system and hypervisor combination should also be considered. Additionally, "
"make sure that the networking hardware selection and topology will work with"
" the chosen operating system and hypervisor combination. For example, if the"
" design uses Link Aggregation Control Protocol (LACP), the hypervisor needs "
"to support it."
msgstr "操作系统(OS)和hypervisor对于整个设计有着深刻的影响。选择一个特定的操作系统和hypervisor能够直接影响到服务器硬件的选择。确保存储硬件和拓扑支持选择好的操作系统和Hypervisor组合。也得确保网络硬件的选择和拓扑可在选定的操作系统和Hypervisor组合下正常工作。例如,如果设计中使用了链路聚合控制协议(LACP)的话,操作系统和hypervisor都需要支持它才可正常工作。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml393(para)
msgid ""
"Selecting a commercially supported hypervisor such as Microsoft Hyper-V will"
" result in a different cost model rather than choosing a community-supported"
" open source hypervisor like Kinstance or Xen. Even within the ranks of open"
" source solutions, choosing Ubuntu over Red Hat (or vice versa) will have an"
" impact on cost due to support contracts. On the other hand, business or "
"application requirements might dictate a specific or commercially supported "
"hypervisor."
msgstr "选择商业支持的hypervisor如微软的Hyper-V，和选择社区支持的开源hypervisor如kinstance或Xen，在开销模式上是完全不同的。甚至在开源解决方案也表现不同，如选择Ubuntu而不是RedHat(或类似)在支持上有着不同的开销。换句话说，业务和应用的需求主宰着选用特殊的或商业支持的hypervisor。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml406(para)
msgid ""
"Depending on the selected hypervisor, the staff should have the appropriate "
"training and knowledge to support the selected OS and hypervisor "
"combination. If they do not, training will need to be provided which could "
"have a cost impact on the design."
msgstr "取决于所选择的hypervisor,运维人员需要经过适当的培训和掌握相关的知识才能支持所选择的操作系统和Hypervisor组合。如果运维人员没有经过培训以及相关知识的话，那么就需要提供给他们培训，这在设计中是需要额外的开销的。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml427(para)
msgid ""
"Ensure that selected OS and hypervisor combinations meet the appropriate "
"scale and performance requirements. The chosen architecture will need to "
"meet the targeted instance-host ratios with the selected OS-hypervisor "
"combination."
msgstr "确保所选择的操作系统和hypervisor组合能够满足扩展和性能的需求。所选择的架构需要满足目标实例-主机的比例。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml437(para)
msgid ""
"Ensure that the design can accommodate the regular periodic installation of "
"application security patches while maintaining the required workloads. The "
"frequency of security patches for the proposed OS-hypervisor combination "
"will have an impact on performance and the patch installation process could "
"affect maintenance windows."
msgstr "确保设计能够在维护负载需求时能够容纳正常的所安装的应用的安全补丁。为操作系统-hypervisor组合打安全补丁的频率会影响>到性能，而且补丁的安装流程也会影响到维护工作。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml448(para)
msgid ""
"Determine what features of OpenStack are required. This will often determine"
" the selection of the OS-hypervisor combination. Certain features are only "
"available with specific OSs or hypervisors. For example, if certain features"
" are not available, the design might need to be modified to meet the user "
"requirements."
msgstr "决定什么特性是OpenStack所需要的。这通常是由所选择的操作系统-hypervisor组合来决定的。一些特性仅在某些特定的操作系统或hypervisor中存在。例如，如果某个特性无法实现，设计就得更改，因为用户需求最大。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml459(para)
msgid ""
"Consideration should be given to the ability of the selected OS-hypervisor "
"combination to interoperate or co-exist with other OS-hypervisors, or other "
"software solutions in the overall design (if required). Operational and "
"troubleshooting tools for one OS-hypervisor combination may differ from the "
"tools used for another OS-hypervisor combination and, as a result, the "
"design will need to address if the two sets of tools need to interoperate."
msgstr "在整个设计中(若有必要)考虑此操作系统和Hypervisor组合和另外的操作系统和hypervisor怎么互动，甚至包括和其它的软件。操作某一操作系统-hypervisor组合的故障排除工具，和操作其他的操作系统-hypervisor组合也许根本就不一样，那结果就是，设计时就需要交付能够使这两者工具集都能工作的工具。\""

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml473(para)
msgid ""
"The selection of which OpenStack components will actually be included in the"
" design and deployed has significant impact. There are certain components "
"that will always be present, (Compute and Image Service, for example) yet "
"there are other services that might not need to be present. For example, a "
"certain design may not require the Orchestration module. Omitting Heat would"
" not typically have a significant impact on the overall design. However, if "
"the architecture uses a replacement for OpenStack Object Storage for its "
"storage component, this could potentially have significant impacts on the "
"rest of the design."
msgstr "在设计和部署中选择包含什么OpenStack组件是着显著的影响。有一些组件是必选的(例如计算和镜像服务)，还有一些组件是可选的，举例来说，一些设计中不需要Orchestration模块，忽略掉Heat组件对整个系统没啥影响。还有其他情况，如架构中使用的存储组件不是OpenStack 对象存储，这就会对设计中的其它组件有着很大的影响。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml482(para)
msgid ""
"For a compute-focused OpenStack design architecture, the following "
"components would be used:"
msgstr "对于计算型OpenStack设计体系架构来说，下面组件需要使用："

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml486(para)
msgid "Identity (keystone)"
msgstr "认证 (keystone)"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml489(para)
msgid "Dashboard (horizon)"
msgstr "仪表盘 (horizon)"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml492(para)
msgid "Compute (nova)"
msgstr "计算 (nova)"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml495(para)
msgid "Object Storage (swift, ceph or a commercial solution)"
msgstr "对象存储 (swift, ceph or a commercial solution)"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml498(para)
msgid "Image (glance)"
msgstr "镜像 (glance)"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml501(para)
msgid "Networking (neutron)"
msgstr "网络 (neutron)"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml504(para)
msgid "Orchestration (heat)"
msgstr "编排 (heat)"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml507(para)
msgid ""
"OpenStack Block Storage would potentially not be incorporated into a "
"compute-focused design due to persistent block storage not being a "
"significant requirement for the types of workloads that would be deployed "
"onto instances running in a compute-focused cloud. However, there may be "
"some situations where the need for performance dictates that a block storage"
" component be used to improve data I-O."
msgstr "OpenStack块存储可能不被纳入计算型设计中，由于持久性块存储并非在此类型负载中有显著的需求，此类型是指在计算型云中运行的实例。尽管如此，有一些情况需要突出性能的表现，那么块存储组件的使用也许可以改善数据I-O。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml513(para)
msgid ""
"The exclusion of certain OpenStack components might also limit or constrain "
"the functionality of other components. If a design opts to include the "
"Orchestration module but excludes the Telemetry module, then the design will"
" not be able to take advantage of Orchestration's auto scaling functionality"
" (which relies on information from Telemetry). This is due to the fact that "
"you can use Orchestration to spin up a large number of instances to perform "
"the compute-intensive processing. This includes Orchestration in a compute-"
"focused architecture design, which is strongly recommended."
msgstr "排除一些特定的OpenStack组件会让其他组件的功能受到限制。如果在一个设计中有Orchestration模块但是没有包括Telemetry模块，那么此设计就无法使用Orchestration带来自动伸缩功能的优点(Orchestration需要Telemetery提供监测数据)。用户使用Orchestration在计算密集型处理任务时可自动启动大量的实例，因此强烈建议在计算型架构设计中使用Orchestration。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml525(para)
msgid ""
"While OpenStack is a fairly complete collection of software projects for "
"building a platform for cloud services, there are invariably additional "
"pieces of software that might need to be added to any given OpenStack "
"design."
msgstr "话说OpenStack是一个为构建云服务平台的软件项目，完全公平的收集各类软件，所以有大家都在用的其它软件包，可以在给定的OpenStack设计中按需添加。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml531(para)
msgid ""
"OpenStack Networking provides a wide variety of networking services for "
"instances. There are many additional networking software packages that might"
" be useful to manage the OpenStack components themselves. Some examples "
"include software to provide load balancing, network redundancy protocols, "
"and routing daemons. Some of these software packages are described in more "
"detail in the <citetitle>OpenStack High Availability Guide</citetitle> "
"(<link href=\"http://docs.openstack.org/high-availability-"
"guide/content\">http://docs.openstack.org/high-availability-"
"guide/content</link>)."
msgstr "OpenStack网络为实例提供各种各样的网络服务。另外有许多网络软件包用于管理OpenStack组件自身。这里举一些例子，可提供负载均衡，网络冗余协议或路由守护进程，关于这些软件包更加详细的描述细节都在<citetitle>OpenStack 高可用指南</citetitle> (<link href=\"http://docs.openstack.org/high-availability-guide/content\">http://docs.openstack.org/high-availability-guide/content</link>)中找到。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml540(para)
msgid ""
"For a compute-focused OpenStack cloud, the OpenStack infrastructure "
"components will need to be highly available. If the design does not include "
"hardware load balancing, networking software packages like HAProxy will need"
" to be included."
msgstr "对于计算型OpenStack云来说，OpenStack基础设施组件需要高可用。如果在设计中没有考虑硬件的负载均衡，那么就得考虑网络软件包，如HAProxy。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml547(para)
msgid ""
"The selected supplemental software solution impacts and affects the overall "
"OpenStack cloud design. This includes software for providing clustering, "
"logging, monitoring and alerting."
msgstr "所选择的支撑软件解决方案会影响到整个OpenStack云的设计，它们包括能够提供集群、日志、监测以及预警的软件。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml550(para)
msgid ""
"Inclusion of clustering Software, such as Corosync or Pacemaker, is "
"determined primarily by the availability design requirements. Therefore, the"
" impact of including (or not including) these software packages is primarily"
" determined by the availability of the cloud infrastructure and the "
"complexity of supporting the configuration after it is deployed. The "
"OpenStack High Availability Guide provides more details on the installation "
"and configuration of Corosync and Pacemaker, should these packages need to "
"be included in the design."
msgstr "在集群软件中如 Corosync和Pacemaker在可用性需求中占主流。包含(不包含)这些软件包是主要决定的，要使云基础设施具有高可用的话，当然在部署之后会带来复杂的配置。OpenStack 高可用指南 提供了更加详细的安装和配置Corosync和Pacemaker，所以在设计中这些软件包需要被包含。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml558(para)
msgid ""
"Requirements for logging, monitoring, and alerting are determined by "
"operational considerations. Each of these sub-categories includes a number "
"of various options. For example, in the logging sub-category one might "
"consider Logstash, Splunk, Log Insight, or some other log aggregation-"
"consolidation tool. Logs should be stored in a centralized location to make "
"it easier to perform analytics against the data. Log data analytics engines "
"can also provide automation and issue notification by providing a mechanism "
"to both alert and automatically attempt to remediate some of the more "
"commonly known issues."
msgstr "对日志、监测以及报警的需求是由运维考虑决定的。它们的每个子类别都包含了大量的属性。举例，在日志子类别中，某些情况考虑使用Logstash,Splunk，instanceware Log Insight等，或者其他的日志聚合-合并工具。日志需要存放在中心地带，使分析数据变得更为简单。日志数据分析引擎亦得提供自动化和问题通知，通过提供一致的预警和自动修复某些常见的已知问题。"

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml567(para)
msgid ""
"If any of these software packages are needed, then the design must account "
"for the additional resource consumption (CPU, RAM, storage, and network "
"bandwidth for a log aggregation solution, for example). Some other potential"
" design impacts include:"
msgstr "如果任何这些软件包被需要，那么设计就可以当作额外的资源计入用的到它们的(举例，为日志聚合解决方案所需要的CPU，内存，存储以及网络带宽)。其它一些潜在影响设计的有："

#: ./doc/arch-design/compute_focus/section_architecture_compute_focus.xml585(para)
msgid ""
"A large majority of the OpenStack components require access to back-end "
"database services to store state and configuration information. Selection of"
" an appropriate back-end database that will satisfy the availability and "
"fault tolerance requirements of the OpenStack services is required. "
"OpenStack services support connecting to any database that is supported by "
"the SQLAlchemy Python drivers, however most common database deployments make"
" use of MySQL or some variation of it. We recommend that the database which "
"provides back-end services within a general-purpose cloud, be made highly "
"available using an available technology which can accomplish that goal. Some"
" of the more common software solutions used include Galera, MariaDB and "
"MySQL with multi-master replication."
msgstr "大部分的OpenStack组件都需要访问后端的数据库服务，以存放状态和配置信息。选择一个合适的后端数据库可以满足可用性和容错是OpenStack服务所必须的。OpenStack服务支持连接由SQLAlchemy所支持的任何数据库，尽管如此，绝大多数的数据库部署还是使用MySQL或其变种。我们建议提供后端服务的数据库做到高可用，使用一些可用的技术手段，多数使用的软件解决方案是使用包括Galera,MariaDB>以及多主节点复制的MySQL。"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml233(None)
msgid ""
"@@image: '../figures/Compute_Tech_Bin_Packing_General1.png'; "
"md5=34f2f0b656a66124016d2484fb96068b"
msgstr "@@image: '../figures/Compute_Tech_Bin_Packing_General1.png'; md5=34f2f0b656a66124016d2484fb96068b"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml242(None)
msgid ""
"@@image: '../figures/Compute_Tech_Bin_Packing_CPU_optimized1.png'; "
"md5=45084140c29e59a459d6b0af9b47642a"
msgstr "@@image: '../figures/Compute_Tech_Bin_Packing_CPU_optimized1.png'; md5=45084140c29e59a459d6b0af9b47642a"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml13(para)
msgid ""
"In a compute-focused OpenStack cloud, the type of instance workloads being "
"provisioned heavily influences technical decision making. For example, "
"specific use cases that demand multiple short running jobs present different"
" requirements than those that specify long-running jobs, even though both "
"situations are considered \"compute focused.\""
msgstr "在一个计算型OpenStack云中，已经部署的实例负载类型直接影响到技术的决策。举例，一个要求多个短时间运行的任务和一个要求长时间运行的任务是有着不同的需求的，尽管它们被认为都是“专注于计算“的。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml19(para)
msgid ""
"Public and private clouds require deterministic capacity planning to support"
" elastic growth in order to meet user SLA expectations. Deterministic "
"capacity planning is the path to predicting the effort and expense of making"
" a given process consistently performant. This process is important because,"
" when a service becomes a critical part of a user's infrastructure, the "
"user's fate becomes wedded to the SLAs of the cloud itself. In cloud "
"computing, a service's performance will not be measured by its average speed"
" but rather by the consistency of its speed."
msgstr "无论是公有云还是私有云，都对确定的容量规划有需求，以支持动态的成长，这都是为满足用户预期的服务水平协议。确定容量规划是给定流程保持一贯的高性能的预测和费用的途径。此流程之所以重要是因为，当服务成为用户基础设施的不可或缺的一部分时，衡量一个服务的性能不再是其平均的速度，而是速度的一贯如此。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml29(para)
msgid ""
"There are two aspects of capacity planning to consider: planning the initial"
" deployment footprint, and planning expansion of it to stay ahead of the "
"demands of cloud users."
msgstr "容量规划有两个方面的考虑因素：规划初始部署，规划扩张一定要保持领先用户的需求。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml33(para)
msgid ""
"Planning the initial footprint for an OpenStack deployment is typically done"
" based on existing infrastructure workloads and estimates based on expected "
"uptake."
msgstr "规划OpenStack初始化部署的典型做法是基于现有的基础设施负载和基于预期的占用。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml36(para)
msgid ""
"The starting point is the core count of the cloud. By applying relevant "
"ratios, the user can gather information about:"
msgstr "其出发点是云计算的核心数量。通过相关的比例，用户可以收集有关信息："

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml41(para)
msgid ""
"The number of instances expected to be available concurrently: (overcommit "
"fraction × cores) / virtual cores per instance"
msgstr "期望同时在线的实例数量：(超分配比例 x 核数)/每实例的虚拟核数"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml46(para)
msgid "How much storage is required: flavor disk size × number of instances"
msgstr "需要多大的存储：flavor 磁盘大小 x 实例数"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml50(para)
msgid ""
"These ratios can be used to determine the amount of additional "
"infrastructure needed to support the cloud. For example, consider a "
"situation in which you require 1600 instances, each with 2 vCPU and 50 GB of"
" storage. Assuming the default overcommit rate of 16:1, working out the math"
" provides an equation of:"
msgstr "这些比例可用于计算支撑云需要增加的基础设施量，例如，考虑一个场景是，用户需要1600个实例，每个实例有2 vCPU和50GB存储，假设其使用默认的超分配比例 16:1，结果就可以利用如下数学公司计算出来："

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml58(para)
msgid "1600 = (16 (number of physical cores)) / 2"
msgstr "1600 = (16 x (物理核数)) / 2"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml61(para)
msgid "storage required = 50GB 1600"
msgstr "存储需要 = 50GB x 1600"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml64(para)
msgid ""
"On the surface, the equations reveal the need for 200 physical cores and "
"80TB of storage for /var/lib/nova/instances/. However, it is also important "
"to look at patterns of usage to estimate the load that the API services, "
"database servers, and queue servers are likely to encounter."
msgstr "表面上，公式的计算结果是需要200个物理核和80TB的存储，这些可在路径/var/lib/nova/instances/中找到。尽管如此，另外还得重点看着其他负载的使用量，诸如API服务，数据库服务，队列服务等，它们同样需要被计入总体。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml71(para)
msgid ""
"Consider, for example, the differences between a cloud that supports a "
"managed web-hosting platform with one running integration tests for a "
"development project that creates one instance per code commit. In the "
"former, the heavy work of creating an instance happens only every few "
"months, whereas the latter puts constant heavy load on the cloud controller."
" The average instance lifetime must be considered, as a larger number "
"generally means less load on the cloud controller."
msgstr "举例，想一下下面二者之间的区别，一个是支持web托管平台的管理，另外一个是运行集成测试的，会在每次提交代码就会去创建一个实例。前者创建实例的大量工作仅在隔几个月才会发生，而后者会将大的负载不断的给云控制器。实例的生命周期必须被考虑，也就是说有充足的理由不要给云控制器那么大的工作负载。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml80(para)
msgid ""
"Aside from the creation and termination of instances, the impact of users "
"must be considered when accessing the service, particularly on nova-api and "
"its associated database. Listing instances garners a great deal of "
"information and, given the frequency with which users run this operation, a "
"cloud with a large number of users can increase the load significantly. This"
" can even occur unintentionally. For example, the OpenStack Dashboard "
"instances tab refreshes the list of instances every 30 seconds, so leaving "
"it open in a browser window can cause unexpected load."
msgstr "除了创建和销毁实例之外，用户还需要考虑什么时候访问服务，特别是访问nova-api和其关联的数据库。列出实例亦需要处理大量的信息，以及有那些用户在指定的频率下运行此操作，一个云用户大量的用户会显著的增加负载。有时候，这些都在无意之下就发生了。例如，OpenStaclk GUI界面中的实例列表会在每30秒刷新一次，所以浏览器如果一直保持打开状态，就会产生意料之外的负载。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml90(para)
msgid ""
"Consideration of these factors can help determine how many cloud controller "
"cores are required. A server with 8 CPU cores and 8 GB of RAM server would "
"be sufficient for up to a rack of compute nodes, given the above caveats."
msgstr "考虑这些因素可以帮助决定云控制器需要多少个核。一台拥有8CPU核和8GB内存的服务器，满足于上述的计算节点就绰绰有余。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml94(para)
msgid ""
"Key hardware specifications are also crucial to the performance of user "
"instances. Be sure to consider budget and performance needs, including "
"storage performance (spindles/core), memory availability (RAM/core), network"
" bandwidth (Gbps/core), and overall CPU performance (CPU/core)."
msgstr "关键的硬件规格也是确保用户实例的性能的指标。请确保考虑好预算和性能需求，包括存储性能 (spindles/core), 内存可用性 (RAM/core), 网络带宽 (Gbps/core), 以及整个的CPU性能 (CPU/core)."

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml100(para)
msgid ""
"The cloud resource calculator is a useful tool in examining the impacts of "
"different hardware and instance load outs. It is available at: <link "
"href=\"https://github.com/noslzzp/cloud-resource-calculator/blob/master"
"/cloud-resource-calculator.ods\">https://github.com/noslzzp/cloud-resource-"
"calculator/blob/master/cloud-resource-calculator.ods</link>"
msgstr "云资源计算器是一个很有用的工具，用来考核不同硬件和实例负载的结果。可从下面链接获取：<link href=\"https://github.com/noslzzp/cloud-resource-calculator/blob/master/cloud-resource-calculator.ods\">https://github.com/noslzzp/cloud-resource-calculator/blob/master/cloud-resource-calculator.ods</link>"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml105(title)
msgid "Expansion planning"
msgstr "扩展计划"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml106(para)
msgid ""
"A key challenge faced when planning the expansion of cloud compute services "
"is the elastic nature of cloud infrastructure demands. Previously, new users"
" or customers would be forced to plan for and request the infrastructure "
"they required ahead of time, allowing time for reactive procurement "
"processes. Cloud computing users have come to expect the agility provided by"
" having instant access to new resources as they are required. Consequently, "
"this means planning should be delivered for typical usage, but also more "
"importantly, for sudden bursts in usage."
msgstr "当规划扩展云的计算服务时面临一个关键的挑战，那就是云基础设施要求的弹性。在过去，新的用户或客户被强制计划，而且必须提前提出对基础设施的需求，然后进入采购流程。云计算时代的用户，按照他们所需要的，及时的获得资源。所以，这也意味着规划只能交付典型常规的使用，但是更为重要的是，能够经受的住突然来临的突破性的使用。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml116(para)
msgid ""
"Planning for expansion can be a delicate balancing act. Planning too "
"conservatively can lead to unexpected oversubscription of the cloud and "
"dissatisfied users. Planning for cloud expansion too aggressively can lead "
"to unexpected underutilization of the cloud and funds spent on operating "
"infrastructure that is not being used efficiently."
msgstr "扩展规划是一个颇为微妙的平衡行为。规划过于保守会导致想不到的超额认购，还会导致用户很不满。规划过去激进又会导致没有有效利用云，以及资金花在了一个未被有效使用的运营基础设施上。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml122(para)
msgid ""
"The key is to carefully monitor the spikes and valleys in cloud usage over "
"time. The intent is to measure the consistency with which services can be "
"delivered, not the average speed or capacity of the cloud. Using this "
"information to model performance results in capacity enables users to more "
"accurately determine the current and future capacity of the cloud."
msgstr "关键是认真的监测云运行时的使用量的高峰和低谷。目的是测量那些服务可以被无障碍的交付，并非什么平均速度或云的容量。基于此信息来模拟容量结果，确保用户更加准确的决定当前和未来的云的容量。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml129(title)
msgid "CPU and RAM"
msgstr "CPU 和内存"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml130(para)
msgid ""
"(Adapted from: <link href=\"http://docs.openstack.org/openstack-"
"ops/content/compute_nodes.html#cpu_choice\">http://docs.openstack.org"
"/openstack-ops/content/compute_nodes.html#cpu_choice</link>)"
msgstr "(节选自: <link href=\"http://docs.openstack.org/openstack-ops/content/compute_nodes.html#cpu_choice\">http://docs.openstack.org/openstack-ops/content/compute_nodes.html#cpu_choice</link>)"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml132(para)
msgid ""
"In current generations, CPUs have up to 12 cores. If an Intel CPU supports "
"Hyper-Threading, those 12 cores are doubled to 24 cores. If a server is "
"purchased that supports multiple CPUs, the number of cores is further "
"multiplied. Hyper-Threading is Intel's proprietary simultaneous multi-"
"threading implementation, used to improve parallelization on their CPUs. "
"Consider enabling Hyper-Threading to improve the performance of "
"multithreaded applications."
msgstr "在当前的一代CPU,可以达到12个核，如果是英特尔CPU支持超线程的话，核还翻倍到24个。如果购买的服务器支持多CPU的话，核的数量则是再乘以CPU的个数。超线程技术是英特尔模拟多线程的实现，用于改善CPU的并行处理能力。打开超线程可以改善多线程程序的性能。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml141(para)
msgid ""
"Whether the user should enable Hyper-Threading on a CPU depends upon the use"
" case. For example, disabling Hyper-Threading can be beneficial in intense "
"computing environments. Performance testing conducted by running local "
"workloads with both Hyper-Threading on and off can help determine what is "
"more appropriate in any particular case."
msgstr "用户是否打开CPU的超线程取决于用户实际情况。举例来说，关闭超线程有利于密集型的计算环境。分别在打开和关闭超线程的情况下运行本地负载，对之做性能测试，可以有助于对任何的情况作出更加恰当的决定。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml148(para)
msgid ""
"If the Libvirt/KVM hypervisor driver are the intended use cases, then the "
"CPUs used in the compute nodes must support virtualization by way of the "
"VT-x extensions for Intel chips and AMD-v extensions for AMD chips to "
"provide full performance."
msgstr "如果用例中使用的驱动是 Libvirt/KVM hypervisor的话，计算节点中的CPU必须支持虚拟化才能提供完整的性能表现，在英特尔的CPU芯片中是 VT-x扩展，在AMD的CPU芯片中是AMD-v扩展。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml153(para)
msgid ""
"OpenStack enables the user to overcommit CPU and RAM on compute nodes. This "
"allows an increase in the number of instances running on the cloud at the "
"cost of reducing the performance of the instances. OpenStack Compute uses "
"the following ratios by default:"
msgstr "OpenStack支持在计算节点中使用CPU和内存超分配。这将允许在云中运行更多的实例，可在某种程度上降低成本。OpenStack计算默认使用下面的超分配比例："

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml160(para)
msgid "CPU allocation ratio: 16:1"
msgstr "CPU 超分配比例: 16:1"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml163(para)
msgid "RAM allocation ratio: 1.5:1"
msgstr "RAM 超分配比例: 1.5:1"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml166(para)
msgid ""
"The default CPU allocation ratio of 16:1 means that the scheduler allocates "
"up to 16 virtual cores per physical core. For example, if a physical node "
"has 12 cores, the scheduler sees 192 available virtual cores. With typical "
"flavor definitions of 4 virtual cores per instance, this ratio would provide"
" 48 instances on a physical node."
msgstr "默认的CPU超分配比例是16:1,这意味着调度器可以为每个物理核分配16个虚拟核。举例来说，如果物理节点有12个核，调度器就拥有192个虚拟核。在典型的flavor定义中，每实例4个虚拟核，那么此超分配比例可以在此物理节点上提供48个实例。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml172(para)
msgid ""
"Similarly, the default RAM allocation ratio of 1.5:1 means that the "
"scheduler allocates instances to a physical node as long as the total amount"
" of RAM associated with the instances is less than 1.5 times the amount of "
"RAM available on the physical node."
msgstr "同样的，默认的内存超分配比例是1.5:1，这意味着调度器为实例分配的内存总量要少于物理节点内存的1.5倍。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml177(para)
msgid ""
"For example, if a physical node has 48 GB of RAM, the scheduler allocates "
"instances to that node until the sum of the RAM associated with the "
"instances reaches 72 GB (such as nine instances, in the case where each "
"instance has 8 GB of RAM)."
msgstr "举例来说，如果一台物理节点有48GB的内存，调度器为实例分配的内存总量要少于72GB(如果每个实例分配了8GB内存的话，此节点可建立9个实例)。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml182(para)
msgid ""
"The appropriate CPU and RAM allocation ratio must be selected based on "
"particular use cases."
msgstr "基于特定的用例必须选择合适的CPU和内存分配比例。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml185(title)
msgid "Additional hardware"
msgstr "额外的硬件"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml186(para)
msgid ""
"Certain use cases may benefit from exposure to additional devices on the "
"compute node. Examples might include:"
msgstr "在计算节点中使用一些额外的设备对于某些用例有着显著的益处。举几个常见的例子："

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml190(para)
msgid ""
"High performance computing jobs that benefit from the availability of "
"graphics processing units (GPUs) for general-purpose computing."
msgstr "使用图形处理单元(GPU)，可大大有益于高性能计算任务。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml197(para)
msgid ""
"Cryptographic routines that benefit from the availability of hardware random"
" number generators to avoid entropy starvation."
msgstr "Cryptographic routines 受益于硬件随机数生成器，以避免entropy starvation。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml202(para)
msgid ""
"Database management systems that benefit from the availability of SSDs for "
"ephemeral storage to maximize read/write time when it is required."
msgstr "给临时存储使用SSD硬盘，可大大有益于数据库管理系统，可加速其读写速度。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml207(para)
msgid ""
"Host aggregates are used to group hosts that share similar characteristics, "
"which can include hardware similarities. The addition of specialized "
"hardware to a cloud deployment is likely to add to the cost of each node, so"
" careful consideration must be given to whether all compute nodes, or just a"
" subset which is targetable using flavors, need the additional customization"
" to support the desired workloads."
msgstr "主机聚合是用于一组共享相似特性的主机，其中包括硬件的相似性。在一个云部署中增加特殊的硬件，其实会给每个节点增加开销。所以仔细的考虑好是否给所有的硬件都增加，或者是为那些有需要的创建单独的flavor，使用这些flavor的实例运行在定制过的计算主机中。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml216(para)
msgid ""
"Infrastructure-as-a-Service offerings, including OpenStack, use flavors to "
"provide standardized views of virtual machine resource requirements that "
"simplify the problem of scheduling instances while making the best use of "
"the available physical resources."
msgstr "基础设施即服务所提供的，包括OpenStack，使用类型来提供标准的虚拟机资源需求视图，为分配实例时能够充分利用可用的物理资源提供了简单的解决办法。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml221(para)
msgid ""
"In order to facilitate packing of virtual machines onto physical hosts, the "
"default selection of flavors are constructed so that the second largest "
"flavor is half the size of the largest flavor in every dimension. It has "
"half the vCPUs, half the vRAM, and half the ephemeral disk space. The next "
"largest flavor is half that size again. As a result, packing a server for "
"general purpose computing might look conceptually something like this "
"figure: <placeholder-1/>"
msgstr "为了便利的填充虚拟机到物理主机中，默认的类型选择的结构是，在每一个尺寸中最大的类型比次之的类型大一倍。一倍的vCPU,一倍的内存，以及一倍的临时磁盘空间。次大的再比再次大的大一倍，以此类推。为通用型计算填充一个服务器的概念看起来结果就是类似这个示意图 ：<placeholder-1/> "

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml236(para)
msgid ""
"On the other hand, a CPU optimized packed server might look like the "
"following figure: <placeholder-1/>"
msgstr "另一方面，为CPU优化的填充的服务器看起来如下图所示：<placeholder-1/>"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml245(para)
msgid ""
"These default flavors are well suited to typical load outs for commodity "
"server hardware. To maximize utilization, however, it may be necessary to "
"customize the flavors or create new ones, to better align instance sizes to "
"the available hardware."
msgstr "这些默认的类型非常适合于典型的为商业服务器硬件负载。欲最大化的利用，就有必要定制类型或者干脆建议一个新的，为可用的硬件更好的调整实例的大小。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml250(para)
msgid ""
"Workload characteristics may also influence hardware choices and flavor "
"configuration, particularly where they present different ratios of CPU "
"versus RAM versus HDD requirements."
msgstr "负载的特点常会影响到硬件的选择和实例类型的配置，尤其是他们有不同的CPU、内存、硬盘的比例需求。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml254(para)
msgid ""
"For more information on Flavors refer to: <link "
"href=\"http://docs.openstack.org/openstack-"
"ops/content/flavors.html\">http://docs.openstack.org/openstack-"
"ops/content/flavors.html</link>"
msgstr "对于Flavor的更多信息请参考： <link href=\"http://docs.openstack.org/openstack-ops/content/flavors.html\">http://docs.openstack.org/openstack-ops/content/flavors.html</link>"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml258(para)
msgid ""
"The infrastructure of a cloud should not be shared, so that it is possible "
"for the workloads to consume as many resources as are made available, and "
"accommodations should be made to provide large scale workloads."
msgstr "云的基础设施不应该被共享，因为有可能发生资源不足的情形，所以要保证资源的可用并能用于负载，而且备用于提供有朝一日的大规模扩展。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml262(para)
msgid ""
"The duration of batch processing differs depending on individual workloads "
"that are launched. Time limits range from seconds, minutes to hours, and as "
"a result it is considered difficult to predict when resources will be used, "
"for how long, and even which resources will be used."
msgstr "批处理的持续时间取决于启动的分离任务。时间限制区间可以是秒，可以是分钟，也可以是小时，这样的结果就是增加了考虑的难度，比如预测什么时候资源会被使用？使用多久？那些资源会被用到？"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml269(para)
msgid ""
"The security considerations needed for this scenario are similar to those of"
" the other scenarios discussed in this book."
msgstr "此场景下的安全因素需求和本书中其它场景所探讨的是类似的。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml292(para)
msgid ""
"These security domains can be mapped individually to the installation, or "
"they can also be combined. For example, some deployment topologies combine "
"both guest and data domains onto one physical network, whereas in other "
"cases these networks are physically separated. In each case, the cloud "
"operator should be aware of the appropriate security concerns. Security "
"domains should be mapped out against specific OpenStack deployment topology."
" The domains and their trust requirements depend upon whether the cloud "
"instance is public, private, or hybrid."
msgstr "这些安全域可以映射给分开的OpenStack部署，也可以是合并的。例如，一些部署的拓扑合并了客户机和数据域在同一物理网络，其他一些情况的网络是物理分离的。无论那种情况，云运维人员必须意识到适当的安全问题。安全域须制定出针对特定的OpenStack部署拓扑。所谓的域和其信任的需求取决于云的实例是公有的，私有的，还是混合的。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml302(para)
msgid ""
"The public security domain is an entirely untrusted area of the cloud "
"infrastructure. It can refer to the Internet as a whole or simply to "
"networks over which the user has no authority. This domain should always be "
"considered untrusted."
msgstr "公有安全域对于云基础设施是完全不可信任的区域。正如将内部暴露给整个互联网，或者是没有认证的简单网络。此域一定不可以\n被信任。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml307(para)
msgid ""
"Typically used for compute instance-to-instance traffic, the guest security "
"domain handles compute data generated by instances on the cloud; not "
"services that support the operation of the cloud, for example API calls. "
"Public cloud providers and private cloud providers who do not have stringent"
" controls on instance use or who allow unrestricted Internet access to "
"instances should consider this domain to be untrusted. Private cloud "
"providers may want to consider this network as internal and therefore "
"trusted only if they have controls in place to assert that they trust "
"instances and all their tenants."
msgstr "典型的用户计算服务中的实例对实际的互联互通，客户安全域，在云中掌握着由实例生成的计算机数据，但是不可以通过云来访问，包括应用程序接口调用。公有云或私有云提供商不会严格的控制实例的使用，以及谁受限访问互联网，所以应指定此域是不可信任的。或许私有云提供商可以稍宽松点，因为是内部网络，还有就是它可以控制所有的实例和租户。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml323(para)
msgid ""
"The data security domain is concerned primarily with information pertaining "
"to the storage services within OpenStack. Much of the data that crosses this"
" network has high integrity and confidentiality requirements and depending "
"on the type of deployment there may also be strong availability "
"requirements. The trust level of this network is heavily dependent on "
"deployment decisions and as such we do not assign this any default level of "
"trust."
msgstr "数据安全域主要关心的是OpenStack存储服务相关的信息。多数通过此网络的数据具有高度机密的要求，甚至在某些类型的部署中>，还有高可用的需求。此网络的信任级别高度依赖于其他部署的决定。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml331(para)
msgid ""
"When deploying OpenStack in an enterprise as a private cloud it is assumed "
"to be behind a firewall and within the trusted network alongside existing "
"systems. Users of the cloud are typically employees or trusted individuals "
"that are bound by the security requirements set forth by the company. This "
"tends to push most of the security domains towards a more trusted model. "
"However, when deploying OpenStack in a public-facing role, no assumptions "
"can be made and the attack vectors significantly increase. For example, the "
"API endpoints and the software behind it will be vulnerable to potentially "
"hostile entities wanting to gain unauthorized access or prevent access to "
"services. This can result in loss of reputation and must be protected "
"against through auditing and appropriate filtering."
msgstr "在一个企业部署OpenStack为私有云，通常是安置在防火墙之后，和原来的系统一并认为是可信任网络。云的用户即是原来的员工，由公司本来的安全需求所约束。这导致推动大部分的安全域趋向信任模式。但是，当部署OpenStack为面向公用的角色时，不要心存侥幸，它被攻击的几率大大增加。例如，应用程序接口端点，以及其背后的软件，很容易成为一些坏人下手的地方，获得未经授权的访问服务或者阻止其他人访问正常的服务，这可能会导致丢失数据、程序失效，乃至名声。这些服务必须被保护，通过审计以及适当的过滤来实现。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml345(para)
msgid ""
"Consideration must be taken when managing the users of the system, whether "
"it is the operation of public or private clouds. The identity service allows"
" for LDAP to be part of the authentication process, and includes such "
"systems as an OpenStack deployment that may ease user management if "
"integrated into existing systems."
msgstr "无论是公有云还是私有云，管理用户的系统必须认真的考虑。身份认证服务允许LDAP作为认证流程的一部分。包括将LDAP在部署时整合用户原有系统的话，可减少管理用户的压力。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml351(para)
msgid ""
"It is strongly recommended that the API services are placed behind hardware "
"that performs SSL termination. API services transmit user names, passwords, "
"and generated tokens between client machines and API endpoints and therefore"
" must be secured."
msgstr "理解用户的认证需要一些敏感信息如用户名、密码和认证令牌是非常重要的。基于这个原因，强烈建议将认证的API服务隐藏在基>于硬件的SSL终端之后。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml356(para)
msgid ""
"More information on OpenStack Security can be found at <link "
"href=\"http://docs.openstack.org/security-guide/\">http://docs.openstack.org"
"/security-guide/</link>"
msgstr "更多关于OpenStack安全的信息，请参考 <link href=\"http://docs.openstack.org/security-guide/\">OpenStack安全指南</link>"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml361(para)
msgid ""
"Due to the nature of the workloads that will be used in this scenario, a "
"number of components will be highly beneficial in a Compute-focused cloud. "
"This includes the typical OpenStack components:"
msgstr "由于在计算型云场景中使用的负载的性质，很多组件都会用的到。下面是典型的OpenStack组件："

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml367(para)
msgid "OpenStack Compute (nova)"
msgstr "OpenStack 计算(nova)"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml370(para)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml522(para)
msgid "OpenStack Image Service (glance)"
msgstr "OpenStack 镜像服务(glance)"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml373(para)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml506(para)
msgid "OpenStack Identity (keystone)"
msgstr "OpenStack 认证(keystone)"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml376(para)
msgid "Also consider several specialized components:"
msgstr "也会考虑一些特别的组件："

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml379(para)
msgid ""
"<glossterm>Orchestration</glossterm> module (<glossterm>heat</glossterm>)"
msgstr "<glossterm>Orchestration</glossterm> 模块 (<glossterm>heat</glossterm>)"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml383(para)
msgid ""
"It is safe to assume that, given the nature of the applications involved in "
"this scenario, these will be heavily automated deployments. Making use of "
"Orchestration will be highly beneficial in this case. Deploying a batch of "
"instances and running an automated set of tests can be scripted, however it "
"makes sense to use the Orchestration module to handle all these actions."
msgstr "可以很安全的假定，在此场景中给定应用的性质，这些将是非常高度自动化的部署。在此类用例中Orchestration可以大显身手。批量部署实例、自动化运行测试单元脚本化，都可以使用Orchestration来掌控。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml392(para)
msgid "Telemetry module (ceilometer)"
msgstr "Telemetry 模块 (ceilometer)"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml395(para)
msgid ""
"Telemetry and the alarms it generates are required to support autoscaling of"
" instances using Orchestration. Users that are not using the Orchestration "
"module do not need to deploy the Telemetry module and may choose to use "
"other external solutions to fulfill their metering and monitoring "
"requirements."
msgstr "使用Orchestration支持自动扩展实例离不开Telemetry和预警系统。用户不部署Telemetry模块就无法使用Orchestration模块，也许选择使用其他的解决方案来满足计费和监测的需求。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml401(para)
msgid ""
"See also: <link href=\"http://docs.openstack.org/openstack-"
"ops/content/logging_monitoring.html\">http://docs.openstack.org/openstack-"
"ops/content/logging_monitoring.html</link>"
msgstr "请参考: <link href=\"http://docs.openstack.org/openstack-ops/content/logging_monitoring.html\">http://docs.openstack.org/openstack-ops/content/logging_monitoring.html</link>"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml405(para)
#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml519(para)
msgid "OpenStack Block Storage (cinder)"
msgstr "OpenStack 块存储(cinder)"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml408(para)
msgid ""
"Due to the burst-able nature of the workloads and the applications and "
"instances that will be used for batch processing, this cloud will utilize "
"mainly memory or CPU, so the need for add-on storage to each instance is not"
" a likely requirement. This does not mean that OpenStack Block Storage "
"(cinder) will not be used in the infrastructure, but typically it will not "
"be used as a central component."
msgstr "在计算型云中主要使用的是内存和CPU，因为其面向批处理等服务，其负载、应用、实例都是围绕此而存在，所以为每个实例增加存储并非是强制的。但这并不意味着OpenStack 块存储(cinder)不会在基础设施中使用，只是不会当作核心组件罢了。"

#: ./doc/arch-design/compute_focus/section_tech_considerations_compute_focus.xml420(para)
msgid ""
"When choosing a networking platform, ensure that it either works with all "
"desired hypervisor and container technologies and their OpenStack drivers, "
"or includes an implementation of an ML2 mechanism driver. Networking "
"platforms that provide ML2 mechanisms drivers can be mixed."
msgstr "当选择网络平台时，要确保其可正常工作在所有的hypervisor和容器技术下，以及OpenStack的driver,后者ML2机制driver的实现。网络平台可以提供ML2机制driver的混合。"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml78(None)
msgid ""
"@@image: '../figures/Generic_CERN_Example.png'; "
"md5=268e2171493d49ff3cc791071a98b49e"
msgstr "@@image: '../figures/Generic_CERN_Example.png'; md5=268e2171493d49ff3cc791071a98b49e"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml139(None)
msgid ""
"@@image: '../figures/Generic_CERN_Architecture.png'; "
"md5=f5ec57432a0b3bd35efeaa25e84d9947"
msgstr "@@image: '../figures/Generic_CERN_Architecture.png'; md5=f5ec57432a0b3bd35efeaa25e84d9947"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml9(para)
msgid ""
"The Conseil Européen pour la Recherche Nucléaire (CERN), also known as the "
"European Organization for, Nuclear Research provides particle accelerators "
"and other infrastructure for high-energy physics research."
msgstr "欧洲理事会核物理研究中心(CERN)，以研究核物理而闻名的欧盟组织，提供粒子加速器和其他基础设施的高能量物理研究。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml13(para)
msgid ""
"As of 2011 CERN operated these two compute centers in Europe with plans to "
"add a third."
msgstr "CERN在2011年准备在欧洲建立第三个数据中心。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml19(th)
msgid "Data center"
msgstr "数据中心"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml19(th)
msgid "Approximate capacity"
msgstr "大体的容量"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml23(td)
msgid "Geneva, Switzerland"
msgstr "瑞士日内瓦"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml26(para)
msgid "3.5 Mega Watts"
msgstr "3.5 万瓦特"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml27(para)
msgid "91000 cores"
msgstr "91000 个核"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml28(para)
msgid "120 PB HDD"
msgstr "120 PB 硬盘"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml29(para)
msgid "100 PB Tape"
msgstr "100 PB 磁带"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml30(para)
msgid "310 TB Memory"
msgstr "310 TB 内存"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml35(td)
msgid "Budapest, Hungary"
msgstr "匈牙利布达佩斯"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml38(para)
msgid "2.5 Mega Watts"
msgstr "2.5 晚瓦特"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml39(para)
msgid "20000 cores"
msgstr "20000 个核"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml40(para)
msgid "6 PB HDD"
msgstr "6 PB 硬盘"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml46(para)
msgid ""
"To support a growing number of compute heavy users of experiments related to"
" the Large Hadron Collider (LHC) CERN ultimately elected to deploy an "
"OpenStack cloud using Scientific Linux and RDO. This effort aimed to "
"simplify the management of the center's compute resources with a view to "
"doubling compute capacity through the addition of an additional data center "
"in 2013 while maintaining the same levels of compute staff."
msgstr "为了支持越来越多的相关大型强子对撞机(LHC)实验的计算重度使用者,CERN 最终选用了使用SCientific Linux和 RDO部署的OpenStack云。这些努力的目的是简化中心计算资源的管理，在2013年增加了额外的数据中心，计算能力增长了一倍，但是维护人员确依然是原有的水平。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml54(para)
msgid ""
"The CERN solution uses <glossterm baseform=\"cell\">cells</glossterm> for "
"segregation of compute resources and to transparently scale between "
"different data centers. This decision meant trading off support for security"
" groups and live migration. In addition some details like flavors needed to "
"be manually replicated across cells. In spite of these drawbacks cells were "
"determined to provide the required scale while exposing a single public API "
"endpoint to users."
msgstr "CERN使用 <glossterm baseform=\"cell\">cells</glossterm>来实现计算资源隔离以及在不同数据中心透明的扩展。这个决定意味着在支持安全组与在线迁移的权衡。其他一些细节诸如flavor需要跨cell时手动复制。尽管cell有这些缺点，但是它还是承担起了所需的规模。同时为用户暴露出一单个公用API端点。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml63(para)
msgid ""
"A compute cell was created for each of the two original data centers and a "
"third was created when a new data center was added in 2013. Each cell "
"contains three availability zones to further segregate compute resources and"
" at least three RabbitMQ message brokers configured to be clustered with "
"mirrored queues for high availability."
msgstr "原来的二个数据中心，每个创建为一个计算cell，第三个cell是2013年新增的新数据中心。每个cell包含了3个可用区域以进一步隔离计算资源，还有至少3个RabbitMQ 消息代理，并被配置为镜像队列的集群，这样就实现了高可用。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml69(para)
msgid ""
"The API cell, which resides behind a HAProxy load balancer, is located in "
"the data center in Switzerland and directs API calls to compute cells using "
"a customized variation of the cell scheduler. The customizations allow "
"certain workloads to be directed to a specific data center or \"all\" data "
"centers with cell selection determined by cell RAM availability in the "
"latter case."
msgstr "API cell ,是置放在瑞士的数据中心，在负载均衡器HAProxy后面，它可使用定制过的各种cell调度器去直接调用计算cell的API。定制化的调度器允许指定负载到特定的数据中心，或者是所有的数据中心，但它会根据那个cell还有内存可用来决定选择那个cell。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml81(para)
msgid ""
"There is also some customization of the filter scheduler that handles "
"placement within the cells:"
msgstr "在cell里的可以定制的过滤器："

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml84(para)
msgid ""
"ImagePropertiesFilter - To provide special handling depending on the guest "
"operating system in use (Linux-based or Windows-based)."
msgstr "ImagePropertiestFilter - 为提供特殊处理，取决于客户机操作系统的使用(基于Linux或基于Windows)"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml88(para)
msgid ""
"ProjectsToAggregateFilter - To provide special handling depending on the "
"project the instance is associated with."
msgstr "ProjectsToAggregateFilter - 为了提供特殊处理，取决于该实例相关联的项目。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml92(para)
msgid ""
"default_schedule_zones - Allows the selection of multiple default "
"availability zones, rather than a single default."
msgstr "default_schedule_zones -允许选择多个默认可用区域，而不是单一的。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml97(para)
msgid ""
"The MySQL database server in each cell is managed by a central database team"
" and configured in an active/passive configuration with a NetApp storage "
"back end. Backups are performed ever 6 hours."
msgstr "每个cell里的MySQL数据库服务都由中心的数据库团队管理，且均配置为主/备模式，后端使用NetApp存储。每隔6小时做一次备份。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml102(title)
msgid "Network architecture"
msgstr "网络架构"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml103(para)
msgid ""
"To integrate with existing CERN networking infrastructure customizations "
"were made to legacy networking (nova-network). This was in the form of a "
"driver to integrate with CERN's existing database for tracking MAC and IP "
"address assignments."
msgstr "为了集成到原有CERN网络基础设施，他们对legacy 网络(nova-network)进行了定制。以驱动的形式集成到CERN现有的数据库，用来追踪MAC和IP地址的分配。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml107(para)
msgid ""
"The driver facilitates selection of a MAC address and IP for new instances "
"based on the compute node the scheduler places the instance on"
msgstr "该驱动有助于为新的实例选择一个MAC地址和IP地址，基于调度器会将实例在那个计算节点上启动。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml110(para)
msgid ""
"The driver considers the compute node that the scheduler placed an instance "
"on and then selects a MAC address and IP from the pre-registered list "
"associated with that node in the database. The database is then updated to "
"reflect the instance the addresses were assigned to."
msgstr "该驱动接受调度器分配的实例到计算节点，然后在数据库中拿到预先注册列表中的MAC和IP地址分配到这个节点，然后数据库更新实例所被分配的地址。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml116(title)
msgid "Storage architecture"
msgstr "存储架构"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml117(para)
msgid ""
"The OpenStack Image Service is deployed in the API cell and configured to "
"expose version 1 (V1) of the API. As a result the image registry is also "
"required. The storage back end in use is a 3 PB Ceph cluster."
msgstr "OpenStack镜像服务被部署在API单元中且配置了版本1(V1)的API。也需要镜像注册服务。后端的存储使用的Ceph集群，大小有3PB。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml121(para)
msgid ""
"A small set of \"golden\" Scientific Linux 5 and 6 images are maintained "
"which applications can in turn be placed on using orchestration tools. "
"Puppet is used for instance configuration management and customization but "
"Orchestration deployment is expected."
msgstr "由Scientific Linux 5和 6组成的一个小型的“黄金”集合，使用Orchestration工具可以将应用依次放置。Puppet用于实例配置管理和定制化，但是也有预期Orchestration部署。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml128(para)
msgid ""
"Although direct billing is not required, the Telemetry module is used to "
"perform metering for the purposes of adjusting project quotas. A sharded, "
"replicated, MongoDB back end is used. To spread API load, instances of the "
"nova-api service were deployed within the child cells for Telemetry to query"
" against. This also meant that some supporting services including keystone, "
"glance-api and glance-registry needed to also be configured in the child "
"cells."
msgstr "尽管没有直接的付费需求，Telemetry模块还是用到了，在这里拿到测量数据主要目的是调整项目的配额。也用到了一个分片的、复制的后端MongoDB。为了扩展API负载，nova-api服务被部署到子的cell中，此cell即是一个个的实例组成，Telemetry队列运行于此。这也意味着一些支撑服务包括keystone,glance-api以及glance-registry需要也可以在子的cell中配置。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml142(para)
msgid ""
"Additional monitoring tools in use include <link "
"href=\"http://flume.apache.org/\">Flume</link>, <link "
"href=\"http://www.elasticsearch.org/\">Elastic Search</link>, <link "
"href=\"http://www.elasticsearch.org/overview/kibana/\">Kibana</link>, and "
"the CERN developed <link "
"href=\"http://lemon.web.cern.ch/lemon/index.shtml\">Lemon</link> project."
msgstr "另外使用的监测工具有<link href=\"http://flume.apache.org/\">Flume</link>, <link href=\"http://www.elasticsearch.org/\">Elastic Search</link>, <link href=\"http://www.elasticsearch.org/overview/kibana/\">Kibana</link>, 以及CERN开发的项目<link href=\"http://lemon.web.cern.ch/lemon/index.shtml\">Lemon</link>。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml154(para)
msgid ""
"The authors of the Architecture Design Guide would like to thank CERN for "
"publicly documenting their OpenStack deployment in these resources, which "
"formed the basis for this chapter:"
msgstr "架构设计指南的作者们非常感谢CERN,他们公开了他们在他们的环境中部署OpenStack的文档，是这一节的内容的组织的基础。"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml159(link)
msgid "http://openstack-in-production.blogspot.fr"
msgstr "http://openstack-in-production.blogspot.fr"

#: ./doc/arch-design/compute_focus/section_prescriptive_examples_compute_focus.xml163(link)
msgid "Deep dive into the CERN Cloud Infrastructure"
msgstr "深入学习CERN云基础设施"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/specialized/section_hardware_specialized.xml49(None)
msgid ""
"@@image: '../figures/Specialized_Hardware2.png'; "
"md5=f8477d5d015f4c6d4fcd56d511f14ef9"
msgstr "@@image: '../figures/Specialized_Hardware2.png'; md5=f8477d5d015f4c6d4fcd56d511f14ef9"

#: ./doc/arch-design/specialized/section_hardware_specialized.xml8(title)
msgid "Specialized hardware"
msgstr "专门的硬件"

#: ./doc/arch-design/specialized/section_hardware_specialized.xml9(para)
msgid ""
"Certain workloads require specialized hardware devices that are either "
"difficult to virtualize or impossible to share. Applications such as load "
"balancers, highly parallel brute force computing, and direct to wire "
"networking may need capabilities that basic OpenStack components do not "
"provide."
msgstr "有些特定的负载需要难以虚拟化或者无法共享的特殊的硬件设备。例如负载均衡器、高并行暴力运算以及与网线直接相连的联网等应用，都可能需要基本 OpenStack 组件不提供的功能。"

#: ./doc/arch-design/specialized/section_hardware_specialized.xml16(title)
#: ./doc/arch-design/specialized/section_desktop_as_a_service_specialized.xml22(title)
#: ./doc/arch-design/specialized/section_networking_specialized.xml15(title)
#: ./doc/arch-design/specialized/section_openstack_on_openstack_specialized.xml25(title)
#: ./doc/arch-design/specialized/section_software_defined_networking_specialized.xml19(title)
msgid "Challenges"
msgstr "挑战"

#: ./doc/arch-design/specialized/section_hardware_specialized.xml17(para)
msgid ""
"Some applications need access to hardware devices to either improve "
"performance or provide capabilities that are not virtual CPU, RAM, network "
"or storage. These can be a shared resource, such as a cryptography "
"processor, or a dedicated resource such as a Graphics Processing Unit. "
"OpenStack has ways of providing some of these, while others may need extra "
"work."
msgstr "一些应用需要使用硬件设备以提高性能或者提供非虚拟 CPU、内存、网络或者存储等的功能。这些可以是共享的资源，例如加密处理器，或者专用的资源，例如图形处理器。对于其中一些设备，OpenStack 有办法能够直接使用它们，而对于另外一些设备，则可能需要完成额外的工作。"

#: ./doc/arch-design/specialized/section_hardware_specialized.xml26(title)
msgid "Solutions"
msgstr "解决方案"

#: ./doc/arch-design/specialized/section_hardware_specialized.xml27(para)
msgid ""
"In order to provide cryptography offloading to a set of instances, it is "
"possible to use Image Service configuration options to assign the "
"cryptography chip to a device node in the guest. The <citetitle>OpenStack "
"Command Line Reference</citetitle> contains further information on "
"configuring this solution in the chapter <link "
"href=\"http://docs.openstack.org/cli-reference/content/chapter_cli-glance-"
"property.html\">Image Service property keys</link> , but it allows all "
"guests using the configured images to access the hypervisor cryptography "
"device."
msgstr "要为一组实例提供加密卸载，可以通过使用镜像服务的配置选项将加密芯片分配至客户机中的一个设备节点。<citetitle>OpenStack 命令行参考</citetitle>中的<link href=\"http://docs.openstack.org/cli-reference/content/chapter_cli-glance-property.html\">镜像服务属性键</link>一章包含了关于配置这个解决方案的更多信息。但是这个方案允许所有的客户机都通过该已配置的镜像来使用宿主机的加密设备。"

#: ./doc/arch-design/specialized/section_hardware_specialized.xml37(para)
msgid ""
"If direct access to a specific device is required, it can be dedicated to a "
"single instance per hypervisor through the use of PCI pass-through. The "
"OpenStack administrator needs to define a flavor that specifically has the "
"PCI device in order to properly schedule instances. More information "
"regarding PCI pass-through, including instructions for implementing and "
"using it, is available at <link "
"href=\"https://wiki.openstack.org/wiki/Pci_passthrough#How_to_check_PCI_status_with_PCI_api_patches\">"
" https://wiki.openstack.org/wiki/Pci_passthrough</link>."
msgstr "如果需要直接使用某个特定的设备，可以通过使用 PCI 穿透技术将设备指定至每个宿主机上的单个实例。OpenStack 管理员需要定义一个明确具有 PCI 设备以便适当调度实例的实例类别。关于 PCI 穿透的更多信息，包括实施与使用的说明，请参考 <link href=\"https://wiki.openstack.org/wiki/Pci_passthrough#How_to_check_PCI_status_with_PCI_api_patches\"> https://wiki.openstack.org/wiki/Pci_passthrough</link>。"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/specialized/section_multi_hypervisor_specialized.xml26(None)
msgid ""
"@@image: '../figures/Compute_NSX.png'; md5=1745487faf16b74b13f80ffd837f43a0"
msgstr "@@image: '../figures/Compute_NSX.png'; md5=1745487faf16b74b13f80ffd837f43a0"

#: ./doc/arch-design/specialized/section_multi_hypervisor_specialized.xml8(title)
msgid "Multi-hypervisor example"
msgstr "多种类型宿主机的例子"

#: ./doc/arch-design/specialized/section_multi_hypervisor_specialized.xml9(para)
msgid ""
"A financial company requires a migration of its applications from a "
"traditional virtualized environment to an API driven, orchestrated "
"environment. A number of their applications have strict support requirements"
" which limit what hypervisors they are supported on, however the rest do not"
" have such restrictions and do not need the same features. Because of these "
"requirements, the overall target environment needs multiple hypervisors."
msgstr "一个金融公司需要将其应用从一个传统的虚拟化环境中迁移到一个新的由 API 驱动的合理组织的环境中。该公司的一些应用有着严格的支持需求，这限制了在哪些宿主机上它们能够被支持。然而另外的一些应用没有这些限制也不需要相同的特性。根据这些需求，整个目标环境就需要多种类型的宿主机。"

#: ./doc/arch-design/specialized/section_multi_hypervisor_specialized.xml17(para)
msgid ""
"The current environment consists of a vSphere environment with 20 VMware "
"ESXi hypervisors supporting 300 instances of various sizes. Approximately 50"
" of the instances must be run on ESXi but the rest have more flexible "
"requirements."
msgstr "当前的环境是一个有 20 台 VMware ESXi 宿主机，支撑着 300 个不同大小的实例的 vSphere 环境。大约有 50 个实例必须在 ESXi 上运行，剩余的则有着更为灵活的需求。"

#: ./doc/arch-design/specialized/section_multi_hypervisor_specialized.xml21(para)
msgid ""
"The company has decided to bring the management of the overall system into a"
" common platform provided by OpenStack."
msgstr "该公司决定将对整个系统的管理迁移到一个由 OpenStack 提供的普通平台中。"

#: ./doc/arch-design/specialized/section_multi_hypervisor_specialized.xml29(para)
msgid ""
"The approach is to run a host aggregate consisting of KVM hypervisors for "
"the general purpose instances and a separate host aggregate for instances "
"requiring ESXi. This way, workloads that must be run on ESXi can be targeted"
" at those hypervisors, but the rest can be targeted at the KVM hypervisors."
msgstr "解决方法是为一般用途的实例运行由一个 KVM 宿主机组成的主机集群，同时为需要 ESXi 的实例运行一个单独的主机集群。这种方式下，必须运行在 ESXi 之上的负载可以调度到那些宿主机上，同时其它的那些可以调度到 KVM 宿主机之上。"

#: ./doc/arch-design/specialized/section_multi_hypervisor_specialized.xml35(para)
msgid ""
"Images in the OpenStack Image Service have particular hypervisor metadata "
"attached so that when a user requests a certain image, the instance will "
"spawn on the relevant aggregate. Images for ESXi are stored in VMDK format. "
"QEMU disk images can be converted to VMDK, VMFS Flat Disks, which includes "
"thin, thick, zeroed-thick, and eager-zeroed-thick. Note that once a VMFS "
"thin disk is exported from VMFS to a non-VMFS location, like the OpenStack "
"Image Service, it becomes a preallocated flat disk. This impacts the "
"transfer time from the OpenStack Image Service to the data store when the "
"full preallocated flat disk, rather than the thin disk, must be transferred."
msgstr "OpenStack 镜像服务中的镜像随附着特别的宿主机元数据，因此当用户请求特定的镜像时，该实例将会在相应的集群中启动。ESXi 中的镜像以 VMDK 格式储存。QEMU 磁盘镜像能够转换至 VMDK 格式，包括精简置备、厚置备、厚置备延迟置零以及厚置备置零等 VMFS 平坦磁盘。请注意，一个 VMFS 精简置备的磁盘一旦从 VMFS 导出到一个非 VMFS 的位置，例如 OpenStack 镜像服务时，它就会变成一个预分配的平坦磁盘。这将影响从 OpenStack 镜像服务到数据存储的传输时间，因为完全预分配的磁盘而不是一个精简置备的磁盘需要被传输。"

#: ./doc/arch-design/specialized/section_multi_hypervisor_specialized.xml47(para)
msgid ""
"This example has the additional complication that, rather than being spawned"
" directly on a hypervisor simply by calling a specific host aggregate using "
"the metadata of the image, the VMware host aggregate compute nodes "
"communicate with vCenter which then requests that the instance be scheduled "
"to run on an ESXi hypervisor. As of the Icehouse release, this functionality"
" requires that VMware Distributed Resource Scheduler (DRS) be enabled on a "
"cluster and set to \"Fully Automated\"."
msgstr "此例子中有个额外的复杂之处在于，VMware 主机集群的计算节点需要与 vCenter 通信，然后 vCenter 才请求将实例调度到在一个 ESXi 宿主机上运行，而并非通过简单地使用镜像的元数据调用特定的主机集群从而让实例在宿主机上直接启动。在 Icehouse 版本中，这个功能需要 VMware 分布式资源调度器(DRS)在集群中被启用并且设置为“全自动”。"

#: ./doc/arch-design/specialized/section_multi_hypervisor_specialized.xml56(para)
msgid ""
"Due to the DRS requirement, note that vSphere requires shared storage (DRS "
"uses vMotion, which requires shared storage). The solution uses shared "
"storage to provide Block Storage capabilities to the KVM instances while "
"also providing the storage for vSphere. The environment uses a dedicated "
"data network to provide this functionality, therefore the compute hosts "
"should have dedicated NICs to support this dedicated traffic. vSphere "
"supports the use of OpenStack Block Storage to present storage from a VMFS "
"datastore to an instance, so the use of Block Storage in this architecture "
"supports both hypervisors."
msgstr "由于 DRS 的需求，请注意 vSphere 需要共享存储(DRS 使用需要共享存储的 vMotion)。整个解决方案使用共享存储为 KVM 实例提供块存储功能，同时为 vSphere 提供存储。环境中使用一个专用的数据网络来支持这个存储功能，因此计算主机上需要有专用的网卡设备来承载这些流量。vSphere 支持使用 OpenStack 块存储将 VMFS 存储展现给实例作为存储，因此在这个架构中对块存储的使用同时支持两种类型的宿主机。"

#: ./doc/arch-design/specialized/section_multi_hypervisor_specialized.xml67(para)
msgid ""
"In this case, network connectivity is provided by OpenStack Networking with "
"the VMware NSX plug-in driver configured. Alternatively, the system could "
"use legacy networking (nova-network), which is supported by both hypervisors"
" used in this design, but has limitations. Specifically, security groups are"
" not supported on vSphere with legacy networking. With VMware NSX as part of"
" the design, however, when a user launches an instance within either of the "
"host aggregates, the instances are attached to appropriate network overlay-"
"based logical networks as defined by the user."
msgstr "在这个场景中，网络连接由配置了 VMware NSX 插件驱动的 OpenStack 联网提供。系统还可以采用传统的联网方式(nova-network)，也同样被这个设计中的两种类型的宿主机所支持，但是有一些局限性。具体说来，采用传统联网方式时，安全组在 vSphere 上是不被支持的。既然设计中包含了 Vmware NSX 作为其中的一部分，当用户在任何一个主机集群中启动实例时，该实例将会被连接至由用户定义的相应的覆盖逻辑网络之中。"

#: ./doc/arch-design/specialized/section_multi_hypervisor_specialized.xml77(para)
msgid ""
"Note that care must be taken with this approach, as there are design "
"considerations around the OpenStack Compute integration. When using vSphere "
"with OpenStack, the nova-compute service that is configured to communicate "
"with vCenter shows up as a single large hypervisor representing the entire "
"ESXi cluster (multiple instances of nova-compute can be run to represent "
"multiple ESXi clusters or to connect to multiple vCenter servers). If the "
"process running the nova-compute service crashes, the connection to that "
"particular vCenter Server-and any ESXi clusters behind it-are severed and it"
" will not be possible to provision more instances on that vCenter, despite "
"the fact that vSphere itself could be configured for high availability. "
"Therefore, it is important to monitor the nova-compute service that connects"
" to vSphere for any disruptions."
msgstr "请注意这个解决方案部署时需要小心进行，因为有一些 OpenStack 计算集成相关的设计因素。当在 OpenStack 中使用 vSphere 时，nova-compute 服务将会被配置为与 vCenter 进行通信并将整个 ESXi 集群显示为单台巨大的宿主机(可以运行多个 nova-compute 实例以表示多个 ESXi 集群或者连接至多个 vCenter 服务器)。如果运行 nova-compute 服务的进程崩溃，到 vCenter 服务器以及在该服务器后端的 ESXi 集群的连接将会被切断，并且将不能够在该 vCenter 上产生更多的实例，尽管 vSphere 本身可以被配置为具有高可用功能。因此，监控连接至 vSphere 的 nova-compute 服务的中断就显得尤为重要。"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/specialized/section_desktop_as_a_service_specialized.xml65(None)
msgid ""
"@@image: '../figures/Specialized_VDI1.png'; "
"md5=77729426d59881476de9a03e1ee8a22c"
msgstr "@@image: '../figures/Specialized_VDI1.png'; md5=77729426d59881476de9a03e1ee8a22c"

#: ./doc/arch-design/specialized/section_desktop_as_a_service_specialized.xml8(title)
msgid "Desktop-as-a-Service"
msgstr "桌面即服务"

#: ./doc/arch-design/specialized/section_desktop_as_a_service_specialized.xml9(para)
msgid ""
"Virtual Desktop Infrastructure (VDI) is a service that hosts user desktop "
"environments on remote servers. This application is very sensitive to "
"network latency and requires a high performance compute environment. "
"Traditionally these types of environments have not been put on cloud "
"environments because few clouds are built to support such a demanding "
"workload that is so exposed to end users. Recently, as cloud environments "
"become more robust, vendors are starting to provide services that allow "
"virtual desktops to be hosted in the cloud. In the not too distant future, "
"OpenStack could be used as the underlying infrastructure to run a virtual "
"infrastructure environment, either in-house or in the cloud."
msgstr "虚拟桌面基础设施(VDI)是在远程服务器上提供用户桌面环境的服务。此类应用对于网络延迟非常敏感并且需要一个高性能的计算环境。传统上这类环境并未成放到云环境之中，因为极少的云环境会支持如此程度暴露给终端用户的高要求负载。近来，随着云环境的稳定性越来越高，云厂商们开始提供能够在云中运行虚拟桌面的服务。在不远的将来，OpenStack 便能够作为运行虚拟桌面基础设施的底层设施，不管是内部的，还是在云端。"

#: ./doc/arch-design/specialized/section_desktop_as_a_service_specialized.xml23(para)
msgid ""
"Designing an infrastructure that is suitable to host virtual desktops is a "
"very different task to that of most virtual workloads. The infrastructure "
"will need to be designed, for example:"
msgstr "设计一个适用于运行虚拟桌面的基础设施是一个与为其它大部分虚拟化任务进行设计大不相同的工作。该基础设施设计时必须考虑到各种因素，比如以下例子："

#: ./doc/arch-design/specialized/section_desktop_as_a_service_specialized.xml29(para)
msgid ""
"Boot storms: What happens when hundreds or thousands of users log in during "
"shift changes, affects the storage design."
msgstr "启动风暴：当工作开始时成百成千的用户同时登录时发生的情况，影响存储的设计。"

#: ./doc/arch-design/specialized/section_desktop_as_a_service_specialized.xml34(para)
msgid "The performance of the applications running in these virtual desktops"
msgstr "在提供的虚拟桌面中运行的应用的性能"

#: ./doc/arch-design/specialized/section_desktop_as_a_service_specialized.xml38(para)
msgid "Operating system and compatibility with the OpenStack hypervisor"
msgstr "操作系统以及和 OpenStack 宿主机的兼容性"

#: ./doc/arch-design/specialized/section_desktop_as_a_service_specialized.xml44(title)
msgid "Broker"
msgstr "代理"

#: ./doc/arch-design/specialized/section_desktop_as_a_service_specialized.xml45(para)
msgid ""
"The connection broker is a central component of the architecture that "
"determines which remote desktop host will be assigned or connected to the "
"user. The broker is often a full-blown management product allowing for the "
"automated deployment and provisioning of remote desktop hosts."
msgstr "连接代理是架构中的核心组件，其决定了哪个虚拟桌面会被分配至或者连接至用户。这种代理程序一般都是比较成熟全面的管理产品，能够支持远程桌面的自动部署及准备工作。"

#: ./doc/arch-design/specialized/section_desktop_as_a_service_specialized.xml52(title)
#: ./doc/arch-design/specialized/section_networking_specialized.xml23(title)
#: ./doc/arch-design/specialized/section_software_defined_networking_specialized.xml28(title)
msgid "Possible solutions"
msgstr "可能的解决方案"

#: ./doc/arch-design/specialized/section_desktop_as_a_service_specialized.xml53(para)
msgid ""
"There are a number of commercial products available today that provide such "
"a broker solution but nothing that is native in the OpenStack project. Not "
"providing a broker is also an option, but managing this manually would not "
"suffice as a large scale, enterprise solution."
msgstr "目前有多种商业产品能够提供这种代理的解决方案，但 OpenStack 项目中没有原生的支持。不提供这样一个代理也是一个选择，但是手动管理这些功能并不能够满足作为一个大规模的企业级解决方案的要求。"

#: ./doc/arch-design/specialized/section_desktop_as_a_service_specialized.xml62(title)
#: ./doc/arch-design/specialized/section_openstack_on_openstack_specialized.xml76(title)
#: ./doc/arch-design/specialized/section_software_defined_networking_specialized.xml40(title)
msgid "Diagram"
msgstr "图示"

#: ./doc/arch-design/specialized/section_networking_specialized.xml8(title)
msgid "Specialized networking example"
msgstr "特殊网络应用的例子"

#: ./doc/arch-design/specialized/section_networking_specialized.xml9(para)
msgid ""
"Some applications that interact with a network require more specialized "
"connectivity. Applications such as a looking glass require the ability to "
"connect to a BGP peer, or route participant applications may need to join a "
"network at a layer 2 level."
msgstr "有些与网络进行互动的应用需要更加专门的连接。类似于 looking glass 之类的应用需要连接到 BGP 节点，或者路由参与者应用可能需要在二层上加入一个网络。"

#: ./doc/arch-design/specialized/section_networking_specialized.xml16(para)
msgid ""
"Connecting specialized network applications to their required resources "
"alters the design of an OpenStack installation. Installations that rely on "
"overlay networks are unable to support a routing participant, and may also "
"block layer-2 listeners."
msgstr "将特殊的网络应用连接至它们所需要的资源能够改变 OpenStack 部署的设计。基于覆盖网络的部署是无法支持路由参与者应用的，而且也可能阻挡二层网络监听者应用。"

#: ./doc/arch-design/specialized/section_networking_specialized.xml24(para)
msgid ""
"Deploying an OpenStack installation using OpenStack Networking with a "
"provider network will allow direct layer-2 connectivity to an upstream "
"networking device. This design provides the layer-2 connectivity required to"
" communicate via Intermediate System-to-Intermediate System (ISIS) protocol "
"or to pass packets controlled via an OpenFlow controller. Using the multiple"
" layer-2 plug-in with an agent such as <glossterm>Open vSwitch</glossterm> "
"would allow a private connection through a VLAN directly to a specific port "
"in a layer-3 device. This would allow a BGP point to point link to exist "
"that will join the autonomous system. Avoid using layer-3 plug-ins as they "
"will divide the broadcast domain and prevent router adjacencies from "
"forming."
msgstr "使用带有提供商网络的 OpenStack 联网方式进行 OpenStack 的部署可以允许直接到上游网络设备的二层网络连接。这种设计提供了通过中间系统到中间系统(ISIS)协议进行通信，或者传输由 OpenFlow 控制器所控制的网络包等功能所需要的二层联网要求。使用比如 <glossterm>Open vSwitch</glossterm> 这类的带有代理程序的多种二层网络插件能够允许通过 VLAN 直接到三层设备上的特定端口的私有连接。这使得之后会加入自治系统的 BGP 点对点连接能够存在。应该尽量避免使用三层网络的插件，因为它们会分隔广播域并且阻止邻接路由器的形成。"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/specialized/section_openstack_on_openstack_specialized.xml80(None)
msgid ""
"@@image: '../figures/Specialized_OOO.png'; "
"md5=65a8e3666ebf09a0145c61bc1d472144"
msgstr "@@image: '../figures/Specialized_OOO.png'; md5=65a8e3666ebf09a0145c61bc1d472144"

#: ./doc/arch-design/specialized/section_openstack_on_openstack_specialized.xml12(title)
msgid "OpenStack on OpenStack"
msgstr "OpenStack 上的 OpenStack"

#: ./doc/arch-design/specialized/section_openstack_on_openstack_specialized.xml13(para)
msgid ""
"In some cases it is necessary to run OpenStack nested on top of another "
"OpenStack cloud. This scenario allows for complete OpenStack cloud "
"environments to be managed and provisioned on instances running on "
"hypervisors and servers controlled by the underlying OpenStack cloud. Public"
" cloud providers can use this technique to effectively manage the upgrade "
"and maintenance process on complete OpenStack-based clouds. Developers and "
"those testing OpenStack can also use the guidance to provision their own "
"OpenStack environments on available OpenStack Compute resources, whether "
"public or private."
msgstr "某些情况下可能需要运行一个嵌套在另外的 OpenStack 云上的 OpenStack。这种场景使得整个 OpenStack 环境都由运行在底层 OpenStack 云所控制的宿主机和服务器上的实例来管理和准备。公有云提供商可以使用这项技术在完全基于 OpenStack 的云上来高效地管理升级和维护的过程。开发和测试 OpenStack 的人员也可以在不管公有还是私有的可用的 OpenStack 计算资源上，根据这个指引部署他们自己的 OpenStack 环境。"

#: ./doc/arch-design/specialized/section_openstack_on_openstack_specialized.xml26(para)
msgid ""
"The network aspect of deploying a nested cloud is the most complicated "
"aspect of this architecture. When using VLANs, these will need to be exposed"
" to the physical ports on which the undercloud runs, as the bare metal cloud"
" owns all the hardware, but they also need to be exposed to the nested "
"levels as well. Alternatively, network overlay technologies can be used on "
"the overcloud (the OpenStack cloud running on OpenStack) to provide the "
"required software defined networking for the deployment."
msgstr "网络方面是这个嵌套云架构的最复杂部分。由于底层裸金属架构的云拥有所有的硬件设备，当使用 VLAN 的时候，VLAN 需要被暴露到底层云上的物理端口，但是它们也同样需要被展现到嵌套层中。作为备选方案，网络覆盖技术能够在上层云(运行在 OpenStack 之上的 OpenStack)被用以为部署提供所需要的软件定义联网。"

#: ./doc/arch-design/specialized/section_openstack_on_openstack_specialized.xml38(para)
msgid ""
"A key question to address in this scenario is the decision about which "
"approach should be taken to provide a nested hypervisor in OpenStack. This "
"decision influences which operating systems can be used for the deployment "
"of the nested OpenStack deployments."
msgstr "这种场景中需要解决的一个关键问题是决定采用何种方式为嵌套的 OpenStack 环境提供宿主机。这个决定将会影响在嵌套 OpenStack 部署中哪些操作系统可以被使用。"

#: ./doc/arch-design/specialized/section_openstack_on_openstack_specialized.xml45(title)
msgid "Possible solutions: deployment"
msgstr "可能的解决方案：部署"

#: ./doc/arch-design/specialized/section_openstack_on_openstack_specialized.xml46(para)
msgid ""
"Deployment of a full stack can be challenging but this difficulty can be "
"readily be mitigated by creating a Heat template to deploy the entire stack "
"or a configuration management system. Once the Heat template is created, "
"deploying additional stacks will be a trivial thing and can be performed in "
"an automated fashion."
msgstr "部署整个 OpenStack 环境是比较麻烦的，不过这个困难可以被轻松瓦解，通过创建一个 Heat 模板来部署整个环境或者使用一个配置管理系统。一旦 Heat 模板创建完成，部署新的 OpenStack 环境就变得非常简单并且可以使用自动化方式完成。"

#: ./doc/arch-design/specialized/section_openstack_on_openstack_specialized.xml52(para)
msgid ""
"The OpenStack-on-OpenStack project (<glossterm>TripleO</glossterm>) "
"addresses this issuecurrently, however, the project does not completely "
"cover nested stacks. For more information, see "
"https://wiki.openstack.org/wiki/TripleO."
msgstr "目前，OpenStack-on-OpenStack 项目(<glossterm>TripleO</glossterm)能够解决这个问题，然而，这个项目并未完全覆盖嵌套 OpenStack 的场景。请参考 https://wiki.openstack.org/wiki/TripleO 了解该项目的更多信息。"

#: ./doc/arch-design/specialized/section_openstack_on_openstack_specialized.xml61(title)
msgid "Possible solutions: hypervisor"
msgstr "可能的解决方案：宿主机"

#: ./doc/arch-design/specialized/section_openstack_on_openstack_specialized.xml62(para)
msgid ""
"In the case of running TripleO, the underlying OpenStack cloud deploys the "
"Compute nodes as bare-metal. OpenStack would then be deployed on these "
"Compute bare-metal servers with the appropriate hypervisor, such as KVM."
msgstr "在运行 TripleO 的场景下，底层的 OpenStack 环境以裸金属的方式部署计算节点。然后 OpenStack 将会被部署在这些计算的裸金属服务器上，并使用诸如 KVM 之类的管理程序。"

#: ./doc/arch-design/specialized/section_openstack_on_openstack_specialized.xml66(para)
msgid ""
"In the case of running smaller OpenStack clouds for testing purposes, and "
"performance would not be a critical factor, QEMU can be utilized instead. It"
" is also possible to run a KVM hypervisor in an instance (see <link "
"href=\"http://davejingtian.org/2014/03/30/nested-kvm-just-for-fun/\"> "
"http://davejingtian.org/2014/03/30/nested-kvm-just-for-fun/</link>), though "
"this is not a supported configuration, and could be a complex solution for "
"such a use case."
msgstr "如果是要为测试目的运行小规模的 OpenStack 云环境，并且性能不是关键的考虑因素的情况下，则 QEMU 可以被作为替代使用。在实例中运行一个 KVM 的宿主机是可能的(参考<link href=\"http://davejingtian.org/2014/03/30/nested-kvm-just-for-fun/\"> http://davejingtian.org/2014/03/30/nested-kvm-just-for-fun/</link>)，但这不是被支持的配置方式，并且对这样一个使用场景来说，也会是一个复杂的解决方案。"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/specialized/section_software_defined_networking_specialized.xml44(None)
msgid ""
"@@image: '../figures/Special_case_SDN_hosted.png'; "
"md5=93f5e5b90b5aea50d24a098ba80c805d"
msgstr "@@image: '../figures/Special_case_SDN_hosted.png'; md5=93f5e5b90b5aea50d24a098ba80c805d"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/specialized/section_software_defined_networking_specialized.xml51(None)
msgid ""
"@@image: '../figures/Special_case_SDN_external.png'; "
"md5=12d9e840a0a10a5abcf1a2c1f6f80965"
msgstr "@@image: '../figures/Special_case_SDN_external.png'; md5=12d9e840a0a10a5abcf1a2c1f6f80965"

#: ./doc/arch-design/specialized/section_software_defined_networking_specialized.xml8(title)
msgid "Software-defined networking"
msgstr "软件定义网络"

#: ./doc/arch-design/specialized/section_software_defined_networking_specialized.xml9(para)
msgid ""
"Software-defined networking (SDN) is the separation of the data plane and "
"control plane. SDN has become a popular method of managing and controlling "
"packet flows within networks. SDN uses overlays or directly controlled "
"layer-2 devices to determine flow paths, and as such presents challenges to "
"a cloud environment. Some designers may wish to run their controllers within"
" an OpenStack installation. Others may wish to have their installations "
"participate in an SDN-controlled network."
msgstr "软件定义网络(SDN)指的是网络数据转发平面以及控制平面的隔离。SDN 已经成为在网络中管理及控制网络包流的流行方案。SDN 使用覆盖网络或者直接控制的二层网络设备来监测网络流的路径，这对云环境提出了一些挑战。有些设计者可能希望在 OpenStack 环境中运行他们的控制器。另外一些则可能希望将他们的 OpenStack 环境加入到一个 由 SDN 方式进行控制的网络之中。"

#: ./doc/arch-design/specialized/section_software_defined_networking_specialized.xml20(para)
msgid ""
"SDN is a relatively new concept that is not yet standardized, so SDN systems"
" come in a variety of different implementations. Because of this, a truly "
"prescriptive architecture is not feasible. Instead, examine the differences "
"between an existing or intended OpenStack design and determine where the "
"potential conflict and gaps can be found."
msgstr "相对来说，SDN 是一个比较新的，仍未被标准化的概念，所以 SDN 系统可能来自很多不同的具体实现。因此，一个真正意义上示范性架构是目前无法给出的。相反的，我们只能够分析当前或者目标 OpenStack 设计中的各种不同，并确定哪些地方将会出现潜在的冲突或者还存在差距。"

#: ./doc/arch-design/specialized/section_software_defined_networking_specialized.xml29(para)
msgid ""
"If an SDN implementation requires layer-2 access because it directly "
"manipulates switches, then running an overlay network or a layer-3 agent may"
" not be advisable. If the controller resides within an OpenStack "
"installation, it may be necessary to build an ML2 plug-in and schedule the "
"controller instances to connect to tenant VLANs that then talk directly to "
"the switch hardware. Alternatively, depending on the external device "
"support, use a tunnel that terminates at the switch hardware itself."
msgstr "如果一个 SDN 的实现由于它需要直接管理和操作交换机因而要求二层网络的连接，那么就不建议运行覆盖网络或者三层网络的代理程序。假如 SDN 控制器运行在 OpenStack 环境之中，则可能需要创建一个 ML2 插件并且将该控制器实例调度到能够连接至能够直接与交换机硬件进行通信的租户 VLAN。另一个可能的方式是，基于外部硬件设备的支持情况，使用一端终结在交换机硬件之上的网络隧道。"

#: ./doc/arch-design/specialized/section_software_defined_networking_specialized.xml41(para)
msgid "OpenStack hosted SDN controller: <placeholder-1/>"
msgstr "OpenStack 上运行 SDN 控制器：<placeholder-1/>"

#: ./doc/arch-design/specialized/section_software_defined_networking_specialized.xml48(para)
msgid "OpenStack participating in an SDN controller network: <placeholder-1/>"
msgstr "OpenStack 加入到 SDN 控制器所控制的网络中：<placeholder-1/>"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml9(para)
msgid ""
"Hybrid cloud architectures introduce additional complexities, particularly "
"those that use heterogeneous cloud platforms. As a result, it is important "
"to make sure that design choices match requirements in such a way that the "
"benefits outweigh the inherent additional complexity and risks."
msgstr "混合云架构引入额外的复杂性，特别是那些使用不同种类的云计算平台。结果就是，确保设计满足需求的同时不要增加额外的复杂性和风险显得很重要。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml15(para)
msgid ""
"Business considerations to make when designing a hybrid cloud deployment "
"include:"
msgstr "设计一个混合云的部署时对于商业作出的考虑包括："

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml21(para)
msgid ""
"A hybrid cloud architecture involves multiple vendors and technical "
"architectures. These architectures may be more expensive to deploy and "
"maintain. Operational costs can be higher because of the need for more "
"sophisticated orchestration and brokerage tools than in other architectures."
" In contrast, overall operational costs might be lower by virtue of using a "
"cloud brokerage tool to deploy the workloads to the most cost effective "
"platform."
msgstr "混合云架构涉及到多个提供商和技术架构。这些架构也许为部署和维护付出高额的费用。运维花费更高的原因在于相比与其它架构需要更多复杂的编排以及额外的工具。相比之下，整体运营成本可能在最具成本效益的平台中使用云运营工具部署负载会降低。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml35(para)
msgid ""
"Revenue opportunities vary greatly based on the intent and use case of the "
"cloud. If it is being built as a commercial customer-facing product, "
"consider the drivers for building it over multiple platforms and whether the"
" use of multiple platforms make the design more attractive to target "
"customers, thus enhancing the revenue opportunity."
msgstr "赢利空间着眼于将云用来干什么。如果构建为一个面向商业用户的产品，考虑到驱动构建它在多个平台和是否使用多个平台，使设计更具吸引力的目标客户，从而提高收入的机会。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml48(para)
msgid ""
"One of the most common reasons to use cloud platforms is to speed the time "
"to market of a new product or application. A business requirement to use "
"multiple cloud platforms may be because there is an existing investment in "
"several applications and it is faster to tie them together rather than "
"migrating components and refactoring to a single platform."
msgstr "使用云平台的一个常见的原因就是可以加速新产品或新应用的上市时间。一业务需求要使用多云平台，原因是他们已经在多个应用上投入了，且将此与云平台混合起来要比迁移和重构为单一平台节省很多时间。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml59(term)
msgid "Business or technical diversity"
msgstr "业务或技术的多样性"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml61(para)
msgid ""
"Organizations already leveraging cloud-based services may wish to embrace "
"business diversity and utilize a hybrid cloud design to spread their "
"workloads across multiple cloud providers so that no application is hosted "
"in a single cloud provider."
msgstr "组织已经借用基于云的服务是希望拥抱更多的业务，且利用混合云设计来跨云提供商来解决负载问题，所以没有应用是托管在单个的云服务提供商那里的。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml70(term)
msgid "Application momentum"
msgstr "应用增长"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml72(para)
msgid ""
"A business with existing applications that are already in production on "
"multiple cloud environments may find that it is more cost effective to "
"integrate the applications on multiple cloud platforms rather than migrate "
"them to a single platform."
msgstr "一家公司已经拥有在多云环境下的应用，且用于生产，那么也许在寻找更加省钱的集成方案，而不是迁移到单一的平台中。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml102(para)
#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml36(para)
msgid ""
"Data compliance policies governing certain types of information needs to "
"reside in certain locations due to regular issues and, more importantly, "
"cannot reside in other locations for the same reason."
msgstr "管理由于监管上的问题因而特定类型的数据必须存放在特定的地点或者更重要的，由于相同的原因，不能够存放在其它地点的数据管理政策。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml108(para)
msgid ""
"Examples of such legal frameworks include the data protection framework of "
"the European Union (<link href=\"http://ec.europa.eu/justice/data-"
"protection/\">http://ec.europa.eu/justice/data-protection/</link>) and the "
"requirements of the Financial Industry Regulatory Authority (<link "
"href=\"http://www.finra.org/Industry/Regulation/FINRARules/\">http://www.finra.org/Industry/Regulation/FINRARules/</link>)"
" in the United States. Consult a local regulatory body for more information."
msgstr "相关的法律制度包括了有欧盟的数据保护框架(<link href=\"http://ec.europa.eu/justice/data-protection/\">http://ec.europa.eu/justice/data-protection/</link>)以及美国金融业监督管理局的要求(<link href=\"http://www.finra.org/Industry/Regulation/FINRARules\">http://www.finra.org/Industry/Regulation/FINRARules</link>)。请咨询当地的监管机构以了解更多相关信息。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml118(title)
msgid "Workload considerations"
msgstr "负载考虑"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml119(para)
msgid ""
"Defining what the word \"workload\" means in the context of a hybrid cloud "
"environment is important. Workload can be defined as the intended way the "
"systems will be utilized, which is often referred to as a \"use case\". A "
"workload can be a single application or a suite of applications that work in"
" concert. It can also be a duplicate set of applications that need to run on"
" multiple cloud environments. In a hybrid cloud deployment, the same "
"workload will often need to function equally well on radically different "
"public and private cloud environments. The architecture needs to address "
"these potential conflicts, complexity, and platform incompatibilities."
msgstr "准确定义“负载”这个词在混合云环境的上下文中的意思显得很重要。负载可以定义为利用系统专注于做某些事，这通常被称作“用例”。一个负载可以是单一的应用也可以是一组一起工作的应用。它也可以是需要运行在多个云环境中的一组应用的多个复制。在混合云部署中，同样的负载需要等同的功能适用不同的公有和私有云环境。那么架构就需要处理它们潜在的冲突，复杂性以及平台兼容性。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml131(para)
msgid "Some possible use cases for a hybrid cloud architecture include:"
msgstr "一些可能用到混合云架构的用例有："

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml135(para)
msgid ""
"Dynamic resource expansion or \"bursting\": Another common reason to use a "
"multiple cloud architecture is a \"bursty\" application that needs "
"additional resources at times. An example of this case could be a retailer "
"that needs additional resources during the holiday selling season, but does "
"not want to build expensive cloud resources to meet the peak demand. They "
"might have an OpenStack private cloud but want to burst to AWS or some other"
" public cloud for these peak load periods. These bursts could be for long or"
" short cycles ranging from hourly, monthly or yearly."
msgstr "动态资源扩展或“突破\":另外使用多云架构的通用原因是在某时”突破“应用需要额外的资源。举个案例，一个零售商在假期销售高峰季需要额外的资源，但是又不愿意构建昂贵的云资源来仅仅满足高峰需求，因为多数时候不需要。他们也许有个OpenStack私有云，为了高峰期负载期间需要突破到AWS或其他公有云。突破的周期可长可短，可以是小时、可以是月、也可以是年为单位。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml148(para)
msgid ""
"Disaster recovery-business continuity: The cheaper storage and instance "
"management makes a good case for using the cloud as a secondary site. The "
"public cloud is already heavily used for these purposes in combination with "
"an OpenStack public or private cloud."
msgstr "容灾恢复及业务连续性：在第二个站点的云中使用廉价的存储和实例管理就是一个很好的案例。公有云通常就有为这样的场景服务。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml156(para)
msgid ""
"Federated hypervisor-instance management: Adding self-service, charge back "
"and transparent delivery of the right resources from a federated pool can be"
" cost effective. In a hybrid cloud environment, this is a particularly "
"important consideration. Look for a cloud that provides cross-platform "
"hypervisor support and robust instance management tools."
msgstr "统一管理hypervisor及其实例：增加自服务，费用回收和透明交付正确的资源，这些在一个混合hypervisor的池中是有成本效益的。在一个混合云环境中，这是特别重要的考虑因素。寻找一个可以提供跨平台管理hypervisor和健壮的实例管理工具的云。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml165(para)
msgid ""
"Application portfolio integration: An enterprise cloud delivers better "
"application portfolio management and more efficient deployment by leveraging"
" self-service features and rules for deployments based on types of use. A "
"common driver for building hybrid cloud architecture is to stitch together "
"multiple existing cloud environments that are already in production or "
"development."
msgstr "应用组合集成：一个企业级云可以交付更好的应用组合管理，通过利用自服务特性可更高效的完成部署，基于类型使用的部署规则。通常构建一个混合云架构的驱动力是，将已经是产品化的云环境无缝组合共同工作。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml179(para)
msgid ""
"Migration scenarios: A common reason to create a hybrid cloud architecture "
"is to allow the migration of applications between different clouds. This may"
" be because the application will be migrated permanently to a new platform, "
"or it might be because the application needs to be supported on multiple "
"platforms going forward."
msgstr "迁移场景：建立一个混合云架构的通用原因是允许在不同的云之间迁移应用。这也许是因为应用将永久迁移到新的平台，或者是因为应用为了走的更远需要被多个平台所支持。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml188(para)
msgid ""
"High availability: Another important reason for wanting a multiple cloud "
"architecture is to address the needs for high availability. By using a "
"combination of multiple locations and platforms, a design can achieve a "
"level of availability that is not possible with a single platform. This "
"approach does add a significant amount of complexity."
msgstr "高可用：使用混合云架构的另外一个重要的原因是交付需要高可用。通过使用多地点和多平台的组合，此设计可以是很高的一个可用级别，是不可能在单一的平台下实现的。这种做法确实显著的增加了架构的复杂度。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml197(para)
msgid ""
"In addition to thinking about how the workload will work on a single cloud, "
"the design must accommodate the added complexity of needing the workload to "
"run on multiple cloud platforms. The complexity of transferring workloads "
"across clouds needs to be explored at the application, instance, cloud "
"platform, hypervisor, and network levels."
msgstr "另外思考的内容是关于负载是如何在单一的云中工作的，设计必须纳入将负载运行在多个云平台时所增加的复杂度。跨云传递负载的复杂度需要遍历应用、实例、云平台、hypervisor以及网络层。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml204(title)
msgid "Tools considerations"
msgstr "工具考量"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml205(para)
msgid ""
"When working with designs spanning multiple clouds, the design must "
"incorporate tools to facilitate working across those multiple clouds. Some "
"of the user requirements drive the need for tools that will do the following"
" functions:"
msgstr "当设计跨多个云时，设计必须包含那些跨多个云工作的工具。一些由用户需求所驱动的工具需要具备下面功能："

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml211(para)
msgid ""
"Broker between clouds: Since the multiple cloud architecture assumes that "
"there will be at least two different and possibly incompatible platforms "
"that are likely to have different costs, brokering software is designed to "
"evaluate relative costs between different cloud platforms. These solutions "
"are sometimes referred to as Cloud Management Platforms (CMPs). Examples "
"include Rightscale, Gravitent, Scalr, CloudForms, and ManageIQ. These tools "
"allow the designer to determine the right location for the workload based on"
" predetermined criteria."
msgstr "云之间的代理: 在混合云架构中，由于至少包括两个不同的，还可能不兼容的平台，这就导致就有两种不同的成本，鉴于此，代理软件被设计为评估不同云平台之间的相对成本。这些解决方案有时可参考云管理平台(CMP)。这里举几个云管理平台的例子，Rightscale,Gravitent,Scalr,CloudForms以及ManageIQ.这些工具允许设计者根据预先定义的工作量以确定最佳位置。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml224(para)
msgid ""
"Facilitate orchestration across the clouds: CMPs are tools are used to tie "
"everything together. Cloud orchestration tools are used to improve the "
"management of IT application portfolios as they migrate onto public, "
"private, and hybrid cloud platforms. These tools are an important "
"consideration. Cloud orchestration tools are used for managing a diverse "
"portfolio of installed systems across multiple cloud platforms. The typical "
"enterprise IT application portfolio is still comprised of a few thousand "
"applications scattered over legacy hardware, virtualized infrastructure, and"
" now dozens of disjointed shadow public Infrastructure-as-a-Service (IaaS) "
"and Software-as-a-Service (SaaS) providers and offerings."
msgstr "跨云的轻松编排：CMP是用于将一切连在一起工作的工具。云编排工具是用于改进IT应用组合的管理，尤其是这些应用迁移到公有，私有或混合云平台。这些工具需要慎重考虑。云编排工具用于管理在跨多个云平台的已安装的系统中的多种组合应用。典型的企业级IT应用组合仍然是由散落在古老的硬件，虚拟化基础设施中的几千个应用，现在则由公有的基础设施即服务(IaaS)和软件即服务(SaaS)提供商来接管。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml242(title)
msgid "Network considerations"
msgstr "网络考虑"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml243(para)
msgid ""
"The network services functionality is an important factor to assess when "
"choosing a CMP and cloud provider. Considerations are functionality, "
"security, scalability and HA. Verification and ongoing testing of the "
"critical features of the cloud endpoint used by the architecture are "
"important tasks."
msgstr "当选择一家CMP或云供应商时，网络服务的功能是一个重要的因素。考虑的有功能、安全、扩展性和高可用。验证和测试云端点的临界的特性，对于架构来说是很重要的任务。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml250(para)
msgid ""
"Once the network functionality framework has been decided, a minimum "
"functionality test should be designed. This will ensure testing and "
"functionality persists during and after upgrades."
msgstr "一旦网络功能框架决定了，最小的功能测试应该被提及。这将能够确保测试期间和升级后的功能仍然可用。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml256(para)
msgid ""
"Scalability across multiple cloud providers may dictate which underlying "
"network framework you will choose in different cloud providers. It is "
"important to have the network API functions presented and to verify that "
"functionality persists across all cloud endpoints chosen."
msgstr "跨多个云供应商的可扩展性也许主导了用户选择哪个底层网络框架，拥有网络API功能和验证这些功能在跨所有的云端点的持久有效都是非常重要的。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml264(para)
msgid ""
"High availability implementations vary in functionality and design. Examples"
" of some common methods are active-hot-standby, active-passive and active-"
"active. High availability and a test framework needs to be developed to "
"insure that the functionality and limitations are well understood."
msgstr "高可用能实现不同的功能以及可以有不同的设计。一些通常使用的模式如主-热-备，主-备，及主-主。高可用及其测试框架需要被开发以确保功能和局限都能被理解。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml272(para)
msgid ""
"Security considerations include how data is secured between client and "
"endpoint and any traffic that traverses the multiple clouds, from "
"eavesdropping to DoS activities."
msgstr "安全考虑因素包括如何在客户端和端点之间保护数据，在多个云之间的任何流经之地，以及窃听，还有拒绝服务攻击。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml279(title)
msgid "Risk mitigation and management considerations"
msgstr "风险规避和管理考虑"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml281(para)
msgid ""
"Hybrid cloud architectures introduce additional risk because they add "
"additional complexity and potentially conflicting or incompatible components"
" or tools. However, they also reduce risk by spreading workloads over "
"multiple providers. This means, if one was to go out of business, the "
"organization could remain operational."
msgstr "混合云架构接入额外的风险是因为引进了复杂性、潜在的冲突或不兼容的组件或工具。尽管如此，它也同样降低了风险，可以跨多个供应商分担负载，这意味着，如一个供应商业务挂了，不会影响到整体的业务。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml287(para)
msgid ""
"Risks that will be heightened by using a hybrid cloud architecture include:"
msgstr "使用混合云架构可能增加风险的因素包括："

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml291(term)
msgid "Provider availability or implementation details"
msgstr "供应商可用性或实现细节"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml293(para)
msgid ""
"This can range from the company going out of business to the company "
"changing how it delivers its services. Cloud architectures are inherently "
"designed to be flexible and changeable; paradoxically, the cloud is both "
"perceived to be rock solid and ever flexible at the same time."
msgstr "从公司不能提供业务到公司变动的情况下如何交付他们的服务。云架构集成设计的灵活性和可变性。矛盾的是，云不可能同时提供健壮性和灵活性。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml303(term)
msgid "Differing SLAs"
msgstr "服务水平协议比较"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml305(para)
msgid ""
"Users of hybrid cloud environments potentially encounter some losses through"
" differences in service level agreements. A hybrid cloud design needs to "
"accommodate the different SLAs provided by the various clouds involved in "
"the design, and must address the actual enforceability of the providers' "
"SLAs."
msgstr "混合云计算环境的用户通过服务级别协议的差异可能会遇到一些损失。混合云设计需要，以适应由参与设计的各种云提供的不同服务水平协议，并且必须解决供应商的服务水平协议的实际可执行性。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml315(term)
msgid "Security levels"
msgstr "安全级别"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml317(para)
msgid ""
"Securing multiple cloud environments is more complex than securing a single "
"cloud environment. Concerns need to be addressed at, but not limited to, the"
" application, network, and cloud platform levels. One issue is that "
"different cloud platforms approach security differently, and a hybrid cloud "
"design must address and compensate for differences in security approaches. "
"For example, AWS uses a relatively simple model that relies on user "
"privilege combined with firewalls."
msgstr "混合云环境的安全要比单个云环境的安全更加的复杂。以下内容需要关注，但也不仅仅限于这几项，它们有：应用、网络以及云平台级别。这里有一个问题，那就是不同的云平台实现安全的途径不同。而混合云的设计恰恰被言中，必须面对不同的安全实现途径。举例来说，AWS使用了一个简单模式，依赖于用户权限和防火墙混合。"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml330(term)
msgid "Provider API changes"
msgstr "提供者 API 变化"

#: ./doc/arch-design/hybrid/section_user_requirements_hybrid.xml332(para)
msgid ""
"APIs are crucial in a hybrid cloud environment. As a consumer of a "
"provider's cloud services, an organization will rarely have any control over"
" provider changes to APIs. Cloud services that might have previously had "
"compatible APIs may no longer work. This is particularly a problem with AWS "
"and OpenStack AWS-compatible APIs. OpenStack was originally planned to "
"maintain compatibility with changes in AWS APIs. However, over time, the "
"APIs have become more divergent in functionality. One way to address this "
"issue is to focus on using only the most common and basic APIs to minimize "
"potential conflicts."
msgstr "API在混合云环境中的位置非常之关键。作为供应商云服务的消费者，一个组织需掌控供应商对API的变化。云服务也许是某种原因，依赖兼容的API不再支持了，这个问题尤其在AWS和OpenStack的AWS兼容API之间非常的明显。OpenStack最初计划维护AWS API的兼容性。但是，随着时间的推移，API在功能上越走越远。一个通用的解决此类问题的办法就是尽可能的使用通用的和基础的API去最小化的减少冲突。"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml25(None)
#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml88(None)
msgid ""
"@@image: '../figures/Multi-Cloud_Priv-AWS4.png'; "
"md5=3bba96b0b6ac0341a05581b00160ff17"
msgstr "@@image: '../figures/Multi-Cloud_Priv-AWS4.png'; md5=3bba96b0b6ac0341a05581b00160ff17"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml9(para)
msgid ""
"Once business and application requirements have been defined, the first step"
" for designing a hybrid cloud solution is to map out the dependencies "
"between the expected workloads and the diverse cloud infrastructures that "
"need to support them. By mapping the applications and the targeted cloud "
"environments, you can architect a solution that enables the broadest "
"compatibility between cloud platforms and minimizes the need to create "
"workarounds and processes to fill identified gaps. Note the evaluation of "
"the monitoring and orchestration APIs available on each cloud platform and "
"the relative levels of support for them in the chosen cloud management "
"platform."
msgstr "一旦业务需求和应用需求都定义好了，设计混合云解决方案的第一步就是制定出预期的负载和多种云基础设施之间的依赖，以支持好业务和应用需求。将应用和目标云环境对应起来，用户需要一个解决方案架构，尽可能的是云平台之间的兼容性良好，最小化减少创建问题解决，以及填补空白的流程。记住：在每个可用的云平台都要评估监测和orchestration API,以及选择云管理平台对他们支持的相关级别。"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml29(title)
msgid "Image portability"
msgstr "镜像移植"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml30(para)
msgid ""
"The majority of cloud workloads currently run on instances using hypervisor "
"technologies such as KVM, Xen, or ESXi. The challenge is that each of these "
"hypervisors use an image format that is mostly, or not at all, compatible "
"with one another. In a private or hybrid cloud solution, this can be "
"mitigated by standardizing on the same hypervisor and instance image format "
"but this is not always feasible. This is particularly evident if one of the "
"clouds in the architecture is a public cloud that is outside of the control "
"of the designers."
msgstr "当前运行实例的云的主要负载均使用hypervisor技术实现，如KVM,Xen,或ESXi。挑战来自于这些hypervisor使用的镜像格式虽然大部分兼容于彼此，但不是完全兼容。在私有或混合云解决方案中，可强制指定标准使用同一种hypervisor或实例镜像格式，但是这不太现实。特别是如果在架构中存在一个云是公有云时，这就根本不在设计者的控制之内。"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml40(para)
msgid ""
"There are conversion tools such as virt-v2v (<link "
"href=\"http://libguestfs.org/virt-v2v\">http://libguestfs.org/virt-"
"v2v</link>) and virt-edit (<link href=\"http://libguestfs.org/virt-"
"edit.1.html\">http://libguestfs.org/virt-edit.1.html</link>) that can be "
"used in those scenarios but they are often not suitable beyond very basic "
"cloud instance specifications. An alternative is to build a thin operating "
"system image as the base for new instances. This facilitates rapid creation "
"of cloud instances using cloud orchestration or configuration management "
"tools, driven by the CMP, for more specific templating. Another more "
"expensive option is to use a commercial image migration tool. The issue of "
"image portability is not just for a one time migration. If the intention is "
"to use the multiple cloud for disaster recovery, application diversity or "
"high availability, the images and instances are likely to be moved between "
"the different cloud platforms regularly."
msgstr "有一些转换工具比如virt-v2v  (<link href=\"http://libguestfs.org/virt-v2v\">http://libguestfs.org/virt-v2v</link>) 以及virt-edit (<link href=\"http://libguestfs.org/virt-edit.1.html\">http://libguestfs.org/virt-edit.1.html</link>) 在某些时候也许可以解决上述场景中的问题，但是不太适合甚至是最基本的云实例。一个替代办法是构建一个最小的操作系统镜像为新实例提供服务。这大大有助于迅速创建云实例，使用云orchestration或由CMP所驱动的配置管理工具，但这需要更多特定的模板。另外一个昂贵的选择是使用商业镜像迁移工具。问题是镜像移植并非说是一次就搞定，如果使用多个云的功能是灾难恢复、应用多样或高可用的话，镜像和实例会经常的在不同的云之间移动，而没一次移动都得进行相应的转换。"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml60(title)
msgid "Upper-layer services"
msgstr "上层服务"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml61(para)
msgid ""
"Many clouds offer complementary services over and above the basic compute, "
"network, and storage components. These additional services are often used to"
" simplify the deployment and management of applications on a cloud platform."
msgstr "很多云都在基本的计算、网络、存储组件之上提供补充的服务，这些额外的服务在云平台中通常用于简单的部署以及管理应用。"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml65(para)
msgid ""
"Consideration is required to be given to moving workloads that may have "
"upper-layer service dependencies on the source cloud platform to a "
"destination cloud platform that may not have a comparable service. "
"Conversely, the user can implement it in a different way or by using a "
"different technology. For example, moving an application that uses a NoSQL "
"database service such as MongoDB that is delivered as a service on the "
"source cloud, to a destination cloud that does not offer that service or may"
" only use a relational database such as MySQL, could cause difficulties in "
"maintaining the application between the platforms."
msgstr "考虑到迁移负载的需求也许有上层服务的依赖，原有的云平台和目标云平台也许拥有完全不同的服务，换个角度讲，用户使用不同的方法实现或者使用了完全不同的技术。举例来说，原有云交付的服务是使用NoSQL数据库服务MongoDB，而目标云不提供此服务或者使用的是关系性数据库MySQL的服务，迁移此应用将不是很现实，有大部分的数据、应用需要维护。"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml76(para)
msgid ""
"There are a number of options that might be appropriate for the hybrid cloud"
" use case:"
msgstr "也许较适合混合云用例的几点属性："

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml80(para)
msgid ""
"Create a baseline of upper-layer services that are implemented across all of"
" the cloud platforms. For platforms that do not support a given service, "
"create a service on top of that platform and apply it to the workloads as "
"they are launched on that cloud. For example, through the "
"<glossterm>Database Service</glossterm> for OpenStack "
"(<glossterm>trove</glossterm>), OpenStack supports MySQL as a service but "
"not NoSQL databases in production. To either move from or run alongside AWS,"
" a NoSQL workload must use an automation tool, such as the Orchestration "
"module (heat), to recreate the NoSQL database on top of OpenStack."
msgstr "创建跨所有云平台所实现上层服务的基准，对于平台来说不支持给定的服务，在平台的顶部创建一个这样的服务，且关注他们在云中所承载的负载。举例来说，OpenStack的<glossterm>数据库服务</glossterm>是 (<glossterm>trove</glossterm>)，OpenStack支持MySQL为服务，而在生产环境不支持NoSQL数据库，无论从AWS迁移过来还是在AWS时运行，一个NoSQL的应用必须使用自动化的工具，诸如Orchestration模块(heat)，在OpenStack的顶部重新创建NoSQL数据库。"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml95(para)
msgid ""
"Deploy a <glossterm>Platform-as-a-Service (PaaS)</glossterm> technology such"
" as Cloud Foundry or OpenShift that abstracts the upper-layer services from "
"the underlying cloud platform. The unit of application deployment and "
"migration is the PaaS and leverages the services of the PaaS and only "
"consumes the base infrastructure services of the cloud platform. The "
"downside to this approach is that the PaaS itself then potentially becomes a"
" source of lock-in."
msgstr "部署诸如Cloud Foundry或OpenShift<glossterm>平台即服务 (PaaS)</glossterm>技术，是从底层云平台抽象上层服务。应用部署和迁移的单位是PaaS和利用了的PaaS的服务，并只消耗了云平台的基础设施服务。这样做的缺点的方法是，将PAAS本身则潜在地变成锁定的来源。"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml107(para)
msgid ""
"Use only the base infrastructure services that are common across all cloud "
"platforms. Use automation tools to create the required upper-layer services "
"which are portable across all cloud platforms. For example, instead of using"
" any database services that are inherent in the cloud platforms, launch "
"cloud instances and deploy the databases on to those instances using scripts"
" or various configuration and application deployment tools."
msgstr "跨越所有云平台仅仅使用最基本的基础设施服务很平常，使用自动化工具来创建需要的可跨所有云平台移植的上层服务，举例来说，替代继承云平台内部的使用任何数据库服务的是，使用脚本或各种配置和应用部署工具来启动云实例以及将数据库部署到这些实例中。"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml119(title)
msgid "Network services"
msgstr "网络服务"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml120(para)
msgid ""
"Network services functionality is a significant barrier for multiple cloud "
"architectures. It could be an important factor to assess when choosing a CMP"
" and cloud provider. Considerations are: functionality, security, "
"scalability and <glossterm>high availability (HA)</glossterm>. Verification "
"and ongoing testing of the critical features of the cloud endpoint used by "
"the architecture are important tasks."
msgstr "网络服务功能在多云架构中是有巨大障碍的，当选择CMP和云提供商时此因素非常的重要，考虑因素：功能、安全、扩展以及<glossterm>高可用 (HA)</glossterm>。验证和不断的测试云端点的一些临界特性，用于架构设计是非常重要的任务。"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml130(para)
msgid ""
"Once the network functionality framework has been decided, a minimum "
"functionality test should be designed to confirm that the functionality is "
"in fact compatible. This will ensure testing and functionality persists "
"during and after upgrades. Note that over time, the diverse cloud platforms "
"are likely to de-synchronize if care is not taken to maintain compatibility."
" This is a particular issue with APIs."
msgstr "一旦网络功能框架已经决定，起码得设计一个功能测试确保功能的兼容性。此测试可以确保在组件升级前后的功能一致性。需要注意的是随着时间的推移，多样化的云平台如果不去用心去维护兼容性，会出现同步异常，这尤其在API上是常见的问题。"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml141(para)
msgid ""
"Scalability across multiple cloud providers may dictate which underlying "
"network framework is chosen for the different cloud providers. It is "
"important to have the network API functions presented and to verify that the"
" desired functionality persists across all chosen cloud endpoint."
msgstr "跨多个云提供商的可扩展性要求所选择的覆盖网络框架须满足不同云提供商。网络API功能很重要，而且需要验证其跨所有云端点的与预料中的功能一致。"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml149(para)
msgid ""
"High availability (HA) implementations vary in functionality and design. "
"Examples of some common methods are active-hot-standby, active-passive and "
"active-active. High availability and a test framework need to be developed "
"to insure that the functionality and limitations are well understood."
msgstr "高可用(HA)有不同的功能和设计实现，举几个常见的方法，活动的-热点-备用，活动-非活动，以及双活等。高可用和测试框架需要被开发，确保其功能和局限都很好理解。"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml157(para)
msgid ""
"Security considerations, such as how data is secured between client and "
"endpoint and any traffic that traverses the multiple clouds, from "
"eavesdropping to <glossterm baseform=\"denial of service "
"(DoS)\">DoS</glossterm> activities must be addressed. Business and "
"regulatory requirements dictate the security approach that needs to be "
"taken."
msgstr "安全考虑，诸如数据如何在客户端和端点之间保证安全，以及任何的流量在多个云之间的传送，从窃听到 <glossterm baseform=\"denial of service (DoS)\">拒绝服务攻击</glossterm>行为等都得考虑到，业务和监管需要采取安全的方法。"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml167(para)
msgid ""
"Replication has been the traditional method for protecting object store "
"implementations. A variety of different implementations have existed in "
"storage architectures. Examples of this are both synchronous and "
"asynchronous mirroring. Most object stores and back-end storage systems have"
" a method for replication that can be implemented at the storage subsystem "
"layer. Object stores also have implemented replication techniques that can "
"be tailored to fit a clouds needs. An organization must find the right "
"balance between data integrity and data availability. Replication strategy "
"may also influence the disaster recovery methods implemented."
msgstr "复制是实现保护对象存储的传统做法，在已经存在的存储架构中有许多种不同的实现，这方面的例子有同步或异步的镜像，多数的对象存储和后端存储系统都有在存储子系统中事项复制的方法。对象存储通常会实现复制技术，而这正是云的需求而量身定制的，一个组织必须找到正确的平衡，在数据完整性和数据可用性之间。复制策略也可能影响到灾难恢复的实现方法。"

#: ./doc/arch-design/hybrid/section_architecture_hybrid.xml179(para)
msgid ""
"Replication across different racks, data centers and geographical regions "
"has led to the increased focus of determining and ensuring data locality. "
"The ability to guarantee data is accessed from the nearest or fastest "
"storage can be necessary for applications to perform well. Examples of this "
"are Hadoop running in a cloud. The user either runs with a native HDFS, when"
" applicable, or on a separate parallel file system such as those provided by"
" Hitachi and IBM. Special consideration should be taken when running "
"embedded object store methods to not cause extra data replication, which can"
" create unnecessary performance issues. Another example of ensuring data "
"locality is by using Ceph. Ceph has a data container abstraction called a "
"pool. Pools can be created with replicas or erasure code. Replica based "
"pools can also have a rule set defined to have data written to a \"local\" "
"set of hardware which would be the primary access and modification point."
msgstr "复制跨不同的机架，不同的数据中心，甚至是不同地理位置的region，目的是增加确定和确保数据局部性。保证从最近或最快的存储获取数据的能力对于应用的性能表现良好是有必要的，举例来说Hadoop运行在云中，用户不仅运行着HDFS，还使用了并行文件系统，类似的提供商有日立和IBM。一个需要特别考虑的情况是，当运行嵌入式的对象存储方法毋须额外的数据复制，那样的话会带来不必要的性能问题。另外一个确保数据局部性的例子是使用Ceph,Ceph拥有一个数据容器抽象，叫做池，池可以被复制的创建，基于复制的池有些规则，用来定义数据写入本地硬件集合，那可能是主要的访问和修改点。"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml49(None)
msgid ""
"@@image: '../figures/Multi-Cloud_Priv-Pub3.png'; "
"md5=8fdb44f876665e2aa1bd793607c4537e"
msgstr "@@image: '../figures/Multi-Cloud_Priv-Pub3.png'; md5=8fdb44f876665e2aa1bd793607c4537e"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml129(None)
msgid ""
"@@image: '../figures/Multi-Cloud_failover2.png'; "
"md5=5a7be4a15d381288659c7268dff6724b"
msgstr "@@image: '../figures/Multi-Cloud_failover2.png'; md5=5a7be4a15d381288659c7268dff6724b"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml9(para)
msgid "Multi-cloud environments are designed for these use cases:"
msgstr "混合云环境一般被设计为如下场景："

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml13(para)
msgid "Bursting workloads from private to public OpenStack clouds"
msgstr "从私有云突破负载到公有的OpenStack云"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml17(para)
msgid "Bursting workloads from private to public non-OpenStack clouds"
msgstr "从私有云突破负载到公有的非OpenStack云"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml21(para)
msgid "High availability across clouds (for technical diversity)"
msgstr "跨云的高可用性(技术多样)"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml25(para)
msgid ""
"This chapter discusses examples of environments that address each of these "
"use cases."
msgstr "本章讨论这些场景的每个环境实例。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml27(para)
msgid ""
"Company A's data center is running dangerously low on capacity. The option "
"of expanding the data center will not be possible in the foreseeable future."
" In order to accommodate the continuously growing need for development "
"resources in the organisation, Company A decided to use resources in the "
"public cloud."
msgstr "A公司的数据中心运行在危险的低容量环境中。在可预料的将来是不可能扩展此数据中心的。为了满足持续增长的开发资源需求，公司决定使用公有云资源。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml33(para)
msgid ""
"Company A has an established data center with a substantial amount of "
"hardware. Migrating the workloads to a public cloud is not feasible."
msgstr "A公司已经拥有显著数量的硬件的数据中心，将负载迁移到公有云中不是可行的方式。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml36(para)
msgid ""
"The company has an internal cloud management platform that will direct "
"requests to the appropriate cloud, depending on the local capacity."
msgstr "公司已经有个内部的云管理平台，这是选择合适的云的直接需求，当然还依赖于当前本地的容量。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml40(para)
msgid ""
"This is a custom in-house application written for this specific purpose."
msgstr "这是一个定制的内部应用，为了特别的目的而写的。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml43(para)
msgid "This solution is described in the figure below."
msgstr "此解决方案的描述实例如下图所示。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml52(para)
msgid ""
"This example shows two clouds, with a Cloud Management Platform (CMP) "
"connecting them."
msgstr "此例子展现了两个云，以及一个云管理平台(CMP)，CMP将两个云连接起来。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml55(para)
msgid ""
"This guide does not attempt to cover a specific CMP, but describes how the "
"Orchestration and Telemetry services handle, manage, and control workloads. "
"This is shown in the diagram above."
msgstr "本书不会尝试去阐释某个特定的CMP，但是上面示意图描述了典型的使用编排组件如何处理负载和Telemetry服务。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml60(para)
msgid ""
"The private OpenStack cloud has at least one controller, and at least one "
"compute node. It includes metering provided by the Telemetry module. The "
"Telemetry module captures the load increase, and the CMP processes the "
"information. If there is available capacity, the CMP uses the OpenStack API "
"to call the Orchestration service. This creates instances on the private "
"cloud in response to user requests. When capacity is not available on the "
"private cloud, the CMP issues a request to the Orchestration service API of "
"the public cloud. This creates the instance on the public cloud."
msgstr "其中的私有云是一个基于OpenStack搭建的，有一个或多个控制节点，也有一个或多个计算节点。它包括了有Telemetry模块提供的计费服务，当负载增加时，Telemetry会捕获到，并且将这一消息交由CMP去处理。在私有云的容量够用时，CMP使用OpenStack提供的API,调\n用编排服务来创建实例，从而响应用户的需求。当私有云容量不够用时，CMP会向公有云的编排服务API请求，让之去公有云中创建实例。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml71(para)
msgid ""
"In this example, \"Company A\" decided not to direct the deployment to an "
"external public cloud over concerns regarding resource control, security, "
"and increase operational expense"
msgstr "在此例中，“A公司”整个的部署都不是直接到外部公有云的，因为公司担心下列情形：对资源缺少控制、整个控制的安全、增加运营费用。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml77(title)
msgid "Bursting to a public non-OpenStack cloud"
msgstr "突破到一个不是OpenStack的公有云"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml78(para)
msgid ""
"The second example looks into bursting workloads from the private cloud into"
" a non-OpenStack public cloud using Amazon Web Services (AWS) to take "
"advantage of additional capacity and scale applications."
msgstr "第二个例子是从私有云突破负载到非OpenStack公有云中，比如亚马逊web服务(AWS),以增加容量和随需扩展应用。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml82(para)
msgid ""
"For an OpenStack-to-AWS hybrid cloud, the architecture looks similar to the "
"figure below:"
msgstr "对于OpenStack-to-AWS的混合云来说，它的架构和下面示意图非常的相像:"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml91(para)
msgid ""
"Company B states that the developers were already using AWS and did not want"
" to change the cloud provider."
msgstr "公司B的开发者已经在使用AWS来完成他们的一些工作而且不打算切换云提供商。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml94(para)
msgid ""
"If the CMP is capable of connecting an external cloud provider with the "
"appropriate API, the workflow process will remain the same as the previous "
"scenario. The actions the CMP takes such as monitoring loads, and creating "
"new instances, stay the same. However, the CMP will perform actions in the "
"public cloud using applicable API calls."
msgstr "只要CMP能够使用合适的API连接到外部云提供商，工作流流程仍然和以前的场景没有多大差别。CMP的一些列诸如监测负载，创建>新的实例等动作都是一样的，但是它们必须使用合适的API调用来访问公有云。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml100(para)
msgid ""
"If the public cloud is AWS, the CMP would use the EC2 API to create a new "
"instance and assign an Elastic IP. That IP can then be added to HAProxy in "
"the private cloud. The CMP can also reference AWS-specific tools such as "
"CloudWatch and CloudFormation."
msgstr "，如果公有云提供商是亚马逊Web服务，CMP须使用EC2 API来创建新的实例以及分配一个弹性IP，而在以前在私有云中IP要添加到HAProxy中。CMP也需要参考AWS特有的工具，如CloudWatch和CloudFormation。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml105(para)
msgid ""
"Several open source tool kits for building CMPs are available and can handle"
" this kind of translation. This includes ManageIQ, jClouds, and JumpGate."
msgstr "有几款开源工具所构建的CMP已经可用，可以掌控这种类型的转换，它们有ManageIQ,jClouds,以及JumpGate。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml111(title)
msgid "High availability/disaster recovery"
msgstr "高可用/灾难恢复"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml112(para)
msgid ""
"Company C requires their local data center to be able to recover from "
"failure. Some of the workloads currently in use are running on their private"
" OpenStack cloud. Protecting the data involves Block Storage, Object "
"Storage, and a database. The architecture is designed to support the failure"
" of large components of the system, yet ensuring that the system will "
"continue to deliver services. While the services remain available to users, "
"the failed components are restored in the background based on standard best "
"practice DR policies. To achieve the objectives, data is replicated to a "
"second cloud, in a geographically distant location. The logical diagram of "
"the system is described in the figure below:"
msgstr "C公司有着当他们本地的数据中心发生灾难性的事故后能够恢复的需求，一些应用当前运行在他们的私有OpenStack云中，需要保护的数据相关有块存储、对象存储以及数据库，架构的设计支持系统大量组件失效后，仍然能够确保系统继续交付服务。当服务仍然为用户\n可用时，系统在后台通过标准的最佳实践的灾难恢复规则来恢复失效的组件。为了实现这些目标，数据复制到第二个云中，且是远距离的不同地理位置。关于此系统描述的逻辑图见下面示意图："

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml132(para)
msgid ""
"This example includes two private OpenStack clouds connected with a CMP. The"
" source cloud, OpenStack Cloud 1, includes a controller and at least one "
"instance running MySQL. It also includes at least one Block Storage volume "
"and one Object Storage volume. This is so that the data is available to the "
"users at all times. The details of the method for protecting each of these "
"sources of data differs."
msgstr "此例子包含了由一个云管理平台连接的两个私有OpenStack云，来源的云，即1号OpenStack云，包括一个控制器和至少一个实例运行MySQL,也包括至少一个块存储卷和一个对象存储卷，以为用户在所有时间的数据都可用，该方法的用于保护每个数据不同的这些来源的细节。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml140(para)
msgid ""
"Object Storage relies on the replication capabilities of the Object Storage "
"provider. OpenStack Object Storage is enabled so that it creates "
"geographically separated replicas that take advantage of this feature. It is"
" configured so that at least one replica exists in each cloud. In order to "
"make this work, a single array spanning both clouds is configured with "
"OpenStack Identity. Using Federated Identity, it talks to both clouds, "
"communicating with OpenStack Object Storage through the Swift proxy."
msgstr "对象存储是否有复制能力要看对象存储具体的提供商。OpenStack对象存储内嵌此特性，可以创建基于地理位置不同的复制，在每个云中至少要配置一份复制，为了能够在单个磁盘可以工作，云需要被配置使用OpenStack身份且是联合的身份，且和通过Swift代理将多个\n云的OpenStack对象存储彼此通信。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml149(para)
msgid ""
"For Block Storage, the replication is a little more difficult, and involves "
"tools outside of OpenStack itself. The OpenStack Block Storage volume is not"
" set as the drive itself but as a logical object that points to a physical "
"back end. The disaster recovery is configured for Block Storage for "
"synchronous backup for the highest level of data protection, but "
"asynchronous backup could have been set as an alternative that is not as "
"latency sensitive. For asynchronous backup, the Block Storage API makes it "
"possible to export the data and also the metadata of a particular volume, so"
" that it can be moved and replicated elsewhere. More information can be "
"found here: <link href=\"https://blueprints.launchpad.net/cinder/+spec"
"/cinder-backup-volume-metadata-support\"> "
"https://blueprints.launchpad.net/cinder/+spec/cinder-backup-volume-metadata-"
"support</link>."
msgstr "对于块存储来说，复制多少有一些困难，且OpenStack本身不提供这样的工具。OpenStack块存储卷并非是驱动器本身而是指向后端物理设备的一个逻辑对象，为块存储配置灾难恢复就得同步备份，就得是高级别的数据保护，但是异步备份只能是为延迟敏感的替代方案，\n对于一步备份来说，块存储API须能够做到导出数据以及特别卷的元数据，所以它可以迁移和复制到任何地方。关于此方面更多信息请参考 <link href=\\\"https://blueprints.launchpad.net/cinder/+spec/cinder-backup-volume-metadata-support\\\">https://blueprints.launchpad.net/cinder/+spec/cinder-backup-volume-metadata-support</link>。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml164(para)
msgid ""
"The synchronous backups create an identical volume in both clouds and "
"chooses the appropriate flavor so that each cloud has an identical back end."
" This was done by creating volumes through the CMP. The CMP knows to create "
"identical volumes in both clouds. Once this is configured, a solution, "
"involving DRDB, is used to synchronize the actual physical drives."
msgstr "同步备份，同时在云中创建相同的卷，且选择合适的类型，这样每个云都有相同的后端。这可以通过CMP来完成创建卷，因为CMP知道两个云创建相同的卷。一旦这被配置，一个解决方案包括DRDB就可以被用户同步真实的物理设备。"

#: ./doc/arch-design/hybrid/section_prescriptive_examples_hybrid.xml171(para)
msgid ""
"The database component is backed up using synchronous backups. MySQL does "
"not support geographically diverse replication, so disaster recovery is "
"provided by replicating the file itself. As it is not possible to use Object"
" Storage as the back end of a database like MySQL, Swift replication was not"
" an option. It was decided not to store the data on another geo-tiered "
"storage system, such as Ceph, as Block Storage. This would have given "
"another layer of protection. Another option would have been to store the "
"database on an OpenStack Block Storage volume and backing it up just as any "
"other Block Storage."
msgstr "数据库组件的备份使用同步备份。MySQL不支持跨地区的复制，所以灾难恢复是由复制文件本身来提供的。在类似MySQL数据库后端使用对象存储是不可能的，所以Swift的复制在这里就没有用武之地。它也不能被决定使用另外其他的地理分层的存储系统来存储数据，诸>如Ceph作为块存储。它必须使用另外层次的保护，其中的一个选择就是使用OpenStack块存储卷来存储数据库，而且和块存储的备份一样来>备份数据库。"

#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml9(para)
msgid ""
"Hybrid cloud deployments present complex operational challenges. There are "
"several factors to consider that affect the way each cloud is deployed and "
"how users and operators will interact with each cloud. Each cloud provider "
"implements infrastructure components differently. This can lead to "
"incompatible interactions with workloads, or a specific Cloud Management "
"Platform (CMP). Different cloud providers may also offer different levels of"
" integration with competing cloud offerings."
msgstr "混合云的部署有着复杂操作的挑战。有好多种因素会影响到每个云部署的方法需要被考虑，以及用户和运维人员在每个云中的互操作性。不是所有的云提供商提供一样的实现基础设施组件，这就会导致互操作性的兼容性，无论是负载还是一个特别的云管理平台(CMP)。不同的云提供商提供不同级别的集成，且相互竞争。"

#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml18(para)
msgid ""
"Monitoring is an important aspect to consider when selecting a CMP. Gaining "
"valuable insight into each cloud is critical to gaining a holistic view of "
"all involved clouds. It is vital to determine whether an existing CMP "
"supports monitoring of all the clouds involved, or if compatible APIs are "
"available to be queried for necessary information. Gather all the "
"information about each cloud, you can now take appropriate actions on the "
"offline data to avoid impacting workloads."
msgstr "当选择一个云管理平台时，其中一个最重要的因素考虑就是监测。 获得有价值的洞察每个云是获得所有云整体视图的关键。在现有的CMP中选择的话，决策的条件有，它是否支持监测所有的云平台，是否有兼容的API可用于查询必要的信息。一旦所有的关于云的信息能够被收集和存储在一个可搜索的数据库中，数据可以被离线操作，负载就不会受到特别的影响。"

#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml28(title)
msgid "Agility"
msgstr "敏捷性"

#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml29(para)
msgid ""
"The implemention of a hybrid cloud solution provides application "
"availability across different cloud environments and technologies. This "
"availability enables the deployment to survive disaster in any single cloud "
"environment. Each cloud should provide the means to quickly spin up new "
"instances in the case of capacity issues or complete unavailability of a "
"single cloud installation."
msgstr "实现一个混合云解决方案须提供应用跨不同的云环境和技术的可用性。这种可用性是激活在任何一个单一的云环境中发生灾难时仍然可用。每个云都得提供在发生容量问题或在某单个云中完全失效的情况下能够快速的创建新的实例。"

#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml40(para)
msgid ""
"It is important to understand the type of application workload that is to be"
" deployed across a hybrid cloud environment. Enterprise workloads that "
"depend on the underlying infrastructure for availability are not designed to"
" run on OpenStack. Although these types of applications can run on an "
"OpenStack cloud, if the application is not able to tolerate infrastructure "
"failures, it is likely to require significant operator intervention to "
"recover. However, cloud workloads are designed to handle fault tolerance. "
"The SLA of the application is not tied to the underlying infrastructure. "
"Ideally, cloud applications are designed to recover when entire racks and "
"even data centers full of infrastructure experience an outage."
msgstr "理解应用负载将被部署到跨混合云环境中的类型显得非常重要。依赖于可用性的底层基础设施的企业级负载不是为运行在OpenStack而设计的，尽管这些类型的应用可以运行在OpenStack云中，如果应用没有基础设施失效后的容错，那么显然就需要运维人员手动介入来恢复。云负载，尽管时刻牢记失效容错的设计以及应用的SLA也不会和底层基础设施捆绑在一起。理想情况下，云应用将会被设计为当整个机架甚至数据中心的基础设施都失效的情况下可以恢复。"

#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml57(para)
msgid ""
"If the deployment includes a public cloud, predicting upgrades may not be "
"possible. Examine the advertised SLA for any public cloud provider being "
"used."
msgstr "如果一公有云已经部署，就无须去考虑升级的事情。一定要检查正在使用的所有公有云提供商他们所宣传的SLA。"

#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml61(para)
msgid ""
"At massive scale, even when dealing with a cloud that offers an SLA with a "
"high percentage of uptime, workloads must be able to recover at short "
"notice."
msgstr "在规模较大时，尽管他们提供非常高百分比的在线时间，但更加关心负载必须在短时间内能够被恢复。"

#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml66(para)
msgid ""
"When upgrading private cloud deployments, care must be taken to minimize "
"disruption by making incremental changes and providing a facility to either "
"rollback or continue to roll forward when using a continuous delivery model."
msgstr "当更新私有云部署时，务必小心谨慎，采用增量的变化最小化失误，同时提供回滚或继续往前的能力，当使用持续交付模式时。"

#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml71(para)
msgid ""
"Upgrades to the CMP may need to be completed in coordination with any of the"
" hybrid cloud upgrades. This is necessary whenever API changes are made."
msgstr "另外一个需要考虑的是，升级CMP需要完成任何混合云升级的协同，这对于当任何时候API变动时是必要的，用于支持新的功能的一个云的解决方案。"

#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml77(title)
msgid "Network Operation Center"
msgstr "网络操作中心"

#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml78(para)
msgid ""
"It is important to recognize control over infrastructure particulates when "
"planning the Network Operation Center (NOC) for a hybrid cloud environment. "
"If a significant portion of the cloud is on externally managed systems, "
"prepare for situations where it may not be possible to make changes. "
"Additionally, situations of conflict may arise in which multiple providers "
"have differing points of view on the way infrastructure must be managed and "
"exposed. This can lead to delays in root cause and analysis where each "
"insists the blame lies with the other provider."
msgstr "当为一个混合云环境规划网络运维中心(NOC)时，认识到哪里是每个基础设施控制驻留点很重要。如果云的显著部分是由外部管理系统来管理的，就得准备好一下子不能变更所有或大多数的计划时间做不到的情形。另外，冲突的情况也会上升，多个供应商对于基础设施管理和暴露的方法是有不同的视野的。这会导致延迟找到根本原因，分析其中，每个供应商都会坚持对其他供应商撒谎。"

#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml89(para)
msgid ""
"It is important to ensure that the structure put in place enables connection"
" of the networking of both clouds to form an integrated system, keeping in "
"mind the state of handoffs. These handoffs must both be as reliable as "
"possible and include as little latency as possible to ensure the best "
"performance of the overall system."
msgstr "确保到位的结构使两个云的联网的连接，以形成一个集成的系统是很重要的，头脑中切记切换的状态，那些切换必须不仅保证尽可能的可靠还得包括尽可能的保持最小延迟，以确保整个系统拥有最佳性能。"

#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml98(title)
msgid "Maintainability"
msgstr "可维护性"

#: ./doc/arch-design/hybrid/section_operational_considerations_hybrid.xml99(para)
msgid ""
"Operating hybrid clouds is a situation in which there is a greater reliance "
"on third party systems and processes. As a result of a lack of control of "
"various pieces of a hybrid cloud environment, it is not possible to "
"guarantee proper maintenance of the overall system. Instead, the user must "
"be prepared to abandon workloads and spin them up again in an improved "
"state. Having a hybrid cloud deployment does, however, provide agility for "
"these situations by allowing the migration of workloads to alternative "
"clouds in response to cloud-specific issues."
msgstr "操作混合云是一个非常信赖第三方系统和流程的情况，结果就是对混合云环境的各个环节失去控制，其实也没有必要可能将所有系统保持适当的维护。取而代之的是，用户必须准备好放弃负载且在改进的状态下再生成一次。已经部署完成一个混合云，为上述情形提供敏捷方法，允许迁移负载到替代的云中以响应针对云的特殊问题。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml13(para)
msgid ""
"A hybrid cloud environment requires inspection and understanding of "
"technical issues that are not only outside of an organization's data center,"
" but potentially outside of an organization's control. In many cases, it is "
"necessary to ensure that the architecture and CMP chosen can adapt to, not "
"only to different environments, but also to the possibility of change. In "
"this situation, applications are crossing diverse platforms and are likely "
"to be located in diverse locations. All of these factors will influence and "
"add complexity to the design of a hybrid cloud architecture."
msgstr "一个混合云环境需要仔细的诊断，且要理解技术问题不仅是它不在企业组织的数据中心内，而且可能都不在企业组织的控制范围，在多数场景下，有必要确保架构和CMP的选择是适合的，不仅是不同的环境，还有可能的变化。在此情形下，应用均是跨不同平台且可能被定位到不同的位置。所有这些因素会影响和增加混合云架构设计的复杂性。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml23(para)
msgid ""
"The only situation where cloud platform incompatibilities are not going to "
"be an issue is when working with clouds that are based on the same version "
"and the same distribution of OpenStack. Otherwise incompatibilities are "
"virtually inevitable."
msgstr "基于同个版本或者同个发行版的OpenStack不会因为云平台的兼容性而引发问题，这是唯一的情况，否则不兼容的情形必然会发生。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml28(para)
msgid ""
"Incompatibility should be less of an issue for clouds that exclusively use "
"the same version of OpenStack, even if they use different distributions. The"
" newer the distribution in question, the less likely it is that there will "
"be incompatibilities between version. This is due to the fact that the "
"OpenStack community has established an initiative to define core functions "
"that need to remain backward compatible between supported versions. The "
"DefCore initiative defines basic functions that every distribution must "
"support in order to bear the name \"OpenStack\"."
msgstr "应该为云尽可能的较少不兼容的问题，其中一个办法就是完全使用同一个版本的OpenStack,哪怕是使用不同的发行吧。越新的发行版，不同版本的不兼容性越少。这得归功于OpenStack社区所建立的主动定义了核心功能需要在支持的版本中向后兼容。DefCore定义了基本功能，每个发行版必须支持，否则的话那还叫什么\"OpenStack“。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml38(para)
msgid ""
"Some vendors, however, add proprietary customizations to their "
"distributions. If an application or architecture makes use of these "
"features, it will be difficult to migrate to or use other types of "
"environments. Anyone considering incorporating older versions of OpenStack "
"prior to Havana should consider carefully before attempting to incorporate "
"functionality between versions. Internal differences in older versions may "
"be so great that the best approach might be to consider the versions to be "
"essentially diverse platforms, as different as OpenStack and Amazon Web "
"Services or Microsoft Azure."
msgstr "一些供应商，在他们的发行版中增加了商业的定制，如果应用或架构中用到了这些特性，就会导致迁移到或使用其他类型的环境很困难。任何人考虑旧版本OpenStack互操作性，在Havana时代尤其是，在版本之间的互操作性功能确认之前要仔细的考虑。旧的版本之间的内部差异要远远好于不同平台，比如OpenStack与亚马逊web 服务或者是OpenStack与微软的Azure。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml49(para)
msgid ""
"The situation is more predictable if using different cloud platforms is "
"incorporated from inception. If the other clouds are not based on OpenStack,"
" then all pretense of compatibility vanishes, and CMP tools must account for"
" the myriad of differences in the way operations are handled and services "
"are implemented. Some situations in which these incompatibilities can arise "
"include differences between the way in which a cloud:"
msgstr "如果从一开始就纳入使用不同的云平台情况就会更好的预测。如果另外的云不是基于OpenStack的话，就几乎没有什么兼容性可言，CMP工具就需要计入掌控无数不同操作和服务的实现。一些情况会增加他们的不兼容性，包括在云中使用不同的方法："

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml59(para)
msgid "Deploys instances"
msgstr "部署实例"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml62(para)
msgid "Manages networks"
msgstr "管理网络"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml65(para)
msgid "Treats applications"
msgstr "Treats 应用"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml68(para)
msgid "Implements services"
msgstr "实现服务"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml73(para)
msgid ""
"One of the primary reasons many organizations turn to a hybrid cloud system "
"is to increase capacity without having to make large capital investments. "
"However, capacity planning is still necessary when designing an OpenStack "
"installation even if it is augmented with external clouds."
msgstr "许多组织切换到混合云系统的一个主要原因是为了扩容但是又不想投入太多钱。尽管如此，容量计划在设计一个OpenStack安装时仍然有必要，即使是已经有了外部的云。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml78(para)
msgid ""
"Specifically, overall capacity and placement of workloads need to be "
"accounted for when designing for a mostly internally-operated cloud with the"
" occasional capacity burs. The long-term capacity plan for such a design "
"needs to incorporate growth over time to prevent the need to permanently "
"burst into, and occupy, a potentially more expensive external cloud. In "
"order to avoid this scenario, account for the future applications and "
"capacity requirements and plan growth appropriately."
msgstr "特别地，当为一个有偶尔爆发能力的内部操作云设计时，整个的容量和负载的置放都需要计入考虑。一个长期的容量规划，诸如设计一个随时间推移而逐步增长，以放置被外部昂贵的云吞噬并占据。为避免此种情形，请认证思考将来的应用、容量需求以及进行合适的增长规划。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml87(para)
msgid ""
"One of the drawbacks of capacity planning is unpredictability. It is "
"difficult to predict the amount of load a particular application might incur"
" if the number of users fluctuates or the application experiences an "
"unexpected increase in popularity. It is possible to define application "
"requirements in terms of vCPU, RAM, bandwidth or other resources and plan "
"appropriately, but other clouds may not use the same metric or even the same"
" oversubscription rates."
msgstr "容量规划的一个缺点就是不可预测。很难预测特定应用的负载可能承载的量，例如用户数量的波动或者是应用遇到的意外的增加。使用术语vCPU,RAM，带宽或其他资源来定义应用需求和进行合适的规划是可能的，但是其他的云未必有相同的元素或者相同的超额认购率。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml96(para)
msgid ""
"Oversubscription is a method to emulate more capacity than they may "
"physically be present. For example, a physical hypervisor node with 32GB RAM"
" may host 24 instances, each provisioned with 2GB RAM. As long as all 24 of "
"them are not concurrently utilizing 2 full gigabytes, this arrangement is a "
"non-issue. However, some hosts take oversubscription to extremes and, as a "
"result, performance can frequently be inconsistent. If at all possible, "
"determine what the oversubscription rates of each host are and plan capacity"
" accordingly."
msgstr "超额认购是一种模拟多于其本身物理容量的方法。举例说明，一个物理hypervisor节点拥有32GB内存托管24个实例，每个实例赋予2GB内存，只要不是每个实例全部并行的达到满2GB，这样就不会出现什么问题。然而，一些主机极限的使用超额认购，结果就是，性能经常是不一致的。如果可能的话，确定每个主机的超额认购率和容量规划相适应。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml108(para)
msgid ""
"The nature of a hybrid cloud environment removes complete control over the "
"infrastructure. Security becomes a stronger requirement because data or "
"applications may exist in a cloud that is outside of an organization's "
"control. Security domains become an important distinction when planning for "
"a hybrid cloud environment and its capabilities. A security domain comprises"
" users, applications, servers or networks that share common trust "
"requirements and expectations within a system."
msgstr "一个混合云环境的本身特性就是对整个基础设施没有完全的控制权。安全就成了一个强烈的需求，因为在云中的数据或应用超越了企业组织的控制范围。当规划一个混合云环境以及它的容量时，安全域就成了一个重要的范畴。一个安全域包括用户，应用程序，服务器或网络共享公共信任需求，且满足系统的期望。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml117(para)
msgid "The security domains are:"
msgstr "安全域有："

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml132(para)
msgid ""
"These security domains can be mapped individually to the organization's "
"installation or combined. For example, some deployment topologies combine "
"both guest and data domains onto one physical network, whereas other "
"topologies may physically separate these networks. In each case, the cloud "
"operator should be aware of the appropriate security concerns. Security "
"domains should be mapped out against the specific OpenStack deployment "
"topology. The domains and their trust requirements depend upon whether the "
"cloud instance is public, private, or hybrid."
msgstr "这些安全域既可以单独的映射到企业组织的安装也可以合并，举例说明，一些部署拓扑将客户和数据域混合到一个物理网络，另外一些拓扑会将他俩分开不同的物理网络。无论那种情景，云运维人员需要意识到合适的安全关注。安全域需要映射特别的OpenStack部署拓扑，域以及他的信任需求依赖于云实例是否是公有？私有？还是混合？"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml142(para)
msgid ""
"The public security domain is an entirely untrusted area of the cloud "
"infrastructure. It can refer to the Internet as a whole or simply to "
"networks over which an organization has no authority. This domain should "
"always be considered untrusted. When considering hybrid cloud deployments, "
"any traffic traversing beyond and between the multiple clouds should always "
"be considered to reside in this security domain and is therefore untrusted."
msgstr "公共安全域是一个完全不可信任的区域，对于云基础设施来说。可参考的对象就是整个互联网，或者是说企业组织对这个网络没有任何权力。此域须永远认为是不可被信任的。当考虑混合云部署时，任何流量经由多个云之间的，都被认为是在此安全域，因此不可信。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml150(para)
msgid ""
"Typically used for instance-to-instance traffic within a single data center,"
" the guest security domain handles compute data generated by instances on "
"the cloud but not services that support the operation of the cloud such as "
"API calls. Public cloud providers that are used in a hybrid cloud "
"configuration which an organization does not control and private cloud "
"providers who do not have stringent controls on instance use or who allow "
"unrestricted Internet access to instances should consider this domain to be "
"untrusted. Private cloud providers may consider this network as internal and"
" therefore trusted only if there are controls in place to assert that "
"instances and tenants are trusted."
msgstr "典型的在单一数据中心用于实例对实例的流量，客户机安全域掌控的是在云中的实例所生成的计算数据，而不是操作云的诸如API调用所支持的服务。公有云提供商用于混合云配置是企业组织无法控制的，私有云提供商对实例的使用或什么人被容许访问某实例没有绝对的控制，所以认为此域是不被信任的。私有云提供商可认为此网络作为内网而因此可信任，也仅强调可控制的地方，实例和租户是可信任的。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml162(para)
msgid ""
"The management security domain is where services interact. Sometimes "
"referred to as the \"control plane\", the networks in this domain transport "
"confidential data such as configuration parameters, user names, and "
"passwords. In deployments behind an organization's firewall, this domain is "
"considered trusted. In a public cloud model which could be part of an "
"architecture, this would have to be assessed with the public cloud provider "
"to understand the controls in place."
msgstr "管理安全域是位于服务的内部操作，通常可被称做“控制面板”，在此域的网络传输有私密数据诸如配置参数、用户名、密码等。部署在企业组织的防火墙后面，此域被认为是可信任的。在一个公有云模式是属于架构的一部分，这需要评估公有云提供者理解控制的程度。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml170(para)
msgid ""
"The data security domain is concerned primarily with information pertaining "
"to the storage services within OpenStack. Much of the data that crosses this"
" network has high integrity and confidentiality requirements and depending "
"on the type of deployment there may also be strong availability "
"requirements. The trust level of this network is heavily dependent on "
"deployment decisions and as such this is not assigned a default level of "
"trust."
msgstr "数据安全域是主要涉及有关的信息的OpenStack存储服务，通过此网络的多数数据具有高完整性和保密性需求，且依赖于部署的类型它们还有高可用的需求。此网络的信任级别非常依赖于部署的决定且类似的是不会赋予默认的信任级别的。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml178(para)
msgid ""
"Consideration must be taken when managing the users of the system, whether "
"operating or utilizing public or private clouds. The identity service allows"
" for LDAP to be part of the authentication process. Including such systems "
"in your OpenStack deployments may ease user management if integrating into "
"existing systems. Be mindful when utilizing 3rd party clouds to explore "
"authentication options applicable to the installation to help manage and "
"keep user authentication consistent."
msgstr "务必仔细考虑好管理用户的系统，无论是操作或采用公有/私有云。身份服务允许LDAP是认证流程的一部分，若包含了此系统，则可以将OpenStack的用户管理去掉了。请注意当采用了第3方云来浏览认证的属性，适用于安装，以帮助管理和保持用户认证的一致性。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml187(para)
msgid ""
"Due to the process of passing user names, passwords, and generated tokens "
"between client machines and API endpoints, placing API services behind "
"hardware that performs SSL termination is strongly recommended."
msgstr "介于在客户机器和API端点之间传输的是用户名称、密码以及生成的令牌，强烈建议在API服务后端放置SSL硬件终端。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml191(para)
msgid ""
"Within cloud components themselves, another component that needs security "
"scrutiny is the hypervisor. In a public cloud, organizations typically do "
"not have control over the choice of hypervisor. (Amazon uses its own "
"particular version of Xen, for example.) In some cases, hypervisors may be "
"vulnerable to a type of attack called \"hypervisor breakout\" if they are "
"not properly secured. Hypervisor breakout describes the event of a "
"compromised or malicious instance breaking out of the resource controls of "
"the hypervisor and gaining access to the bare metal operating system and "
"hardware resources."
msgstr "往内看云组件自身，另外需要安全审查的是hypervisor，在公有云中，企业组织是无法控制选择Hypervisor的。(例如，亚马逊使用其自身开发的Xen变种。)在一些案例中，hypervisor经常会成为典型的攻击对象，称之为\"hypervisor爆发”，假如没有预防的话，这将会发生！Hypervisor爆发形容的是破坏或恶意升级到hypervisor资源控制之外且获得裸金属操作系统的操作权限以及硬件资源的事件。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml201(para)
msgid ""
"If the security of instances is not considered important, there may not be "
"an issue. In most cases, however, enterprises need to avoid this kind of "
"vulnerability, and the only way to do that is to avoid a situation in which "
"the instances are running on a public cloud. That does not mean that there "
"is a need to own all of the infrastructure on which an OpenStack "
"installation operates; it suggests avoiding situations in which hardware may"
" be shared with others."
msgstr "如果实例的安全不被认为是重要的，就没有那么多问题了。大多数情况下，企业级需要避免这种脆弱性，且避免此种情形唯一的做法就是将实例运行在公有云中。这并不意味着一个OpenStack安装操作就需要拥有所有的基础设施，建议避免的情形是硬件可共享给其他人。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml209(para)
msgid ""
"There are other services worth considering that provide a bare metal "
"instance instead of a cloud. In other cases, it is possible to replicate a "
"second private cloud by integrating with a private Cloud-as-a-Service "
"deployment, in which an organization does not buy hardware, but also does "
"not share it with other tenants. It is also possible use a provider that "
"hosts a bare-metal \"public\" cloud instance for which the hardware is "
"dedicated only to one customer, or a provider that offers private Cloud-"
"as-a-Service."
msgstr "其他值得考虑的就是能够提供裸金属实例，在一些场景中，有可能是通过集成私有的云即服务部署来复制一个私有云，这样企业还无须购买硬件，且不需要分享给另外的租户。也有可能是使用这样的供应商：仅为一个用户提供专用的硬件，提供裸金属公有云实例；或者是提供私有云即服务的提供商。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml218(para)
msgid ""
"Finally, it is important to realize that each cloud implements services "
"differently. What keeps data secure in one cloud may not do the same in "
"another. Be sure to know the security requirements of every cloud that "
"handles the organization's data or workloads."
msgstr "千万要意识到每一个云实现的服务是不同的，这点很重要！在这个云里可以保证数据的安全，在另外一个就不一定安全。一定要知道，每个云处理其组织的数据或负载对于安全的需求是不一样的。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml223(para)
msgid ""
"More information on OpenStack Security can be found in the <link "
"href=\"http://docs.openstack.org/security-guide\"><citetitle>OpenStack "
"Security Guide</citetitle></link>."
msgstr "关于OpenStack安全的更多信息，请参考<link href=\"http://docs.openstack.org/security-guide\"><citetitle>OpenStack 安全指南</citetitle></link>。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml231(para)
msgid ""
"When it comes to utilization, it is important that the CMP understands what "
"workloads are running, where they are running, and their preferred "
"utilizations. For example, in most cases it is desirable to run as many "
"workloads internally as possible, utilizing other resources only when "
"necessary. On the other hand, situations exist in which the opposite is "
"true. The internal cloud may only be for development and stressing it is "
"undesirable. In most cases, a cost model of various scenarios helps with "
"this decision, however this analysis is heavily influenced by internal "
"priorities. The important thing is the ability to efficiently make those "
"decisions on a programmatic basis."
msgstr "当到了采用这个环节时，能够让CMP理解是什么负载运行，在哪里运行，以及他们优先采用什么，就显得重要起来。例如，大多数的场景都希望尽可能在内部运行大多数的负载，采用其他资源则是在需要的时候才考虑。另一方面，实际情形与此确正好相反，内部云仅仅用于开发且着重强调不被使用。大多数情况是，多种场景的开销模式帮助作出决定，尽管这些分析会严重影响到内部的优先级。 最重要的是一个编程能力基础上有效地做出这些决策的能力。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml243(para)
msgid ""
"The Telemetry module (ceilometer) is designed to provide information on the "
"usage of various OpenStack components. There are two limitations to "
"consider: first, if there is to be a large amount of data (for example, if "
"monitoring a large cloud, or a very active one) it is desirable to use a "
"NoSQL back end for Ceilometer, such as MongoDB. Second, when connecting to a"
" non-OpenStack cloud, there will need to be a way to monitor that usage and "
"to provide that monitoring data back to the CMP."
msgstr "Telemetry模块(ceilometer)被设计为提供多个OpenStack组件的使用信息。有两个局限性因素需要考虑：第一，如果使用的是非常大的数据(例如，监测一个巨型的云，或者是非常活跃的),Ceilometer需要在后端使用NoSQL数据库，例如MongoDB。第二，当连接到非OpenStack云时，Ceilometer有必要监测它的使用，且要为CMP的后端提供监测数据。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml254(para)
msgid ""
"Performance is of primary importance in the design of a cloud. When it comes"
" to a hybrid cloud deployment, many of the same issues for multi-site "
"deployments apply, such as network latency between sites. It is also "
"important to think about the speed at which a workload can be spun up in "
"another cloud, and what can be done to reduce the time necessary to "
"accomplish that task. That may mean moving data closer to applications, or "
"conversely, applications closer to the data they process. It may mean "
"grouping functionality so that connections that require low latency take "
"place over a single cloud rather than spanning clouds. That may also mean "
"ensuring that the CMP has the intelligence to know which cloud can most "
"efficiently run which types of workloads."
msgstr "在设计云时，性能是主要的因素。当在混合云部署考虑此时，会遇到和多区域部署同样的很多问题，例如在站点之间的网络延迟问题。另外需要重点考虑是一个应用在另外的云中启动的速度，以及完成必要的任务所能节省的时间。这也就意味着将数据迁移到离应用最近的地方，或者相反，将应用移到离数据近来处理。也可以将应用分组来分配到单一的云中而不是多个云，这样对于那些有低延迟需求的应用有好处。这同样意味着CMP的集成能够知道那个云适合那种类型负载的应用。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml267(para)
msgid ""
"As with utilization, native OpenStack tools are available to assist. "
"Ceilometer can measure performance and, if necessary, the Orchestration "
"module can be used to react to changes in demand by spinning up more "
"resources. It is important to note, however, that Orchestration requires "
"special configurations in the client to enable functioning with solution "
"offerings from Amazon Web Services. When dealing with other types of clouds,"
" it is necessary to rely on the features of the CMP."
msgstr "对于采用组件来说，OpenStack本身的工具即可提供帮助。Ceilometer可以衡量性能，如果有必要，Orchestration模块可以用于应对需求的变动，自动配生更多的资源。记住下面这点很重要，Orchestration需要在客户端进行特殊的配置，以便由Amazon Web Services所提供的功能才能被使用。当处理其他类型的云时，有必要先考察下CMP是否支持某些特性。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml277(title)
msgid "Components"
msgstr "组件"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml278(para)
msgid ""
"The number and types of native OpenStack components that are available for "
"use is dependent on whether the deployment is exclusively an OpenStack cloud"
" or not. If so, all of the OpenStack components will be available for use, "
"and in many ways the issues that need to be considered will be similar to "
"those that need to be considered for a multi-site deployment."
msgstr "使用多少或什么类型的OpenStack组件取决于是不是部署专门的OpenStack云。如果是的话，所有的OpenStack组件都配得上用场，且和多站点部署一样需要考虑多个方面的问题。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml285(para)
msgid ""
"That said, in any situation in which more than one cloud is being used, at "
"least four OpenStack tools will be considered:"
msgstr "也就是说，在多余一个云的使用的任何情况下，至少四个OpenStack组件是需要考虑的："

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml290(para)
msgid ""
"OpenStack Compute (nova): Regardless of deployment location, hypervisor "
"choice has a direct effect on how difficult it is to integrate with one or "
"more additional clouds. For example, integrating a Hyper-V based OpenStack "
"cloud with Azure will have less compatibility issues than if KVM is used."
msgstr "OpenStack计算(nova):先不说部署地点，hypervisor的选择会直接影响到集成一个或多个云的难度。举例，集成基于Hyper-V的OpenStack和Azure，相比使用KVM来说要省很多事。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml298(para)
msgid ""
"Networking: Whether OpenStack Networking (neutron) or legacy networking "
"(nova-network) is used, the network is one place where integration "
"capabilities need to be understood in order to connect between clouds."
msgstr "网络：无论是OpenStack网络(neutron)还是遗留网络(nova-network)一旦使用了，该网络需要在云之间连接并可相互理解的整合在一起的能力。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml304(para)
msgid ""
"Telemetry module (ceilometer): Use of Telemetry depends, in large part, on "
"what the other parts of the cloud are using."
msgstr "Telemetry 模块 (ceilometer):在大部分依赖使用Telemetry，可用于云的其他组件。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml309(para)
msgid ""
"Orchestration module (heat): Similarly, Orchestration can be a valuable tool"
" in orchestrating tasks a CMP decides are necessary in an OpenStack-based "
"cloud."
msgstr "Orchestration 模块 (heat): 同样的，Orchestration在编排任务中是一个非常有价值的工具，在基于OpenStack云的云管理平台所需要。 "

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml316(title)
msgid "Special considerations"
msgstr "特殊因素"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml317(para)
msgid ""
"Hybrid cloud deployments also involve two more issues that are not common in"
" other situations:"
msgstr "混合云部署经常会遇到的两个在其他云环境的不会发生的问题："

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml319(para)
msgid ""
"Image portability: Note that, as of the Icehouse release, there is no single"
" common image format that is usable by all clouds. This means that images "
"will need to be converted or recreated when porting between clouds. To make "
"things simpler, launch the smallest and simplest images feasible, installing"
" only what is necessary preferably using a deployment manager such as Chef "
"or Puppet. That means not to use golden images for speeding up the process, "
"however if the same images are being repeatedly deployed it may make more "
"sense to utilize this technique instead of provisioning applications on "
"lighter images each time."
msgstr "镜像移植：记住，在Icehouse发布后，就没有一个通用的镜像格式用于所有的云。这意味着当在云之间运行时镜像需要被转换或重新创建。为了使事情变得更为简单，启动最小且最精简的镜像，使用部署管理工具诸如Chef或Puppet安装必须的组件，这也意味着不要使用重量级镜像去加速流程，如果同样的镜像需要重复部署，使用此技术会更有意义，而不是每次都为一个镜像部署应用。"

#: ./doc/arch-design/hybrid/section_tech_considerations_hybrid.xml330(para)
msgid ""
"API differences: The most profound issue that cannot be avoided when using a"
" hybrid cloud deployment with more than just OpenStack (or with different "
"versions of OpenStack) is that the APIs needed to perform certain functions "
"are different. The CMP needs to know how to handle all necessary versions. "
"To get around this issue, some implementers build portals to achieve a "
"hybrid cloud environment, but a heavily developer-focused organization will "
"get more use out of a hybrid cloud broker SDK such as jClouds."
msgstr "不同的API：当使用混合云部署了不止是OpenStack(或OpenStack的不同版本)时，多数早发现的问题是无法避免的，因为API的不同。云管理平台需要知道如何掌握所有必须的版本。为解决此类问题，一些实现者构建了门户，以实现混合云环境，但是大型的专注于开发的组织会使用混合云管理SDK，如jClouds。"

#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml9(para)
msgid ""
"More so than other scenarios, defining user requirements for a massively "
"scalable OpenStack design architecture dictates approaching the design from "
"two different, yet sometimes opposing, perspectives: the cloud user, and the"
" cloud operator. The expectations and perceptions of the consumption and "
"management of resources of a massively scalable OpenStack cloud from the "
"user point of view is distinctly different from that of the cloud operator."
msgstr "比起其它的场景，为可大规模扩展的 OpenStack 设计架构定义用户需求更是意味着需要从不同的，有时候甚至是相反的两个方面来审视我们的设计：云用户的方面，以及云运营者的方面。对于可大规模扩展的 OpenStack 云中的资源的消耗和管理等这些问题，从用户角度来看与从管理者角度来看，其期望和观念都大不相同。"

#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml53(para)
msgid ""
"Massively scalable OpenStack clouds have the following user requirements:"
msgstr "可大规模扩展的 OpenStack 云有如下的一些用户需求："

#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml57(para)
msgid ""
"The cloud user expects repeatable, dependable, and deterministic processes "
"for launching and deploying cloud resources. This could be delivered through"
" a web-based interface or publicly available API endpoints. All appropriate "
"options for requesting cloud resources need to be available through some "
"type of user interface, a command-line interface (CLI), or API endpoints."
msgstr "云用户希望对云资源进行启动和部署有可重复的、可靠的以及可确定的操作过程。这些功能可以通过基于 web 的接口或者公开可用的 API 入口抛出。对云资源进行请求的所有相应选项应该通过某种类型的用户接口展现给用户，比如命令行接口(CLI)或者API 入口。"

#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml67(para)
msgid ""
"Cloud users expect a fully self-service and on-demand consumption model. "
"When an OpenStack cloud reaches the \"massively scalable\" size, it means it"
" is expected to be consumed \"as a service\" in each and every way."
msgstr "云用户同样希望拥有一个完全自服务的和按需消费的模型。当一个 OpenStack 云达到“可大规模扩展”的大小时，意味着它也是被希望以每一方面都“作为服务”来进行消费的。"

#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml74(para)
msgid ""
"For a user of a massively scalable OpenStack public cloud, there will be no "
"expectations for control over security, performance, or availability. Only "
"SLAs related to uptime of API services are expected, and very basic SLAs "
"expected of services offered. The user understands it is his or her "
"responsibility to address these issues on their own. The exception to this "
"expectation is the rare case of a massively scalable cloud infrastructure "
"built for a private or government organization that has specific "
"requirements."
msgstr "对于一个可大规模扩展的 OpenStack 公有云的用户来说，对于安全性、性能以及可用性的控制需求并没有那么强烈。只有与 API 服务的正常运行时间相关的 SLA，以及所提供的服务非常基本的 SLA，是所需要的。用户明白解决这些问题是他们自己的责任。这种期望的例外是一个非常罕见的场景：该可大规模扩展的云是为了一个有特别需求的私有或者政府组织而构建的。"

#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml86(para)
msgid ""
"As might be expected, the cloud user requirements or expectations that "
"determine the design are all focused on the consumption model. The user "
"expects to be able to easily consume cloud resources in an automated and "
"deterministic way, without any need for knowledge of the capacity, "
"scalability, or other attributes of the cloud's underlying infrastructure."
msgstr "可能与想像中一致，用以确定设计方案的云用户的需求以及期望，都是关注于消费模型之上的。用户希望能够以一种自动化的和确定的方式来使用云中的资源，而不需要以任何对容量、可扩展性或者其它关于该云的底层基础设施的属性的了解作为前提。"

#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml94(title)
msgid "Operator requirements"
msgstr "运营者的需求"

#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml95(para)
msgid ""
"Whereas the cloud user should be completely unaware of the underlying "
"infrastructure of the cloud and its attributes, the operator must be able to"
" build and support the infrastructure, as well as how it needs to operate at"
" scale. This presents a very demanding set of requirements for building such"
" a cloud from the operator's perspective:"
msgstr "用户对于云的底层基础设施以及属性应该是完全不清楚的，然而，运营者却必须能够构建并且支持该基础设施，也应该了解在大规模的情况下如何操作它。这从运营者的角度提出了关于构建这样一个云的一系列相当强烈的需求："

#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml103(para)
msgid ""
"First and foremost, everything must be capable of automation. From the "
"deployment of new hardware, compute hardware, storage hardware, or "
"networking hardware, to the installation and configuration of the supporting"
" software, everything must be capable of being automated. Manual processes "
"will not suffice in a massively scalable OpenStack design architecture."
msgstr "首要的问题是，所有东西都必须能够自动化，从新硬件，包括计算硬件、存储硬件以及网络硬件的部署，到支撑软件的安装及配置，所有的这些都需要能够被自动化完成。手动操作的过程在一个可大规模扩展的 OpenStack 设计架构中是完全无法满足需要的。"

#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml113(para)
msgid ""
"The cloud operator requires that capital expenditure (CapEx) is minimized at"
" all layers of the stack. Operators of massively scalable OpenStack clouds "
"require the use of dependable commodity hardware and freely available open "
"source software components to reduce deployment costs and operational "
"expenses. Initiatives like OpenCompute (more information available at <link "
"href=\"http://www.opencompute.org\">http://www.opencompute.org</link>) "
"provide additional information and pointers. To cut costs, many operators "
"sacrifice redundancy. For example, redundant power supplies, redundant "
"network connections, and redundant rack switches."
msgstr "云运营者要求在云堆栈的所有层次上的资本输出(CapEx)最小化。可大规模扩展的 OpenStack 云的运营者需要使用可靠的商业硬件以及能够自由获取的开源软件组件以减小部署成本和运营费用。像 OpenCompute (关于这个项目更多的信息可以参见 <link href=\"http://www.opencompute.org\">http://www.opencompute.org</link>)这样的项目提供了更多相关的信息和指导意见。很多运营商牺牲了冗余性以减小成本，比如，冗余的电源供应、冗余的网络连接以及冗余的柜顶交换机。"

#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml128(para)
msgid ""
"Companies operating a massively scalable OpenStack cloud also require that "
"operational expenditures (OpEx) be minimized as much as possible. It is "
"recommended that cloud-optimized hardware is a good approach when managing "
"operational overhead. Some of the factors that need to be considered include"
" power, cooling, and the physical design of the chassis. It is possible to "
"customize the hardware and systems so they are optimized for this type of "
"workload because of the scale of these implementations."
msgstr "运营可大规模扩展云的公司，同样也要求业务费用(OpEx)尽可能最小化。需要对运营开销进行管理的时候，我们则建议使用为云场景进行过优化的硬件。还有一些需要考虑的因素包括电源、冷却系统，以及甚至是底架的物理设计。由于这类实现的规模之大，定制硬件和系统以确保它们是优化过的适合完成相关类型的工作，是非常可能的一件事情。"

#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml140(para)
msgid ""
"Massively scalable OpenStack clouds require extensive metering and "
"monitoring functionality to maximize the operational efficiency by keeping "
"the operator informed about the status and state of the infrastructure. This"
" includes full scale metering of the hardware and software status. A "
"corresponding framework of logging and alerting is also required to store "
"and allow operations to act upon the metrics provided by the metering and "
"monitoring solution(s). The cloud operator also needs a solution that uses "
"the data provided by the metering and monitoring solution to provide "
"capacity planning and capacity trending analysis."
msgstr "可大规模扩展的 OpenStack 云需要全面的测量及监控功能，通过保持运营人员能够清楚知悉基础设施的状态，以达到最大化业务效率的目的。这包括对硬件和软件状态的全面测度。同样的也需要一个相应的日志和警报框架，用以保存由测量和监控解决方案所提供的数据，并允许针对测量得出的数据采取相应的动作。云运营商还需要一个能够使用测量和监控方案所提供的数据进行容量计划以及容量趋势分析的解决方案。"

#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml155(para)
msgid ""
"A massively scalable OpenStack cloud will be a multi-site cloud. Therefore, "
"the user-operator requirements for a multi-site OpenStack architecture "
"design are also applicable here. This includes various legal requirements "
"for data storage, data placement, and data retention; other jurisdictional "
"legal or compliance requirements; image consistency-availability; storage "
"replication and availability (both block and file/object storage); and "
"authentication, authorization, and auditing (AAA), just to name a few. Refer"
" to the <xref linkend=\"multi_site\"/> for more details on requirements and "
"considerations for multi-site OpenStack clouds."
msgstr "一个可大规模扩展的 OpenStack 云应该是一个多点的云。因此，对于多点 OpenStack 架构设计的用户和运营者需求，在这里也适用。这还包括一系列的关于数据存储、数据存放的地点，以及数据保管等法律上的要求；其它的行政法规和监管的要求；镜像的一致性和可用性；存储的复制和可用性(块存储以及文件/对象存储)；以及认证、授权和审计(AAA)等等；还有很多很多。参考<xref linkend=\"multi_site\"/>以了解更多关于多点类型的 OpenStack 云的需求和设计考虑因素。"

#: ./doc/arch-design/massively_scalable/section_user_requirements_massively_scalable.xml170(para)
msgid ""
"Considerations around physical facilities such as space, floor weight, rack "
"height and type, environmental considerations, power usage and power usage "
"efficiency (PUE), and physical security must also be addressed by the design"
" architecture of a massively scalable OpenStack cloud."
msgstr "关于诸如空间、底部负重、机柜高度及类型、环境性因素、电源使用及其使用效率(PUE)，以及物理上的安全性等等相关的物理设施的考虑因素，也应该在可大规模扩展的 OpenStack 云的设计架构中一并进行考虑并解决。"

#: ./doc/arch-design/massively_scalable/section_operational_considerations_massively_scalable.xml9(para)
msgid ""
"In order to run at massive scale, it is important to plan on the automation "
"of as many of the operational processes as possible. Automation includes the"
" configuration of provisioning, monitoring and alerting systems. Part of the"
" automation process includes the capability to determine when human "
"intervention is required and who should act. The objective is to increase "
"the ratio of operational staff to running systems as much as possible to "
"reduce maintenance costs. In a massively scaled environment, it is "
"impossible for staff to give each system individual care."
msgstr "想要在极大规模的情况下正常运营一个 OpenStack 云，对尽可能多的操作过程做自动化的计划就显得尤为重要。自动化包括了准备实例时的配置、监控和警报系统。还有一部分的自动化过程包括了确定什么时候需要人工干预以及谁应该采取行动的能力。目标是将运行中的系统与运维人员数目的比值尽可能增大，以减少维护成本。在一个扩展到极大规模的环境中，想要运维人员对每个系统都进行单独照看是不可能的。"

#: ./doc/arch-design/massively_scalable/section_operational_considerations_massively_scalable.xml19(para)
msgid ""
"Configuration management tools such as Puppet or Chef allow operations staff"
" to categorize systems into groups based on their role and thus create "
"configurations and system states that are enforced through the provisioning "
"system. Systems that fall out of the defined state due to errors or failures"
" are quickly removed from the pool of active nodes and replaced."
msgstr "类似 Puppet 和 Chef 等配置管理工具允许运维人员将系统按照它们的角色进行分组，然后通过配置准备系统，对它们分别创建配置文件以及保证系统的状态。由于错误或者故障而离开预定义的状态的系统很快就会被从活动节点池中移除，并被替换。"

#: ./doc/arch-design/massively_scalable/section_operational_considerations_massively_scalable.xml26(para)
msgid ""
"At large scale the resource cost of diagnosing individual systems that have "
"failed is far greater than the cost of replacement. It is more economical to"
" immediately replace the system with a new system that can be provisioned "
"and configured automatically and quickly brought back into the pool of "
"active nodes. By automating tasks that are labor-intensive, repetitive, and "
"critical to operations with automation, cloud operations teams are able to "
"be managed more efficiently because fewer resources are needed for these "
"babysitting tasks. Administrators are then free to tackle tasks that cannot "
"be easily automated and have longer-term impacts on the business such as "
"capacity planning."
msgstr "在大规模部署的条件下，对单台发生故障系统的进行诊断和调试所耗费的资源成本要比直接替换它高得多。直接将发生故障的系统替换成一个能够被自动部署和配置并且能够很快地被重新加入到活动节点池中的系统，显然要更加经济。通过将劳力密集的、重复性的以及操作难度大的任务自动化，云运营团队就能够更高效的进行管理，因为这种保姆式的工作所需要的资源就更少了。于是，管理者便有时间来解决无法被容易地自动化的以及对业务有着长期影响的任务，比如说容量计划等等。"

#: ./doc/arch-design/massively_scalable/section_operational_considerations_massively_scalable.xml39(title)
msgid "The bleeding edge"
msgstr "最前沿"

#: ./doc/arch-design/massively_scalable/section_operational_considerations_massively_scalable.xml40(para)
msgid ""
"Running OpenStack at massive scale requires striking a balance between "
"stability and features. For example, it might be tempting to run an older "
"stable release branch of OpenStack to make deployments easier. However, when"
" running at massive scale, known issues that may be of some concern or only "
"have minimal impact in smaller deployments could become pain points at "
"massive scale. If the issue is well known, in many cases, it may be resolved"
" in more recent releases. The OpenStack community can help resolve any "
"issues reported by applying the collective expertise of the OpenStack "
"developers."
msgstr "在大规模的场景下运行 OpenStack 需要在稳定性与功能之间做好平衡。比如说，选择比较旧的稳定版本的 OpenStack 以便使得部署更容易看起来比较令人动心。然而在大规模部署的场景之下，对小规模部署造成的困扰不大或者甚至没有什么影响的已知问题，对于大规模的部署来说都可能是缺陷。假如该问题是广为人知的，在通常情况下它可能在较新的发布版本中被解决了。OpenStack 社区能够运用 OpenStack 社区开发者的集体智慧，帮助解决报告到社区中的问题。"

#: ./doc/arch-design/massively_scalable/section_operational_considerations_massively_scalable.xml50(para)
msgid ""
"When issues crop up, the number of organizations running at a similar scale "
"is a relatively tiny proportion of the OpenStack community, therefore it is "
"important to share these issues with the community and be a vocal advocate "
"for resolving them. Some issues only manifest when operating at large scale "
"and the number of organizations able to duplicate and validate an issue is "
"small, so it will be important to document and dedicate resources to their "
"resolution."
msgstr "当出现问题的时候，在差不多规模场景下运行 OpenStack 的组织的数量，相对于整个 OpenStack 社区来说，是极小的一个比例，因此很重要的一件事情是要与社区分享所遇到的问题，并且在社区中积极倡导将这些问题解决。有些问题可能只在大规模部署的场景下才会出现，所以能够重现和验证该问题的组织是为数不多的，因此将问题良好地文档化并且为问题的解决贡献一些必要的资源，是尤为重要的。"

#: ./doc/arch-design/massively_scalable/section_operational_considerations_massively_scalable.xml58(para)
msgid ""
"In some cases, the resolution to the problem is ultimately to deploy a more "
"recent version of OpenStack. Alternatively, when the issue needs to be "
"resolved in a production environment where rebuilding the entire environment"
" is not an option, it is possible to deploy just the more recent separate "
"underlying components required to resolve issues or gain significant "
"performance improvements. At first glance, this could be perceived as "
"potentially exposing the deployment to increased risk and instability. "
"However, in many cases it could be an issue that has not been discovered "
"yet."
msgstr "某种情况下，问题的最终解决办法会是部署一套更新版本的 OpenStack。所幸的是，当在一个不可能整个推倒重建的生产环境要解决这样的问题的时候，还可以只重新部署能够解决问题或者能够使得性能明显提高的底层组件的新版本。虽然这乍看起来像是可能给部署带来更高的风险和不稳定性，但是大多数情况下这并不是什么问题。"

#: ./doc/arch-design/massively_scalable/section_operational_considerations_massively_scalable.xml68(para)
msgid ""
"It is advisable to cultivate a development and operations organization that "
"is responsible for creating desired features, diagnose and resolve issues, "
"and also build the infrastructure for large scale continuous integration "
"tests and continuous deployment. This helps catch bugs early and make "
"deployments quicker and less painful. In addition to development resources, "
"the recruitment of experts in the fields of message queues, databases, "
"distributed systems, and networking, cloud and storage is also advisable."
msgstr "我们的建议是组织一个开发和运营的团队，由他们来负责开发所需要的特性，调试以及解决问题，并建造用以进行大规模持续集成测试以及持续部署的基础设施。这能够及早地发现缺陷以及使得部署更快和更加简单。除了开发的资源之外，我们也建议招聘消息队列、数据库、分布式系统、网络、云以及存储方面的专家人员。"

#: ./doc/arch-design/massively_scalable/section_operational_considerations_massively_scalable.xml78(title)
msgid "Growth and capacity planning"
msgstr "增长和容量计划"

#: ./doc/arch-design/massively_scalable/section_operational_considerations_massively_scalable.xml79(para)
msgid ""
"An important consideration in running at massive scale is projecting growth "
"and utilization trends to plan capital expenditures for the near and long "
"term. Utilization metrics for compute, network, and storage as well as a "
"historical record of these metrics are required. While securing major anchor"
" tenants can lead to rapid jumps in the utilization rates of all resources, "
"the steady adoption of the cloud inside an organizations or by public "
"consumers in a public offering will also create a steady trend of increased "
"utilization."
msgstr "在大规模场景下运行 OpenStack 还有一个重要的考虑因素，是要对增长和利用率趋势进行规划，从而为短期和长期计划资本性支出。这需要计算、网络以及存储等资源的利用率的测量数据，以及这些数据的历史记录。固定的大客户租户可能造成所有资源的利用率有个迅速的增长，在一个组织内部的对其内部云，或者在公有云上的用户对公开提供的服务等的稳定增长的部署及使用，则会使得利用率出现一个稳定的增长趋势。"

#: ./doc/arch-design/massively_scalable/section_operational_considerations_massively_scalable.xml90(title)
msgid "Skills and training"
msgstr "技能和培训"

#: ./doc/arch-design/massively_scalable/section_operational_considerations_massively_scalable.xml91(para)
msgid ""
"Projecting growth for storage, networking, and compute is only one aspect of"
" a growth plan for running OpenStack at massive scale. Growing and nurturing"
" development and operational staff is an additional consideration. Sending "
"team members to OpenStack conferences, meetup events, and encouraging active"
" participation in the mailing lists and committees is a very important way "
"to maintain skills and forge relationships in the community. A list of "
"OpenStack training providers in the marketplace can be found here: <link "
"href=\"http://www.openstack.org/marketplace/training/\">http://www.openstack.org/marketplace/training/</link>."
msgstr "对存储、网络以及计算等资源的增长进行规划只是为大规模运行 OpenStack 进行的扩展规划的一个方面。对于开发及运维人员的增长以及能力的培养，也是一个重要的考虑因素。让团队的成员参加 OpenStack 大型会议和聚会，鼓励团队成员积极参与邮件列表以及委员会的讨论等，都是让他们保持技能领先并与社区建立良好关系的非常重要的方式。另外，这里还有一个市场上提供 OpenStack 相关技能培训的机构的列表：<link href=\"http://www.openstack.org/marketplace/training/\">http://www.openstack.org/marketplace/training/</link>."

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml133(None)
msgid ""
"@@image: '../figures/Massively_Scalable_Cells_+_regions_+_azs.png'; "
"md5=87d08365fefde431d6d055daf17d7d0e"
msgstr "@@image: '../figures/Massively_Scalable_Cells_+_regions_+_azs.png'; md5=87d08365fefde431d6d055daf17d7d0e"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml13(para)
msgid ""
"Converting an existing OpenStack environment that was designed for a "
"different purpose to be massively scalable is a formidable task. When "
"building a massively scalable environment from the ground up, make sure the "
"initial deployment is built with the same principles and choices that apply "
"as the environment grows. For example, a good approach is to deploy the "
"first site as a multi-site environment. This allows the same deployment and "
"segregation methods to be used as the environment grows to separate "
"locations across dedicated links or wide area networks. In a hyperscale "
"cloud, scale trumps redundancy. Applications must be modified with this in "
"mind, relying on the scale and homogeneity of the environment to provide "
"reliability rather than redundant infrastructure provided by non-commodity "
"hardware solutions."
msgstr "将一个现存的为其他目的而设计的 OpenStack 环境改造成为可大规模扩展的类型，是一项艰巨的任务。当从头建造一个可大规模扩展的环境时，需要确保初始的部署也是依据不管环境如何增长依然能够适用的原则和选择而建造的。举例来说，在只在第一个地点进行部署的时候，就将整个环境当作是一个多点环境进行部署，就是一个比较好的方式，因为这使得相同的部署及隔离方法，随着环境的扩展，也能够在其它不同的地点被使用，这些地点之间通过专门的线路或者广域网进行连接。在超大规模的环境中，扩展胜过冗余。这种场景下的应用必须依据这个原则进行修改，依赖于整个环境的规模和扩展性和同质性以提供可靠性，而不是使用非商品的硬件解决方案提供的冗余基础设施。"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml29(title)
msgid "Infrastructure segregation"
msgstr "基础设施隔离"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml30(para)
msgid ""
"Fortunately, OpenStack services are designed to support massive horizontal "
"scale. Be aware that this is not the case for the entire supporting "
"infrastructure. This is particularly a problem for the database management "
"systems and message queues used by the various OpenStack services for data "
"storage and remote procedure call communications."
msgstr "幸运的是，OpenStack 的服务是被设计为能够支持水平上大规模的环境的。需要清楚的是这并不是整个支撑基础设施的问题。准确的说，这只是好些 OpenStack 的服务进行数据存储以及远程过程调用通信所用到的数据库管理系统和消息队列的问题。"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml36(para)
msgid ""
"Traditional clustering techniques are typically used to provide high "
"availability and some additional scale for these environments. In the quest "
"for massive scale, however, additional steps need to be taken to relieve the"
" performance pressure on these components to prevent them from negatively "
"impacting the overall performance of the environment. It is important to "
"make sure that all the components are in balance so that, if and when the "
"massively scalable environment fails, all the components are at, or close "
"to, maximum capacity."
msgstr "传统的集群化技术这种环境中也通常被用以提供高可用性和一些额外的扩展性。然而，在大规模的环境下，要对这些组件采取一些额外的配置步骤，以减轻它们所面对的性能压力，避免它们对整个环境的整体性能造成负面的影响。很重要的一点是需要确保所有的组件上的负载是相对平均的，这样子万一在整个可大规模扩展的环境出现问题时，所有的组件都在，或者至少接近它们的最大负载容量上工作。"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml46(para)
msgid ""
"Regions are used to segregate completely independent installations linked "
"only by an Identity and Dashboard (optional) installation. Services are "
"installed with separate API endpoints for each region, complete with "
"separate database and queue installations. This exposes some awareness of "
"the environment's fault domains to users and gives them the ability to "
"ensure some degree of application resiliency while also imposing the "
"requirement to specify which region their actions must be applied to."
msgstr "OpenStack 中的区域(Region)用以隔离完全独立但只由认证模块和面板模块(可选)连接起来的的部署环境。服务在每个区域之中都以独立的 API 入口进行安装，与独立的数据库和消息队列的部署共同组成一套完整的环境。这让用户能够知道环境中发生故障的域，并给予他们一些能力以保证某种程度上的应用弹性，同时又强制要求他们必须选择操作应该应用到哪个区域中去。"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml55(para)
msgid ""
"Environments operating at massive scale typically need their regions or "
"sites subdivided further without exposing the requirement to specify the "
"failure domain to the user. This provides the ability to further divide the "
"installation into failure domains while also providing a logical unit for "
"maintenance and the addition of new hardware. At hyperscale, instead of "
"adding single compute nodes, administrators may add entire racks or even "
"groups of racks at a time with each new addition of nodes exposed via one of"
" the segregation concepts mentioned herein."
msgstr "在大规模场景下运行的环境需要更加细分其区域和站点，同时又不能要求用户指定故障域。者提供了将整个部署更加细分到故障域的能力，同时也为维护和新硬件的添加提供了逻辑上的单元。在超大规模的环境中，管理员可能一次性添加整个机柜或者甚至是一组机柜上的机器，而不是添加单台计算节点。这样子的节点添加过程，将会用到这里所提到的隔离概念。"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml65(para)
msgid ""
"<glossterm baseform=\"cell\">Cells</glossterm> provide the ability to "
"subdivide the compute portion of an OpenStack installation, including "
"regions, while still exposing a single endpoint. In each region an API cell "
"is created along with a number of compute cells where the workloads actually"
" run. Each cell gets its own database and message queue setup (ideally "
"clustered), providing the ability to subdivide the load on these subsystems,"
" improving overall performance."
msgstr "<glossterm baseform=\"cell\">单元</glossterm>提供了对一个 OpenStack 环境，也包括区域中的计算部分进行细分的功能，同时保持对外的展现仍然为单个入口点。在每个区域中将会为一系列实际承担负载的计算单元创建一个 API 单元。每个单元拥有其自己的数据库和消息队列(理想情况下是集群化的)，并提供将负载细分到这些子系统中的功能，以提高整体性能。"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml74(para)
msgid ""
"Within each compute cell a complete compute installation is provided, "
"complete with full database and queue installations, scheduler, conductor, "
"and multiple compute hosts. The cells scheduler handles placement of user "
"requests from the single API endpoint to a specific cell from those "
"available. The normal filter scheduler then handles placement within the "
"cell."
msgstr "每个计算单元提供一整个完整的计算环境，包括完整的数据库及消息队列部署、调度器，管理器以及多个计算主机。单元调度器将会把从单个 API 入口点上收到的用户请求，安排到从可用的单元中选出的一个特定单元上。单元内部常规的过滤调度器将负责其内部的这种安排。"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml81(para)
msgid ""
"The downside of using cells is that they are not well supported by any of "
"the OpenStack services other than Compute. Also, they do not adequately "
"support some relatively standard OpenStack functionality such as security "
"groups and host aggregates. Due to their relative newness and specialized "
"use, they receive relatively little testing in the OpenStack gate. Despite "
"these issues, however, cells are used in some very well known OpenStack "
"installations operating at massive scale including those at CERN and "
"Rackspace."
msgstr "使用单元的缺点是这种解决方案在 OpenStack 的服务中，只有计算服务支持得比较好。并且，这种方案也不能够支持一些相对基础的 OpenStack 功能，例如安全组和主机聚合。由于这种方案比较新，并且用途相对特别，在 OpenStack 之中对这种方案的测试也相对比较有限。即使存在种种的这些问题，单元还是在一些著名的大规模 OpenStack 环境中被使用了，包括 CERN 和 Rackspace 中的那些。"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml91(title)
msgid "Host aggregates"
msgstr "主机聚合"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml92(para)
msgid ""
"Host aggregates enable partitioning of OpenStack Compute deployments into "
"logical groups for load balancing and instance distribution. Host aggregates"
" may also be used to further partition an availability zone. Consider a "
"cloud which might use host aggregates to partition an availability zone into"
" groups of hosts that either share common resources, such as storage and "
"network, or have a special property, such as trusted computing hardware. "
"Host aggregates are not explicitly user-targetable; instead they are "
"implicitly targeted via the selection of instance flavors with extra "
"specifications that map to host aggregate metadata."
msgstr "主机聚合使得能够将 OpenStack 计算部署划分成逻辑上的分组以实现负载均衡和实例的分布。主机聚合也可以被用于对一个可用域进行更进一步的划分，想象一下一个云环境可能使用主机聚合将可用域中的主机进行分组，分组依据的规则可能是主机共享资源，比如存储和网络，或者主机有特别的属性，比如可信计算硬件。主机聚合并不是明显面向用户的，相反，是通过选择实例类型来实现的，这些实例的类型都带有额外的规格信息，映射到主机聚合的元数据上。"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml104(title)
msgid "Availability zones"
msgstr "可用域"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml105(para)
msgid ""
"Availability zones provide another mechanism for subdividing an installation"
" or region. They are, in effect, host aggregates that are exposed for "
"(optional) explicit targeting by users."
msgstr "可用域为细分一个 OpenStack 部署或者区域提供了另外一种机制。实际上，这是明确展现给用户(可选项)的主机聚合。"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml109(para)
msgid ""
"Unlike cells, they do not have their own database server or queue broker but"
" simply represent an arbitrary grouping of compute nodes. Typically, "
"grouping of nodes into availability zones is based on a shared failure "
"domain based on a physical characteristic such as a shared power source, "
"physical network connection, and so on. Availability zones are exposed to "
"the user because they can be targeted; however, users are not required to "
"target them. An alternate approach is for the operator to set a default "
"availability zone to schedule instances to other than the default "
"availability zone of nova."
msgstr "不同于单元，主机聚合并没有自己的数据库服务器以及消息队列代理，它只是简单地代表一个抽象的计算节点组。通常说来，将计算节点分到同一个可用域中依据的是它们可能处于同一个故障域之中，因为他们共享了例如电源、物理网络连接等等的物理特性。可用域对用户来说是可见的，因为它们是能够被定位到的，但是，用户并不怎么需要去确定可用域的位置。另外，运维人员还可以设置默认的可用域，系统将会把实例调度到这个可用域之上，而不是系统中默认的 nova 的可用域。"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml121(title)
msgid "Segregation example"
msgstr "隔离的例子"

#: ./doc/arch-design/massively_scalable/section_tech_considerations_massively_scalable.xml122(para)
msgid ""
"In this example the cloud is divided into two regions, one for each site, "
"with two availability zones in each based on the power layout of the data "
"centers. A number of host aggregates have also been defined to allow "
"targeting of virtual machine instances using flavors, that require special "
"capabilities shared by the target hosts such as SSDs, 10GbE networks, or GPU"
" cards."
msgstr "在这个例子中，整个云被划分为两个区域，每个地点各一个，每个区域之中又有两个基于数据中心中的电源安排而划分的可用域。其中一系列的主机聚合也被定义以允许通过使用实例规格来指向虚拟机实例，这要求目标主机需要共享诸如 SSD、10GbE 网络或者显卡等特别的硬件和功能。"

#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml9(para)
msgid ""
"Some of the key technical considerations that are critical to a storage-"
"focused OpenStack design architecture include:"
msgstr "对存储型的 OpenStack 设计架构来说比较关键的一些技术上的考虑因素包括："

#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml14(term)
msgid "Input-output requirements"
msgstr "输入-输出需求"

#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml16(para)
msgid ""
"Input-Output performance requirements require researching and modeling "
"before deciding on a final storage framework. Running benchmarks for Input-"
"Output performance provides a baseline for expected performance levels. If "
"these tests include details, then the resulting data can help model behavior"
" and results during different workloads. Running scripted smaller benchmarks"
" during the life cycle of the architecture helps record the system health at"
" different points in time. The data from these scripted benchmarks assist in"
" future scoping and gaining a deeper understanding of an organization's "
"needs."
msgstr "在对最终的存储框架做出决定之前，需要对输入-输出的性能需求进行研究并将其模型化。为输入-输出性能运行一些检测能够提供一个大致的预期中性能水平的基准。假如测试能够包含详细信息，比如说，在对象存储系统中的对象大小，或者对象存储以及块存储的不同\n容量级别，那么测试得出来的数据就能够帮助对不同的负载之下的行为和结果进行模型化。在架构的生命周期中运行小规模脚本化的测试能够帮助在不同时间点及时记录系统的健康状态。这些脚本化测试得出的数据，能够在以后对整个组织的需要进行研究和深入了解的时候提供帮助。"

#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml32(term)
msgid "Scale"
msgstr "规模"

#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml34(para)
msgid ""
"Scaling storage solutions in a storage-focused OpenStack architecture design"
" is driven by initial requirements, including <glossterm>IOPS</glossterm>, "
"capacity, bandwidth, and future needs. Planning capacity based on projected "
"needs over the course of a budget cycle is important for a design. The "
"architecture should balance cost and capacity, while also allowing "
"flexibility to implement new technologies and methods as they become "
"available."
msgstr "在一个存储型的 OpenStack 架构设计当中，存储解决方案的规模，是由初始的需求，包括 <glossterm>IOPS</glossterm>、容量以及带宽等，以及未来的需要所决定的。对于一个设计来说，在整个预算周期之中，基于项目需要而计划容量，是很重要的。理想情况下，所选择的架构必须在成本以及容量之间做出平衡，同时又必须提供足够的灵活性，以便在新技术和方法可用时实现它们。"

#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml49(para)
msgid ""
"Designing security around data has multiple points of focus that vary "
"depending on SLAs, legal requirements, industry regulations, and "
"certifications needed for systems or people. Consider compliance with HIPPA,"
" ISO9000, and SOX based on the type of data. For certain organizations, "
"levels of access control are important."
msgstr "关于数据的安全性设计，基于 SLA、法律要求、行业规章以及系统或者用户所需要的认证等方面的不同，有着不同的关注点。根据数据的类型，需要考虑遵从 HIPPA、ISO9000 以及 SOX 等。对有些组织来说，访问控制的等级也是很重要的。"

#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml58(term)
msgid "OpenStack compatibility"
msgstr "OpenStack 兼容性"

#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml60(para)
msgid ""
"Interoperability and integration with OpenStack can be paramount in deciding"
" on a storage hardware and storage management platform. Interoperability and"
" integration includes factors such as OpenStack Block Storage "
"interoperability, OpenStack Object Storage compatibility, and hypervisor "
"compatibility (which affects the ability to use storage for ephemeral "
"instance storage)."
msgstr "与 OpenStack 系统的互动性和集成情况，在决定存储硬件和存储管理平台的选择上，可能是最为重要的。这里所说的互动性和集成度，包括比如与 OpenStack 块存储的互操作性、与 OpenStack 对象存储的兼容性，以及与虚拟机管理程序的兼容性(影响为临时的实例使用存储的能力)等因素。"

#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml71(term)
msgid "Storage management"
msgstr "存储管理"

#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml73(para)
msgid ""
"You must address a range of storage management-related considerations in the"
" design of a storage-focused OpenStack cloud. These considerations include, "
"but are not limited to, backup strategy (and restore strategy, since a "
"backup that can not be restored is useless), data valuation-hierarchical "
"storage management, retention strategy, data placement, and workflow "
"automation."
msgstr "在存储型 OpenStack 云的设计中，必须处理一系列和存储管理相关的考虑因素。这些因素包括但不限于，备份策略(以及恢复策略，因为不能恢复的备份没什么用处)、数据评估等级存储管理、保管策略、数据存放的位置以及工作流自动化。"

#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml85(term)
msgid "Data grids"
msgstr "数据网格"

#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml87(para)
msgid ""
"Data grids are helpful when answering questions around data valuation. Data "
"grids improve decision making through correlation of access patterns, "
"ownership, and business-unit revenue with other metadata values to deliver "
"actionable information about data."
msgstr "数据网格在准确解答关于数据评估的问题方面非常有帮助。当前的信息科学方面的一个根本的挑战就是确定哪些数据值得保存，数据应该在哪个级别的访问和性能上存在，以及数据保留在存储系统当中的时间应该多长。数据网格，通过研究访问模式、所有权、商业单位\n收益以及其它的元数据的值等的相关性，帮助做出相关的决定，提供关于数据的可行信息。"

#: ./doc/arch-design/storage_focus/section_tech_considerations_storage_focus.xml95(para)
msgid ""
"When building a storage-focused OpenStack architecture, strive to build a "
"flexible design based on an industry standard core. One way of accomplishing"
" this might be through the use of different back ends serving different use "
"cases."
msgstr "当尝试构建一个基于行业标准核心的灵活设计时，实现这个的一个办法，可能是通过使用不同的后端服务于不同的使用场景。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml9(para)
msgid ""
"Operational factors affect the design choices for a general purpose cloud, "
"and operations staff receive tasks regarding the maintenance of cloud "
"environments for larger installations."
msgstr "对于通用型云，运维的因素会影响到设计的选择，且运维人员在大型的安装维护云环境面临着巨大的任务。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml14(term)
msgid "Maintenance tasks"
msgstr "维护任务："

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml16(para)
msgid ""
"The storage solution should take into account storage maintenance and the "
"impact on underlying workloads."
msgstr "存储的解决方案需要考虑存储的维护以及其对底层负载的影响。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml22(term)
msgid "Reliability and availability"
msgstr "可靠性和可用性："

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml24(para)
msgid ""
"Reliability and availability depend on wide area network availability and on"
" the level of precautions taken by the service provider."
msgstr "可靠性和可用性依赖于广域网的可用性以及服务提供商采取的预防措施的级别。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml31(term)
msgid "Flexibility"
msgstr "灵活性："

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml33(para)
msgid ""
"Organizations need to have the flexibility to choose between off-premise and"
" on-premise cloud storage options. This concept relies on relevant decision "
"criteria that is complementary to initial direct cost savings potential. For"
" example, continuity of operations, disaster recovery, security, and records"
" retention laws, regulations, and policies."
msgstr "组织需要有选择off-premise和on-premise云存储属性的灵活性。此概念依赖于相关的决策条件，它可以互补，会在初始>时有直接的成本节约潜力。举例，持续的维护、灾难恢复、安全、记录保留规定、法规以及规则。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml44(para)
msgid ""
"Monitoring and alerting services are vitally important in cloud environments"
" with high demands on storage resources. These services provide a real-time "
"view into the health and performance of the storage systems. An integrated "
"management console, or other dashboards capable of visualizing SNMP data, is"
" helpful when discovering and resolving issues that arise within the storage"
" cluster."
msgstr "在对存储资源有非常高要求的云环境中，确保在环境中安装了监控和警报服务并且将它们进行配置以提供存储系统实时的健康状态和性能状态的信息，是非常之重要的。使用集成的管理控制台，或者能够将 SNMP 数据可视化的面板程序，能够帮助发现和解决存储集群中\n可能出现的问题。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml51(para)
msgid "A storage-focused cloud design should include:"
msgstr "存储型的云设计需要包括："

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml54(para)
msgid "Monitoring of physical hardware resources."
msgstr "监测物理硬件资源。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml57(para)
msgid ""
"Monitoring of environmental resources such as temperature and humidity."
msgstr "监测诸如温度和湿度等的环境信息。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml61(para)
msgid ""
"Monitoring of storage resources such as available storage, memory and CPU."
msgstr "监测诸如可用存储空间、内存和 CPU 等存储资源信息。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml65(para)
msgid ""
"Monitoring of advanced storage performance data to ensure that storage "
"systems are performing as expected."
msgstr "监测高级的存储性能数据，以确保存储系统正常运转。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml70(para)
msgid ""
"Monitoring of network resources for service disruptions which would affect "
"access to storage."
msgstr "监测网络资源情况，关注可能影响存储访问的网络服务中断问题。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml75(para)
msgid "Centralized log collection."
msgstr "日志集中收集"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml78(para)
msgid "Log analytics capabilities."
msgstr "日志分析能力。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml81(para)
msgid ""
"Ticketing system (or integration with a ticketing system) to track issues."
msgstr "票务系统(或者与其它票务系统的集成)以跟踪问题。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml85(para)
msgid ""
"Alerting and notification of responsible teams or automated systems which "
"remediate problems with storage as they arise."
msgstr "对负责团队的警报和通知，或者能够在存储出现问题时能够修复问题的自动化系统。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml90(para)
msgid ""
"Network Operations Center (NOC) staffed and always available to resolve "
"issues."
msgstr "配备有网络运营中心(NOC)员工并保持工作状态以解决问题。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml96(title)
msgid "Management efficiency"
msgstr "管理效率"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml97(para)
msgid ""
"Operations personnel are often required to replace failed drives or nodes "
"and provide ongoing maintenance of the storage hardware."
msgstr "运营人员会经常需要替换失效的驱动器或者节点，并且不断进行存储硬件的维护工作。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml99(para)
msgid ""
"Provisioning and configuration of new or upgraded storage is another "
"important consideration when it comes to management of resources. The "
"ability to easily deploy, configure, and manage storage hardware results in "
"a solution that is easy to manage. This also makes use of management systems"
" that can automate other pieces of the overall solution. For example, "
"replication, retention, data backup and recovery."
msgstr "准备和配置新增或者升级的存储，是另外一个关于管理存储资源的重要考虑因素。方便地部署、配置以及管理存储硬件的能力，能够造就一个容易管理的解决方案。这同样也利用了能够将整个解决方案中的其它部分组件自动化的管理系统。例如，复制、保管、数据备份和恢复。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml109(title)
msgid "Application awareness"
msgstr "应用的可知性"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml110(para)
msgid ""
"Well-designed applications should be aware of underlying storage subsystems,"
" in order to use cloud storage solutions effectively."
msgstr "当设计在云中利用存储解决方案的应用时，需要将应用设计成为能够觉察到底层的存储子系统的存在以及其可用的特性。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml112(para)
msgid ""
"If natively available replication is not available, operations personnel "
"must be able to modify the application so that they can provide their own "
"replication service. In the event that replication is unavailable, "
"operations personnel can design applications to react such that they can "
"provide their own replication services. An application designed to detect "
"underlying storage systems can function in a wide variety of "
"infrastructures, and still have the same basic behavior regardless of the "
"differences in the underlying infrastructure."
msgstr "当创建一个需要副本数据的应用时，我们建议将应用设计成为能够检测副本复制是否是底层存储子系统的原生特性。在复制功能不是底层存储系统的特性的情况下，才将应用设计成为自身能够提供副本复制服务。一个被设计为能够觉察到底层存储系统的应用，同样可以在很大范围的基础设施中部署，并且依然拥有一些最基本的行为，而不管底层的基础设施有什么不同。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml124(title)
msgid "Fault tolerance and availability"
msgstr "容错和可用性"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml125(para)
msgid ""
"Designing for fault tolerance and availability of storage systems in an "
"OpenStack cloud is vastly different when comparing the Block Storage and "
"Object Storage services. The Object Storage service design features "
"consistency and partition tolerance as a function of the application. "
"Therefore, it does not have any reliance on hardware RAID controllers to "
"provide redundancy for physical disks."
msgstr "在 OpenStack 云中为存储系统的容错和可用性进行设计，对于块存储和对象存储服务来说，是有很大的不同的。对象存储服务具>有一致性以及区块容错，能够作为应用的功能。因此，它并不依赖于硬件 RAID 控制器提供的物理磁盘冗余。与此相对的，块存储资源节点\n通常都配备有高级的 RAID 控制器以及高性能的磁盘，被设计为能够在硬件层面上提供容错。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml134(title)
msgid "Block Storage fault tolerance and availability"
msgstr "块存储的容错和可用性"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml135(para)
msgid ""
"Block Storage resource nodes are commonly configured with advanced RAID "
"controllers and high performance disks to provide fault tolerance at the "
"hardware level."
msgstr "块存储资源节点通常都配备有高级的 RAID 控制器以及高性能的磁盘，被设计为能够在硬件层面上提供容错。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml138(para)
msgid ""
"Deploy high performing storage solutions such as SSD disk drives or flash "
"storage systems in cases where applications require extreme performance out "
"of Block Storage devices."
msgstr "在应用要求发挥块存储设备的极端性能的场景下，我们建议您部署高性能的存储方案，例如SSD 磁盘驱动器或者闪存存储系统。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml141(para)
msgid ""
"In environments that place extreme demands on Block Storage, we recommend "
"using multiple storage pools. In this case, each pool of devices should have"
" a similar hardware design and disk configuration across all hardware nodes "
"in that pool. This allows for a design that provides applications with "
"access to a wide variety of Block Storage pools, each with their own "
"redundancy, availability, and performance characteristics. When deploying "
"multiple pools of storage it is also important to consider the impact on the"
" Block Storage scheduler which is responsible for provisioning storage "
"across resource nodes. Ensuring that applications can schedule volumes in "
"multiple regions, each with their own network, power, and cooling "
"infrastructure, can give tenants the ability to build fault tolerant "
"applications that are distributed across multiple availability zones."
msgstr "在对块存储具有极端需求的环境下，我们建议利用多个存储池所带来的好处。在这种场景中，每个设备池，在池中的所有硬件节点上，必须都具有相似的硬件设计以及磁盘配置。这使得设计能够为应用提供到多个块存储池的访问，每个存储池都有其自身的冗余、可用性\n和性能特点。部署多个存储池时，对负责在资源节点上准备存储的块存储调度器的影响，也是一个重要的考虑因素。确保应用能够将其存储卷分散到不同的区域中，每个区域具有其自身的网络、电源以及冷却基础设施，能够给予租户建立具有容错性应用的能力。该应用会被分布到多个可用区域中。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml156(para)
msgid ""
"In addition to the Block Storage resource nodes, it is important to design "
"for high availability and redundancy of the APIs and related services that "
"are responsible for provisioning and providing access to storage. We "
"recommend designing a layer of hardware or software load balancers in order "
"to achieve high availability of the appropriate REST API services to provide"
" uninterrupted service. In some cases, it may also be necessary to deploy an"
" additional layer of load balancing to provide access to back-end database "
"services responsible for servicing and storing the state of Block Storage "
"volumes. We also recommend designing a highly available database solution to"
" store the Block Storage databases. A number of highly available database "
"solutions such as Galera and MariaDB can be leveraged to help keep database "
"services online to provide uninterrupted access so that tenants can manage "
"Block Storage volumes."
msgstr "在块存储资源节点之外，为 API 以及相关的负责准备存储和提供到存储的访问的服务的高可用性和冗余进行设计也非常重要。我们建议设计中包含一个硬件或者软件的负载均衡器层，以实现相关 REST API 服务的高可用性，从而实现提供不中断的服务。某些情况下，\n可能还需要部署一个额外的负载均衡层，以提供到后端数据库服务的访问，该后端数据库负责提供以及保存块存储卷的状态信息。我们同样建议设计一个高可用的数据库解决方案来存放块存储的数据库。当前有许多的高可用数据库的解决方案，比如说 Galera 和 MariaDB，能够被用以帮助保持数据库服务在线，以提供不间断的访问服务，保证租户能够管理块存储卷。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml172(para)
msgid ""
"In a cloud with extreme demands on Block Storage, the network architecture "
"should take into account the amount of East-West bandwidth required for "
"instances to make use of the available storage resources. The selected "
"network devices should support jumbo frames for transferring large blocks of"
" data. In some cases, it may be necessary to create an additional back-end "
"storage network dedicated to providing connectivity between instances and "
"Block Storage resources so that there is no contention of network resources."
msgstr "在对块存储具有极端需求的云环境中，网络的架构需要考虑东西向的带宽流量，这些带宽是实例使用可用的存储资源所必需的。所选择的网络设备必须支持巨型帧以传输大块的数据。某些情况下，可能还需要创建额外的后端存储网络，专用于为实例和块存储资源之间提供网络连接，来保证没有对于网络资源的争抢。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml183(title)
msgid "Object Storage fault tolerance and availability"
msgstr "对象存储容错和可用性"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml184(para)
msgid ""
"While consistency and partition tolerance are both inherent features of the "
"Object Storage service, it is important to design the overall storage "
"architecture to ensure that the implemented system meets those goals. The "
"OpenStack Object Storage service places a specific number of data replicas "
"as objects on resource nodes. These replicas are distributed throughout the "
"cluster based on a consistent hash ring which exists on all nodes in the "
"cluster."
msgstr "虽然一致性和区块容错性都是对象存储服务的内生特性，对整个存储架构进行设计，以确保要实施的系统能够满足这些目标依然还是很重要的。OpenStack 对象存储服务将特定数量的数据副本作为对象存放与资源节点上。这些副本分布在整个集群之中，基于存在于集群\n中所有节点上的一致性哈希环。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml192(para)
msgid ""
"Design the Object Storage system with a sufficient number of zones to "
"provide quorum for the number of replicas defined. For example, with three "
"replicas configured in the Swift cluster, the recommended number of zones to"
" configure within the Object Storage cluster in order to achieve quorum is "
"5. While it is possible to deploy a solution with fewer zones, the implied "
"risk of doing so is that some data may not be available and API requests to "
"certain objects stored in the cluster might fail. For this reason, ensure "
"you properly account for the number of zones in the Object Storage cluster."
msgstr "对象存储系统必须设计得拥有充足的区域提供法定数量，为所定义的复制份数。举个例子，在一个swift集群中配置了三份复制，那么建议区域数量是5。当然，也可以部署时少于这个数，但是这有数据不可用的风险以及API请求无法应答。基于这个原因，在对象存储系\n统中要确保正确的数量。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml202(para)
msgid ""
"Each Object Storage zone should be self-contained within its own "
"availability zone. Each availability zone should have independent access to "
"network, power and cooling infrastructure to ensure uninterrupted access to "
"data. In addition, a pool of Object Storage proxy servers providing access "
"to data stored on the object nodes should service each availability zone. "
"Object proxies in each region should leverage local read and write affinity "
"so that local storage resources facilitate access to objects wherever "
"possible. We recommend deploying upstream load balancing to ensure that "
"proxy services are distributed across the multiple zones and, in some cases,"
" it may be necessary to make use of third party solutions to aid with "
"geographical distribution of services."
msgstr "每个对象存储区域须包含到其自身的可用区域里。每个可用区域须拥有独立的访问网络、电力和制冷等基础设施，确保访问数据不会中断。另外，每个可用区域须服务于对象存储池代理服务，而代理服务提供访问存放在对象节点的数据。在每个region的对象代理应充分\n利用本地的读写，所以尽可能的访问本地存储资源。我们建议在上游的负载均衡的部署要确保代理服务是分布在不同的区域的。在一些情况下，有必要使用第三方的解决方案来处理跨地域分布式服务。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml215(para)
msgid ""
"A zone within an Object Storage cluster is a logical division. Any of the "
"following may represent a zone:"
msgstr "对象存储集群内的区域是一个逻辑上的划分。一个区域可以是下列情形中的任意之一："

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml219(para)
msgid "A disk within a single node"
msgstr "单个节点上的一块磁盘"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml224(para)
msgid "One zone per node"
msgstr "每节点就是一个zone"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml229(para)
msgid "Zone per collection of nodes"
msgstr "Zone是多个节点的集合"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml234(para)
msgid "Multiple racks"
msgstr "多个机柜"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml239(para)
msgid "Multiple DCs"
msgstr "多数据中心"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml244(para)
msgid ""
"Selecting the proper zone design is crucial for allowing the Object Storage "
"cluster to scale while providing an available and redundant storage system. "
"It may be necessary to configure storage policies that have different "
"requirements with regards to replicas, retention and other factors that "
"could heavily affect the design of storage in a specific zone."
msgstr "决定合适的区域设计的关键是对象存储集群的扩展，还能同时提供可靠和冗余的存储系统。进一步讲，也许还需要根据不同的需求配置存储的策略，这些策略包括副本，保留以及其它在特定区域会严重影响到存储设计的因素。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml255(title)
msgid "Scaling storage services"
msgstr "扩展存储服务"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml256(para)
msgid ""
"Adding storage capacity and bandwidth is a very different process when "
"comparing the Block and Object Storage services. While adding Block Storage "
"capacity is a relatively simple process, adding capacity and bandwidth to "
"the Object Storage systems is a complex task that requires careful planning "
"and consideration during the design phase."
msgstr "将块存储和对象存储服务相比较，增加存储容量和带宽是完全不同的流程。增加块存储的容量是一个相对简单的过程，增加对象存储系统的容量和带宽是一个复杂的任务，需要经过精心的规划和周全的考虑。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml263(title)
msgid "Scaling Block Storage"
msgstr "扩展块存储"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml264(para)
msgid ""
"You can upgrade Block Storage pools to add storage capacity without "
"interruption to the overall Block Storage service. Add nodes to the pool by "
"installing and configuring the appropriate hardware and software and then "
"allowing that node to report in to the proper storage pool via the message "
"bus. This is because Block Storage nodes report into the scheduler service "
"advertising their availability. Once the node is online and available "
"tenants can make use of those storage resources instantly."
msgstr "块存储池增加存储容量的升级较简单而且毋须中断整个块存储服务。节点添加到池中仅通过简单的安装和配置合适的软硬件，然后允许节点通过消息总线报告给对应的池即可。这是因为块存储节点报告给调度器服务表明他们可用。一旦节点处于在线状态，可用的租户立马就可以使用它的存储资源。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml274(para)
msgid ""
"In some cases, the demand on Block Storage from instances may exhaust the "
"available network bandwidth. As a result, design network infrastructure that"
" services Block Storage resources in such a way that you can add capacity "
"and bandwidth easily. This often involves the use of dynamic routing "
"protocols or advanced networking solutions to add capacity to downstream "
"devices easily. Both the front-end and back-end storage network designs "
"should encompass the ability to quickly and easily add capacity and "
"bandwidth."
msgstr "在一些情形下，来自实例对块存储的需求会耗尽可用的网络带宽。因此，设计网络基础设施时，考虑到如此的块存储资源使用一定得很容易的增加容量和带宽。这通常涉及到使用动态路由协议或者是高级网络解决方案允许轻松添加下游设备以增加容量。无论是前端存储网络设计还是后端存储网络设计都得围绕着快速和容易添加容量和带宽的能力来展开。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml286(title)
msgid "Scaling Object Storage"
msgstr "扩展对象存储"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml287(para)
msgid ""
"Adding back-end storage capacity to an Object Storage cluster requires "
"careful planning and consideration. In the design phase it is important to "
"determine the maximum partition power required by the Object Storage "
"service, which determines the maximum number of partitions which can exist. "
"Object Storage distributes data among all available storage, but a partition"
" cannot span more than one disk, so the maximum number of partitions can "
"only be as high as the number of disks."
msgstr "为对象存储集群增加后端容量需要谨慎的规划和考虑。在设计阶段，决定最大partition power非常重要，这由对象存储服务所需要，它直接决定可以提供最大数量的分区。对象存储分发数据到所有的可用存储上，但是一个分区不可以再分到一块磁盘之外的地方，所以\n分区的最大数量只能是磁盘的数量。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml296(para)
msgid ""
"For example, a system that starts with a single disk and a partition power "
"of 3 can have 8 (2^3) partitions. Adding a second disk means that each has 4"
" partitions. The one-disk-per-partition limit means that this system can "
"never have more than 8 disks, limiting its scalability. However, a system "
"that starts with a single disk and a partition power of 10 can have up to "
"1024 (2^10) disks."
msgstr "例如，一个系统开始使用单个磁盘，partition power是3，那么可以有8(2^3) 个分区。增加第二块磁盘意味着每块将拥有4个分区。一盘一分区的限制意味着此系统不可能拥有超过8块磁盘，它的扩展性受限。因此，一个系统开始时使用单个磁盘，且partition power是10的话可以使用1024(2^10)个磁盘。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml303(para)
msgid ""
"As you add back-end storage capacity to the system, the partition maps "
"redistribute data amongst the storage nodes. In some cases, this replication"
" consists of extremely large data sets. In these cases, we recommend using "
"back-end replication links that do not contend with tenants' access to data."
msgstr "为系统的后端存储增加了容量后，分区映射会带来数据重新分发到存储节点，在一些情况下，这些复制会带来超大的数据集合，在此种情况下，建议使用后端复制链接，它也不会阻断租户访问数据。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml309(para)
msgid ""
"As more tenants begin to access data within the cluster and their data sets "
"grow it is necessary to add front-end bandwidth to service data access "
"requests. Adding front-end bandwidth to an Object Storage cluster requires "
"careful planning and design of the Object Storage proxies that tenants use "
"to gain access to the data, along with the high availability solutions that "
"enable easy scaling of the proxy layer. We recommend designing a front-end "
"load balancing layer that tenants and consumers use to gain access to data "
"stored within the cluster. This load balancing layer may be distributed "
"across zones, regions or even across geographic boundaries, which may also "
"require that the design encompass geo-location solutions."
msgstr "当越来越多的租户开始访问对象存储集群的数据，他们的数据开始不断的增长时，就有必要为服务增加前端带宽以应对不断的访问需求。为对象存储集群增加前端带宽要谨慎规划，设计对象存储代理供租户访问数据使用，为代理层设计高可用解决方案且可轻松扩展等等\n，建议设计一前端负载均衡层，为租户和最终消费者提供更加可靠的访问数据方式，这个负载均衡层可以是分发到跨区域，跨region，甚至是跨地域，这要视实际对地理位置解决方案的需求而定。"

#: ./doc/arch-design/storage_focus/section_operational_considerations_storage_focus.xml322(para)
msgid ""
"In some cases, you must add bandwidth and capacity to the network resources "
"servicing requests between proxy servers and storage nodes. For this reason,"
" the network architecture used for access to storage nodes and proxy servers"
" should make use of a design which is scalable."
msgstr "一些情况下，要求给代理服务和存储节点之间的网络资源服务增加带宽和容量。基于这个原因，用于访问存储节点和代理服务的网络架构要设计的具有扩展性。"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml37(None)
msgid ""
"@@image: '../figures/Storage_Object.png'; "
"md5=ad0b4ee39c96ab081a368ef7857479a5"
msgstr "@@image: '../figures/Storage_Object.png'; md5=ad0b4ee39c96ab081a368ef7857479a5"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml98(None)
msgid ""
"@@image: '../figures/Storage_Hadoop3.png'; "
"md5=bdc6373caede70b37209de260616b255"
msgstr "@@image: '../figures/Storage_Hadoop3.png'; md5=bdc6373caede70b37209de260616b255"

#. When image changes, this message will be marked fuzzy or untranslated for
#. you.
#. It doesn't matter what you translate it to: it's not used at all.
#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml131(None)
msgid ""
"@@image: '../figures/Storage_Database_+_Object5.png'; "
"md5=a0cb2374c3515b8f3203ebdc7bb7dbbf"
msgstr "@@image: '../figures/Storage_Database_+_Object5.png'; md5=a0cb2374c3515b8f3203ebdc7bb7dbbf"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml9(para)
msgid ""
"Storage-focused architecture highly depends on the specific use case. This "
"section discusses three specific example use cases:"
msgstr "存储型的架构十分依赖于明确的应用场景。本节讨论了三种不同使用场景的例子"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml14(para)
msgid "An object store with a RESTful interface"
msgstr "一个带有 RESTful 接口的对象存储"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml19(para)
msgid "Compute analytics with parallel file systems"
msgstr "使用并行文件系统的计算分析"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml24(para)
msgid "High performance database"
msgstr "高性能数据库"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml29(para)
msgid ""
"The example below shows a REST interface without a high performance "
"requirement."
msgstr "本例描绘了没有高性能需求的 REST 接口。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml31(para)
msgid ""
"Swift is a highly scalable object store that is part of the OpenStack "
"project. This diagram explains the example architecture: <placeholder-1/>"
msgstr "Swift 是一个高度可扩展的对象存储，同时它也是 OpenStack 项目中的一部分。以下是说明示例架构的一幅图示：<placeholder-1/>"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml41(para)
msgid ""
"The example REST interface, presented as a traditional Object store running "
"on traditional spindles, does not require a high performance caching tier."
msgstr "所展现的 REST 接口不需要一个高性能的缓存层，并且被作为一个运行在传统设备\n上的传统的对象存储抛出。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml44(para)
msgid "This example uses the following components:"
msgstr "此例使用了如下组件："

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml45(para)
#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml149(para)
msgid "Network:"
msgstr "网络："

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml48(para)
msgid ""
"10 GbE horizontally scalable spine leaf back-end storage and front end "
"network."
msgstr "10 GbE 可水平扩展的分布式核心后端存储及前端网络。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml52(para)
#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml156(para)
msgid "Storage hardware:"
msgstr "存储硬件："

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml55(para)
msgid ""
"10 storage servers each with 12x4 TB disks equaling 480 TB total space with "
"approximately 160 Tb of usable space after replicas."
msgstr "10 台存储服务器，每台拥有 12x4 TB 磁盘，一共 480 TB 的总空间，使用复制的配置之后，大约为 160 TB 的可用空间。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml60(para)
msgid "Proxy:"
msgstr "代理："

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml63(para)
#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml171(para)
msgid "3x proxies"
msgstr "3x 代理"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml66(para)
#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml174(para)
msgid "2x10 GbE bonded front end"
msgstr "2x10 GbE 绑定的前端"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml69(para)
#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml177(para)
msgid "2x10 GbE back-end bonds"
msgstr "2x10 GbE 后端绑定"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml72(para)
#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml180(para)
msgid "Approximately 60 Gb of total bandwidth to the back-end storage cluster"
msgstr "到后端存储集群大约 60 Gb 的总带宽"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml77(para)
msgid ""
"It may be necessary to implement a 3rd-party caching layer for some "
"applications to achieve suitable performance."
msgstr "对于一些应用来说，可能需要引入第3方的缓存层以实现合意的性能。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml82(title)
msgid "Compute analytics with Data processing service"
msgstr "带数据处理服务的计算分析"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml83(para)
msgid ""
"Analytics of large data sets are highly dependent on the performance of the "
"storage system. Clouds using storage systems such as Hadoop Distributed File"
" System (HDFS) have inefficiencies which can cause performance issues."
msgstr "对大规模数据集的分析十分依赖于存储系统的性能。有些云使用类似Hadoop分布式文件系统 (HDFS) 的低效存储系统，可能会引起性能问题。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml88(para)
msgid ""
"One potential solution to this problem is the implementation of storage "
"systems designed for performance. Parallel file systems have previously "
"filled this need in the HPC space and are suitable for large scale "
"performance-orientated systems."
msgstr "这个问题的一个解决方案是部署一个设计时便将性能考虑在内的存储系统。传统上来说，并行文件系统填补了 HPC 空间里的这个需要，在适用的时候，可以作为大规模面向性能的系统的一个备份的方案考虑。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml92(para)
msgid ""
"OpenStack has integration with Hadoop to manage the Hadoop cluster within "
"the cloud. This diagram shows an OpenStack store with a high performance "
"requirement: <placeholder-1/>"
msgstr "OpenStack 通过数据处理项目Sahara与 Hadoop 集成。该项目被用以在云中管理 Hadoop 集群。此示意图展示了OpenStack作为高性能存储的需求：<placeholder-1/>"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml102(para)
msgid ""
"The hardware requirements and configuration are similar to those of the High"
" Performance Database example below. In this case, the architecture uses "
"Ceph's Swift-compatible REST interface, features that allow for connecting a"
" caching pool to allow for acceleration of the presented pool."
msgstr "实际的硬件需求以及配置与下面的高性能数据库例子相似。在这个场景中，采用的架构使用了 Ceph 的 Swift 兼容 REST 接口，以及允许连接至一个缓存池以加速展现出来的池的特性。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml112(title)
msgid "High performance database with Database service"
msgstr "带数据库服务的高性能数据库"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml113(para)
msgid ""
"Databases are a common workload that benefit from high performance storage "
"back ends. Although enterprise storage is not a requirement, many "
"environments have existing storage that OpenStack cloud can use as back "
"ends. You can create a storage pool to provide block devices with OpenStack "
"Block Storage for instances as well as object interfaces. In this example, "
"the database I-O requirements are high and demand storage presented from a "
"fast SSD pool."
msgstr "数据库是一种常见的能够从高性能数据后端中获益的负载。尽管企业级的存储并不在需求中，很多环境都已经拥有能够被用作 OpenStack 云后端的存储。如下图中所示，可以划分出一个存储池出来，使用 OpenStack 块存储向实例提供块设备，同样也可以提供对象存储\n接口。在这个例子中，数据库的 I-O 需求非常高，所需的存储是从一个高速的 SSD 池中抛出来的。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml120(para)
msgid ""
"A storage system presents a LUN backed by a set of SSDs using a traditional "
"storage array with OpenStack Block Storage integration or a storage platform"
" such as Ceph or Gluster."
msgstr "一个存储系统被用以抛出 LUN，其后端由通过使用传统的存储阵列与 OpenStack 块存储集成的一系列的 SSD 所支撑，或者是一个类似于 Ceph 或者 Gluster 之类的存储平台。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml124(para)
msgid ""
"This system can provide additional performance. For example, in the database"
" example below, a portion of the SSD pool can act as a block device to the "
"Database server. In the high performance analytics example, the inline SSD "
"cache layer accelerates the REST interface."
msgstr "这种类型的系统也能够在其他场景下提供额外的性能。比如说，在下面的数据库例子中，SSD 池中的一部分可以作为数据库服务器的块设备。在高性能分析的例子中，REST 接口将会被内联的 SSD 缓存层所加速。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml134(para)
msgid ""
"In this example, Ceph presents a Swift-compatible REST interface, as well as"
" a block level storage from a distributed storage cluster. It is highly "
"flexible and has features that enable reduced cost of operations such as "
"self healing and auto balancing. Using erasure coded pools are a suitable "
"way of maximizing the amount of usable space."
msgstr "选用 Ceph 以抛出 Swift 兼容的 REST 接口，同样的也从一个分布式的存储集群中提供了块级别的存储。Ceph 非常的灵活，并且具有能够降低运营成本的许多特性，比如说自动修复以及自动平衡。Ceph 中的 erasure coded 池被用以最大化可用空间的量。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml141(para)
msgid ""
"There are special considerations around erasure coded pools. For example, "
"higher computational requirements and limitations on the operations allowed "
"on an object; erasure coded pools do not support partial writes."
msgstr "请注意关于 erasure coded 池的使用有特殊的考虑因素，比如说，更高的计算要求以及对象上所允许的操作限制。另外，部分写入在 erasure coded 的池中也不被支持。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml147(para)
msgid ""
"Using Ceph as an applicable example, a potential architecture would have the"
" following requirements:"
msgstr "跟上面的例子相关的 Ceph 的一个可能架构需要如下组件："

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml152(para)
msgid ""
"10 GbE horizontally scalable spine leaf back-end storage and front-end "
"network"
msgstr "10 GbE 可水平扩展的分布式核心后端存储及前端网络。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml159(para)
msgid "5 storage servers for caching layer 24x1 TB SSD"
msgstr "5 台作为缓存池的存储服务器，每台 24x1 TB SSD"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml163(para)
msgid ""
"10 storage servers each with 12x4 TB disks which equals 480 TB total space "
"with about approximately 160 Tb of usable space after 3 replicas"
msgstr "10 台存储服务器，每台拥有 12x4 TB 磁盘，一共 480 TB 的总空间，使用 3 份复制的配置之后，大约为 160 TB 的可用空间。"

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml168(para)
msgid "REST proxy:"
msgstr "REST 代理："

#: ./doc/arch-design/storage_focus/section_prescriptive_examples_storage_focus.xml184(para)
msgid ""
"Using an SSD cache layer, you can present block devices directly to "
"Hypervisors or instances. The REST interface can also use the SSD cache "
"systems as an inline cache."
msgstr "SSD 缓存层被用以直接向宿主机或者实例抛出块设备。SSD 缓存系统也能够被用作 REST 接口的内联缓存。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml12(para)
msgid "There are three areas to consider when selecting storage hardware:"
msgstr "当选择存储硬件时有三大块需要考虑："

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml21(para)
msgid "Reliability"
msgstr "可靠性"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml24(para)
msgid ""
"Storage-focused OpenStack clouds must reflect that the workloads are storage"
" intensive. These workloads are not compute intensive, nor are they "
"consistently network intensive. The network may be heavily utilized to "
"transfer storage, but they are not otherwise network intensive."
msgstr "存储型OpenStack云须能反映出是针对存储密集型的负载因素。这些负载既不是计算密集型也不是网络密集型，网络也许在传输数据时有很高的负载，但是这是另外一个网络密集的范畴。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml29(para)
msgid ""
"For a storage-focused OpenStack design architecture, the selection of "
"storage hardware determines the overall performance and scalability of the "
"design architecture. Several factors impact the design process:"
msgstr "对于存储型OpenStack架构设计来说，存储硬件的选择将决定整个架构的性能和可扩展性。在设计过程中，一些需要考虑的不同因素："

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml37(para)
msgid ""
"The cost of components affects which storage architecture and hardware you "
"choose."
msgstr "使用什么存储架构和选择什么硬件将影响着开销。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml44(para)
msgid ""
"The latency of storage I/O requests indicates performance. Performance "
"requirements affect which solution you choose."
msgstr "存储I/O请求的延迟影响着性能。解决方案的选择会影响到性能的需求。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml51(para)
msgid ""
"Scalability refers to how the storage solution performs as it expands to its"
" maximum size. Storage solutions that perform well in small configurations "
"but have degraded performance in large configurations are not scalable. A "
"solution that performs well at maximum expansion is scalable. Large "
"deployments require a storage solution that performs well as it expands."
msgstr "此节参考术语\"扩展性“，来解释存储解决方案的表现可扩展到最大规模是怎么个好法。一个存储解决方案在小型配置时表现良好，但是在规模扩展的过程中性能降低，这就不是好的扩展性，也不会被考虑。换句话说，一个解决方案只有在规模扩展最大性能没有任何的降低才是好的扩展性。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml63(para)
msgid ""
"Expandability is the overall ability of the solution to grow. A storage "
"solution that expands to 50 PB is more expandable than a solution that only "
"scales to 10 PB."
msgstr "规模扩展性是指在整个解决方案的扩张的整体能力。一个存储解决方案可以扩展到50PB，一定比仅能扩展到10PB的规模扩展性强，也会更加倾向于前者。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml67(para)
msgid "This metric is related to scalability."
msgstr "规模扩展性和通常所说的扩展性有关系。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml73(para)
msgid ""
"Latency is a key consideration in a storage-focused OpenStack cloud. Using "
"solid-state disks (SSDs) to minimize latency for instance storage, and to "
"reduce CPU delays caused by waiting for the storage, increases performance. "
"We recommend evaluating the gains from using RAID controller cards in "
"compute hosts to improve the performance of the underlying disk subsystem."
msgstr "对于存储型OpenStack云来说，存储的延迟是主要应该考虑的。使用固态硬盘(SSD)以使实例存储延迟最小以及减少由于等待存储产生的CPU延迟，可大大提升性能。考虑让计算主机的磁盘子系统使用RAID控制卡对改善性能也大有帮助。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml81(para)
msgid ""
"The selection of storage architecture determines if a scale-out solution "
"should be used or if a single, highly expandable and scalable centralized "
"storage array would be a better choice. If a centralized storage array is "
"the right fit for the requirements then the array vendor determines the "
"hardware selection. It is possible to build a storage array using commodity "
"hardware with Open Source software, but requires people with expertise to "
"build such a system."
msgstr "存储架构的选择，以及存储硬件的选择，上面列出的几个因素是相互有冲突的，需评估决定。如果是横向扩展解决方案的选择诸如Ceph，GlusterFS，或类似的,如果是单一的，高扩展性的，那么选择中心化的存储阵列就没错。如果中心存储阵列能够满\n足需求，那么硬件的决定就是如何选择阵列供应商的事情了。使用商业硬件和开源软件来构建存储阵列也是完全可能的，只是需要构建这样的系统需要专业的人员罢了。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml88(para)
msgid ""
"On the other hand, a scale-out storage solution that uses direct-attached "
"storage (DAS) in the servers may be an appropriate choice. This requires "
"configuration of the server hardware to support the storage solution."
msgstr "反过来说，一个横向扩展的存储解决方案使用直接挂接存储(DAS)给服务器也许是个恰当的选择。如果是这样的话，服务器硬件就需要配置以支持此种存储解决方案。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml92(para)
msgid ""
"Considerations affecting storage architecture (and corresponding storage "
"hardware) of a Storage-focused OpenStack cloud:"
msgstr "一些潜在的可能影响到存储型OpenStack云的特定的存储架构(及其相应的存储硬件):"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml98(para)
msgid ""
"Based on the selected storage solution, ensure the connectivity matches the "
"storage solution requirements. If selecting centralized storage array, "
"determine how the hypervisors connect to the storage array. Connectivity can"
" affect latency and thus performance. We recommended confirming that the "
"network characteristics minimize latency to boost the overall performance of"
" the design."
msgstr "根据所选择的存储解决方案，要确保它的连接和存储解决方案的需求是匹配的。如果是选择了中心化的存储阵列，决定有多少台hypervisor会连接到此阵列中是很重要的。连接会影响到延迟以及它们的性能，所以监测网络因素以达到最小延迟，提升整体的性能。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml111(para)
msgid "Determine if the use case has consistent or highly variable latency."
msgstr "决定的是如果用例中拥有并行或高度变化的延迟。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml118(para)
msgid ""
"Ensure that the storage solution throughput is optimized based on "
"application requirements."
msgstr "要确保存储解决方案是基于应用的需求整个被优化。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml126(para)
msgid ""
"Use of DAS impacts the server hardware choice and affects host density, "
"instance density, power density, OS-hypervisor, and management tools."
msgstr "如果解决方案中使用了DAS，这会影响到但不限于，服务器硬件的选择会波及到主机密度、实例密度、电力密度、操作系统-hypervisor、以及管理工具。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml135(title)
msgid "Compute (server) hardware selection"
msgstr "计算(服务器)硬件选择"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml136(para)
msgid "Evaluate Compute (server) hardware four opposing dimensions:"
msgstr "模拟计算(服务器)硬件需要从以下四个不同的方面进行评估："

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml150(para)
msgid ""
"The number of CPU cores, how much RAM, or how much storage a given server "
"delivers."
msgstr "CPU核数，多少内存，或者多少存储可以交付。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml157(para)
msgid ""
"The number of additional resources you can add to a server before it reaches"
" capacity."
msgstr "在达到容量之前用户可以增加服务器来增加资源的数量。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml164(para)
msgid ""
"The relative of the hardware weighted against the level of design effort "
"needed to build the system."
msgstr "相对硬件的权重是体现构建系统的设计水准所需要的。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml170(para)
msgid ""
"You must weigh the dimensions against each other to determine the best "
"design for the desired purpose. For example, increasing server density can "
"mean sacrificing resource capacity or expandability. Increasing resource "
"capacity and expandability can increase cost but decrease server density. "
"Decreasing cost often means decreasing supportability, server density, "
"resource capacity, and expandability."
msgstr "为达到期望的目的而决定最佳设计需要对一些因素作出取舍和平衡。举例来说，增加服务器密度意味着牺牲资源的容量或扩展性。增加资源容量或扩展性又增加了开销但是降低了服务器密度。减少开销又意味着减低支持力度，服务器密度，资源容量和扩展性。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml178(para)
msgid ""
"Compute capacity (CPU cores and RAM capacity) is a secondary consideration "
"for selecting server hardware. As a result, the required server hardware "
"must supply adequate CPU sockets, additional CPU cores, and more RAM; "
"network connectivity and storage capacity are not as critical. The hardware "
"needs to provide enough network connectivity and storage capacity to meet "
"the user requirements, however they are not the primary consideration."
msgstr "在选择服务器硬件时计算能力(CPU核和内存容量)是次要考虑的,服务器硬件必须能够提供更多的CPU插槽，更多的CPU核的数量，以及更多的内存，至于网络连接和存储容量就显得次要一些。硬件需要的配置以提供足够的网络连接和存储容量满足用户的最低需求即可，但是这不是主要需要考虑的。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml186(para)
msgid ""
"Some server hardware form factors are better suited to storage-focused "
"designs than others. The following is a list of these form factors:"
msgstr "一些服务器硬件的因素更加适合其他类型的，但是CPU和内存的能力拥有最高的优先级。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml191(para)
msgid ""
"Most blade servers typically support dual-socket multi-core CPUs. Choose "
"either full width or full height blades to avoid the limit. High density "
"blade servers support up to 16 servers in only 10 rack units using half "
"height or half width blades."
msgstr "大多数的刀片服务器都支持双插槽、多核的CPU的。要避免去选择“全宽”或“全高”的刀片，它们会损失服务器密度。举个例子，使用高密度的刀片服务器，如HP BladeSystem和Dell ,它们都使用半高的刀片，可支持16台服务器，且仅占用10个机柜单元，它相比于全高的刀片有效的减低了50%的密度，因为全高的刀片在每10个机柜单元仅可以放置8台服务器。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml197(para)
msgid ""
"This decreases density by 50% (only 8 servers in 10 U) if a full width or "
"full height option is used."
msgstr "它相比于全高的刀片有效的减低了50%的密度，因为全高的刀片在(每10个机柜单元仅可以放置8台服务器)。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml203(para)
msgid ""
"1U rack-mounted servers have the ability to offer greater server density "
"than a blade server solution, but are often limited to dual-socket, multi-"
"core CPU configurations."
msgstr "1U机架式服务器要比刀片服务解决方案提供更大的服务器密度。但是会有双CPU插槽、多核CPU配置的限制。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml207(para)
msgid ""
"As of the Icehouse release, neither HP, IBM, nor Dell offered 1U rack "
"servers with more than 2 CPU sockets."
msgstr "就在IceHouse版本发布时，无论是HP，IBM还是Dell都无法提供多于2个CPU插槽的1U机架式服务器。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml212(para)
msgid ""
"To obtain greater than dual-socket support in a 1U rack-mount form factor, "
"customers need to buy their systems from Original Design Manufacturers "
"(ODMs) or second-tier manufacturers."
msgstr "要想使1U的服务器支持超过2个插槽，用户需要通过原始设计制造商(ODM)或二线制造商来购买。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml217(para)
msgid ""
"This may cause issues for organizations that have preferred vendor policies "
"or concerns with support and hardware warranties of non-tier 1 vendors."
msgstr "这会给企业带来额外的问题：重新评估供应商的政策，支持的力度是否够，非1线供应商的硬件质量保证等。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml224(para)
msgid ""
"2U rack-mounted servers provide quad-socket, multi-core CPU support but with"
" a corresponding decrease in server density (half the density offered by 1U "
"rack-mounted servers)."
msgstr "2U机架式服务器提供四插槽、多核CPU的支持，但是它相应的降低了服务器密度(相当于1U机架式服务器的一半)。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml230(para)
msgid ""
"Larger rack-mounted servers, such as 4U servers, often provide even greater "
"CPU capacity. Commonly supporting four or even eight CPU sockets. These "
"servers have greater expandability but such servers have much lower server "
"density and usually greater hardware cost."
msgstr "大型机架式服务器，比如4U服务器，可提供更为强大的CPU容量。通常支持4个甚至8个CPU插槽。拥有很强的扩展性，但是这些服务器会带来低密度，以及更加昂贵的开销。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml238(para)
msgid ""
"Rack-mounted servers that support multiple independent servers in a single "
"2U or 3U enclosure, \"sled servers\", deliver increased density as compared "
"to a typical 1U-2U rack-mounted servers."
msgstr "“雪撬服务器”,支持在单个2U或3U的空间放置多个独立的服务器,增加的密度超过典型的1U-2U机架服务器，"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml242(para)
msgid ""
"For example, many sled servers offer four independent dual-socket nodes in "
"2U for a total of 8 CPU sockets in 2U. However, the dual-socket limitation "
"on individual nodes may not be sufficient to offset their additional cost "
"and configuration complexity."
msgstr "举例来说，很多雪撬服>务器提供在2U的空间置放4个独立的双插槽CPU,即2U服务器拥有8颗CPU，尽管如此，分离节点的双插槽限制不足以抵消它们额外带来的开销和配置的复杂性。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml249(para)
msgid ""
"Other factors strongly influence server hardware selection for a storage-"
"focused OpenStack design architecture. The following is a list of these "
"factors:"
msgstr "一些服务器硬件的因素更加适合其他类型的，但是CPU和内存的能力拥有最高的优先级。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml256(para)
msgid ""
"In this architecture, instance density and CPU-RAM oversubscription are "
"lower. You require more hosts to support the anticipated scale, especially "
"if the design uses dual-socket hardware designs."
msgstr "在此架构中实例密度要被考虑为低，因此CPU和内存的超额认购比例也要低。为了支持实例低密度的预期扩展需要更多的主机，尤其是设计中使用了双插槽的硬件。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml266(para)
msgid ""
"Another option to address the higher host count is to use a quad socket "
"platform. Taking this approach decreases host density which also increases "
"rack count. This configuration affects the number of power connections and "
"also impacts network and cooling requirements."
msgstr "解决高主机计数的另外的办法是使用四路平台。这样的话降低了主机密度，也增加了机架数，这样的配置会影响到网络需求，电源连接数量，还有可能影响的制冷需求。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml277(para)
msgid ""
"The power and cooling density requirements might be lower than with blade, "
"sled, or 1U server designs due to lower host density (by using 2U, 3U or "
"even 4U server designs). For data centers with older infrastructure, this "
"might be a desirable feature."
msgstr "电力和制冷的密度需求要低于刀片、雪撬或1U服务器，因为(使用2U,3U甚至4U服务器)拥有更低的主机密度。对于数据中心内有旧的基础设施，这是非常有用的特性。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml286(para)
msgid ""
"Storage-focused OpenStack design architecture server hardware selection "
"should focus on a \"scale up\" versus \"scale out\" solution. The "
"determination of which is the best solution, a smaller number of larger "
"hosts or a larger number of smaller hosts, depends on a combination of "
"factors including cost, power, cooling, physical rack and floor space, "
"support-warranty, and manageability."
msgstr "存储型OpenStack架构设计的服务器硬件选择只有两种结果可决定：纵向扩展抑或横向扩展。在少而大的服务器主机和多而小的服务器主机选择更好的解决方案，取决于多种因素：预算、电力、制冷、物理机架和地板的空间、售后服务力度、以及可管理性。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml296(title)
msgid "Networking hardware selection"
msgstr "网络硬件选择"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml297(para)
msgid "Key considerations for the selection of networking hardware include:"
msgstr "选择网络硬件主要考虑应包括："

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml302(para)
msgid ""
"The user requires networking hardware that has the requisite port count."
msgstr "用户将会对网络设备有充足的端口数有需求。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml309(para)
msgid ""
"The physical space required to provide the requisite port count affects the "
"network design. A switch that provides 48 10GbE ports in 1U has a much "
"higher port density than a switch that provides 24 10GbE ports in 2U. On a "
"general scale, a higher port density leaves more rack space for compute or "
"storage components which is preferred. It is also important to consider "
"fault domains and power density. Finally, higher density switches are more "
"expensive, therefore it is important not to over design the network."
msgstr "网络的设计会受到物理空间的影响，需要提供足够的端口数。一个占用1U机柜空间的可提供48个 10GbE端口的交换机，显而易见的要比占用2U机柜空间的仅提供24个 10GbE端口的交换机有着更高的端口密度。高端口密度是首先选择的，因为其可以为计算和存储省下机柜空间。这也会引起人们的思考，容错的情况呢？电力密度？高密度的交换机更加的昂贵，也应该被考虑使用，但是没有必要覆盖设计中所有的网络，要视实际情况而定。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml333(para)
msgid ""
"User requirements for high availability and cost considerations influence "
"the required level of network hardware redundancy. Achieve network "
"redundancy by adding redundant power supplies or paired switches."
msgstr "网络硬件冗余级别需求会被用户对高可用和开销的考虑所影响。网络冗余可以是增加双电力供应也可以是结对的交换机。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml338(para)
msgid ""
"If this is a requirement, the hardware must support this configuration. User"
" requirements determine if a completely redundant network infrastructure is "
"required."
msgstr "如果这是必须的，那么对应的服务器硬件就需要配置以支持冗余的情况。用户的需求也是决定是否采用全冗余网络基础设施的关键。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml348(para)
msgid ""
"Ensure that the physical data center provides the necessary power for the "
"selected network hardware. This is not typically an issue for top of rack "
"(ToR) switches, but may be an issue for spine switches in a leaf and spine "
"fabric, or end of row (EoR) switches."
msgstr "确保物理数据中心为所选择的网络硬件提供了必要的电力。对于机柜顶端型(ToR)交换机没有什么影响，但是spine交换机的叶和fabric以及排尾交换机(EoR)就可能发生问题，假如电力不足的话。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml357(term)
msgid "Protocol support"
msgstr "协议支持"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml359(para)
msgid ""
"It is possible to gain more performance out of a single storage system by "
"using specialized network technologies such as RDMA, SRP, iSER and SCST. The"
" specifics for using these technologies is beyond the scope of this book."
msgstr "使用特定的网络技术如RDMA,SRP,iSER或SCST来提高单个存储系统的性能是可能，但是讨论这些技术已经超出了本书的范围。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml371(para)
msgid ""
"Selecting software for a storage-focused OpenStack architecture design "
"includes three areas:"
msgstr "对于存储型OpenStack架构设计来说，选择包含的软件有以下三个方面的考虑："

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml384(para)
msgid ""
"Design decisions made in each of these areas impacts the rest of the "
"OpenStack architecture design."
msgstr "上述选择项的任何一个设计决定都会影响到其余两个的OpenStack架构设计。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml390(para)
msgid ""
"Selecting the OS and hypervisor has a significant impact on the overall "
"design and also affects server hardware selection. Ensure that the selected "
"operating system and hypervisor combination support the storage hardware and"
" work with the networking hardware selection and topology. For example, Link"
" Aggregation Control Protocol (LACP) requires support from both the OS and "
"hypervisor."
msgstr "操作系统和hypervisor对于整个设计有着深刻的影响。选择一个特定的操作系统和hypervisor能够直接影响到服务器硬件的选择。确保存储硬件和拓扑支持选择好的操作系统和Hypervisor组合。也得确保网络硬件的选择和拓扑可在选定的操作系统和Hypervisor组合下正常工作。例如，如果设计中使用了链路聚合控制协议(LACP)的话，操作系统和hypervisor都需要支持它才可正常工作。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml397(para)
msgid "OS and hypervisor selection affect the following areas:"
msgstr "操作系统和hypervisor的选择会影响到下列几个方面："

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml402(para)
msgid ""
"Selection of a commercially supported hypervisor, such as Microsoft Hyper-V,"
" results in a different cost model than a community-supported open source "
"hypervisor like Kinstance or Xen. Similarly, choosing Ubuntu over Red Hat "
"(or vice versa) impacts cost due to support contracts. However, business or "
"application requirements might dictate a specific or commercially supported "
"hypervisor."
msgstr "选择商业支持的hypervisor如微软的Hyper-V，和选择社区支持的开源hypervisor如kinstance或Xen，在开销模式上是完全不同的。甚至在开源解决方案也表现不同，如选择Ubuntu而不是RedHat(或类似)在支持上有着不同的开销。换句话说，业务和应用的需求主宰着选用特殊的或商业支持的hypervisor。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml416(para)
msgid ""
"Staff must have training with the chosen hypervisor. Consider the cost of "
"training when choosing a solution. The support of a commercial product such "
"as Red Hat, SUSE, or Windows, is the responsibility of the OS vendor. If an "
"open source platform is chosen, the support comes from in-house resources."
msgstr "无论选择那个hypervisor,相关的技术人员都要经过适当的培训和知识积累，才可以支持所选择的操作系统和hypervisor组合。如果这些维护人员没有培训过，那么就得提供，当然它会影响到设计中的之处。另外一个考虑的方面就是关于操作系统-hypervisor的支持问题，商业产品如Red Hat，SUSE或Windows等的支持是由操作系统供应商来支持的，如果选用了开源的平台，支持大部分得来自于内部资源。无论何种决定，都会影响到设计时的支出。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml428(para)
msgid ""
"Ubuntu and Kinstance use different management tools than VMware vSphere. "
"Although both OS and hypervisor combinations are supported by OpenStack, "
"there are varying impacts to the rest of the design as a result of the "
"selection of one combination versus the other."
msgstr "Ubuntu和Kinstance的管理工具和VMware vSphere的管理工具是不一样的。尽管OpenStack对它们都支持。这也会对其他的设计有着非常不同的影响，结果就是选择了一种组合，然后再据此做出后面的选择。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml439(para)
msgid ""
"Ensure that the selected OS and hypervisor combination meet the appropriate "
"scale and performance requirements needed for this storage focused OpenStack"
" cloud. The chosen architecture must meet the targeted instance-host ratios "
"with the selected OS-hypervisor combination."
msgstr "确保所选择的操作系统和hypervisor组合能够满足扩展和性能的需求。所选择的架构需要满足目标实例-主机的比例。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml450(para)
msgid ""
"Ensure that the design can accommodate the regular periodic installation of "
"application security patches while maintaining the required workloads. The "
"frequency of security patches for the proposed OS-hypervisor combination "
"impacts performance and the patch installation process could affect "
"maintenance windows."
msgstr "确保设计能够在维护负载需求时能够容纳正常的所安装的应用的安全补丁。为操作系统-hypervisor组合打安全补丁的频率会影响>到性能，而且补丁的安装流程也会影响到维护工作。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml462(para)
msgid ""
"Determine the required features of OpenStack. This often determines the "
"selection of the OS-hypervisor combination. Certain features are only "
"available with specific OSes or hypervisors. For example, if certain "
"features are not available, you might need to modify the design to meet user"
" requirements."
msgstr "决定那些特性是需要OpenStack提供的。这通常也决定了操作系统-hypervisor组合的选择。一些特性仅在特定的操作系统和hypervisor中是可用的。举例，如果确认某些特性无法实现，设计也许需要修改代码去满足用户的需求。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml474(para)
msgid ""
"Any chosen OS/hypervisor combination should be chosen based on the "
"interoperability with one another, and other OS-hyervisor combinations. "
"Operational and troubleshooting tools for one OS-hypervisor combination may "
"differ from the tools used for another OS-hypervisor combination. As a "
"result, the design must address if the two sets of tools need to "
"interoperate."
msgstr "用户需要考虑此操作系统和Hypervisor组合和另外的操作系统和hypervisor怎么互动，甚至包括和其它的软件。操作某一操作系统-hypervisor组合的故障排除工具，和操作其他的操作系统-hypervisor组合也许根本就不一样，那结果就是，设计时就需要交付此两种工具集的互操作性。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml489(para)
msgid ""
"Which OpenStack components you choose can have a significant impact on the "
"overall design. While there are certain components that are always present, "
"Compute and Image Service, for example, there are other services that may "
"not need to be present. As an example, a certain design may not require the "
"Orchestration module. Omitting Orchestration would not typically have a "
"significant impact on the overall design, however, if the architecture uses "
"a replacement for OpenStack Object Storage for its storage component, this "
"could potentially have significant impacts on the rest of the design."
msgstr "在设计和部署中选择包含什么OpenStack组件是着显著的影响。有一些组件是必选的，例如计算和镜像服务，还有一些组件是可选的，举例来说，一些设计中不需要Orchestration模块，忽略掉Heat组件对整个系统没啥影响。还有其他情况，如架构中使用的存储组件不是OpenStack 对象存储，这就会对设计中的其它组件有着很大的影响。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml499(para)
msgid ""
"A storage-focused design might require the ability to use Orchestration to "
"launch instances with Block Storage volumes to perform storage-intensive "
"processing."
msgstr "一个存储型设计也许需要使用Orchestration，能够启动带块设备卷的实例，以满足存储密集型任务处理。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml502(para)
msgid ""
"A storage-focused OpenStack design architecture typically uses the following"
" components:"
msgstr "在存储型OpenStack架构设计中，下列组件是典型使用的："

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml509(para)
msgid "OpenStack dashboard (horizon)"
msgstr "OpenStack GUI界面 (horizon)"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml512(para)
msgid ""
"OpenStack Compute (nova) (including the use of multiple hypervisor drivers)"
msgstr "OpenStack 计算 (nova) (包括使用多hypervisor驱动)"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml516(para)
msgid "OpenStack Object Storage (swift) (or another object storage solution)"
msgstr "OpenStack 对象存储 (swift) (或者是另外的对象存储解决方案)"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml525(para)
msgid "OpenStack Networking (neutron) or legacy networking (nova-network)"
msgstr "OpenStack 网络 (neutron) 或遗留网路服务 (nova-network)"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml528(para)
msgid ""
"Excluding certain OpenStack components may limit or constrain the "
"functionality of other components. If a design opts to include Orchestration"
" but exclude Telemetry, then the design cannot take advantage of "
"Orchestration's auto scaling functionality (which relies on information from"
" Telemetry). Due to the fact that you can use Orchestration to spin up a "
"large number of instances to perform the compute-intensive processing, we "
"strongly recommend including Orchestration in a compute-focused architecture"
" design."
msgstr "排除一些特定的OpenStack组件会让其他组件的功能受到限制。如果在一个设计中有Orchestration模块但是没有包括Telemetry模块，那么此设计就无法使用Orchestration带来自动伸缩功能的优点(Orchestration需要Telemetery提供监测数据)。用户使用Orchestration在计算密集型处理任务时可自动启动大量的实例，因此强烈建议在计算型架构设计中使用Orchestration。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml541(para)
msgid ""
"While OpenStack is a fairly complete collection of software projects for "
"building a platform for cloud services, you may need to add other pieces of "
"software."
msgstr "OpenStack为了构建一个平台提供云服务，是完全公平的收集软件的项目。在任何给定的OpenStack设计中都需要考虑那些附加的软件。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml548(para)
msgid ""
"OpenStack Networking (neutron) provides a wide variety of networking "
"services for instances. There are many additional networking software "
"packages that may be useful to manage the OpenStack components themselves. "
"Some examples include HAProxy, keepalived, and various routing daemons (like"
" Quagga). The <citetitle>OpenStack High Availability Guide</citetitle> "
"describes some of these software packages, HAProxy in particular. See the "
"<link href=\"http://docs.openstack.org/high-availability-guide/content/ch-"
"network.html\">Network controller cluster stack chapter</link> of the "
"OpenStack High Availability Guide."
msgstr "OpenStack网络 (neutron)为实例提供各种各样的网络服务。另外有许多网络软件包用于管理OpenStack组件自身。这里举一些例子，可提供负载均衡，网络冗余协议或路由守护进程(如 Quagga)，关于这些软件包更加详细的描述细节都在<citetitle>OpenStack 高可用指南</citetitle>中找到 <link href=\"http://docs.openstack.org/high-availability-guide/content/ch-network.html\">网络控制器集群</link>。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml562(para)
msgid "Management software includes software for providing:"
msgstr "管理软件所包含的能够提供的软件："

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml565(para)
msgid "Clustering"
msgstr "集群"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml570(para)
msgid "Logging"
msgstr "日志记录"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml580(para)
msgid "Alerting"
msgstr "警告"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml586(para)
msgid ""
"The factors for determining which software packages in this category to "
"select is outside the scope of this design guide."
msgstr "这包括能够提供集群、日志、监测及预警等的软件。在此目录什么因素决定选择什么软件包已经超出了本书的范围。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml590(para)
msgid ""
"The availability design requirements determine the selection of Clustering "
"Software, such as Corosync or Pacemaker. The availability of the cloud "
"infrastructure and the complexity of supporting the configuration after "
"deployment determines the impact of including these software packages. The "
"<citetitle>OpenStack High Availability Guide</citetitle> provides more "
"details on the installation and configuration of Corosync and Pacemaker."
msgstr "在集群软件中如 Corosync和Pacemaker在可用性需求中占主流。包含这些软件包是主要决定的，要使云基础设施具有高可用的话，当然在部署之后会带来复杂的配置。<citetitle>OpenStack 高可用指南</citetitle></link> 提供了更加详细的安装和配置Corosync和Pacemaker，所以在设计中这些软件包需要被包含。 "

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml598(para)
msgid ""
"Operational considerations determine the requirements for logging, "
"monitoring, and alerting. Each of these sub-categories includes options. For"
" example, in the logging sub-category you could select Logstash, Splunk, Log"
" Insight, or another log aggregation-consolidation tool. Store logs in a "
"centralized location to facilitate performing analytics against the data. "
"Log data analytics engines can also provide automation and issue "
"notification, by providing a mechanism to both alert and automatically "
"attempt to remediate some of the more commonly known issues."
msgstr "对日志、监测以及报警的需求是由运维考虑决定的。它们的每个子类别都包含了大量的属性。举例，在日志子类别中，某些情况考虑使用Logstash,Splunk，instanceware Log Insight等，或者其他的日志聚合-合并工具。日志需要存放在中心地带，使分析数据变得更为简单。日志数据分析引擎亦得提供自动化和问题通知，通过提供一致的预警和自动修复某些常见的已知问题。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml609(para)
msgid ""
"If you require any of these software packages, the design must account for "
"the additional resource consumption (CPU, RAM, storage, and network "
"bandwidth for a log aggregation solution, for example). Some other potential"
" design impacts include:"
msgstr "如果这些软件包都需要的话，设计必须计算额外的资源使用率(CPU，内存，存储以及网络带宽)。其他一些潜在影响设计的有："

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml616(para)
msgid ""
"OS-Hypervisor combination: Ensure that the selected logging, monitoring, or "
"alerting tools support the proposed OS-hypervisor combination."
msgstr "操作系统-Hypervisor组合：确保所选择的日志系统，监测系统，或预警工具都是被此组合所支持的。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml630(para)
msgid ""
"Most OpenStack components require access to back-end database services to "
"store state and configuration information. Choose an appropriate back-end "
"database which satisfies the availability and fault tolerance requirements "
"of the OpenStack services."
msgstr "OpenStack组件通常需要访问后端的数据库服务以存放状态和配置信息。选择合适的后端数据库以满足可用性和容错的需求，这是OpenStack服务所要求的。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml635(para)
msgid ""
"MySQL is the default database for OpenStack, but other compatible databases "
"are available."
msgstr "MySQL是OpenStack通常考虑的后端数据库，其它和MySQL兼容的数据也同样可以很好的工作。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml638(para)
msgid "Telemetry uses MongoDB."
msgstr "Telemetry 使用MongoDB。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml642(para)
msgid ""
"The chosen high availability database solution changes according to the "
"selected database. MySQL, for example, provides several options. Use a "
"replication technology such as Galera for active-active clustering. For "
"active-passive use some form of shared storage. Each of these potential "
"solutions has an impact on the design:"
msgstr "为数据库提供高可用的解决方案选择将改变基于何种数据库。如果是选择了MySQL,有几种方案可供选择，如果是主-主模式集群，则使用 Galera复制技术；如果是主-备模式则必须使用共享存储。每个潜在的方案都会影响到架构的设计："

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml650(para)
msgid ""
"Solutions that employ Galera/MariaDB require at least three MySQL nodes."
msgstr "解决方案采用Galera/MariaDB，需要至少3个MySQL节点。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml654(para)
msgid "MongoDB has its own design considerations for high availability."
msgstr "MongoDB尤其自身的设计考虑，回馈就是可让数据库高可用。"

#: ./doc/arch-design/storage_focus/section_architecture_storage_focus.xml658(para)
msgid ""
"OpenStack design, generally, does not include shared storage. However, for "
"some high availability designs, certain components might require it "
"depending on the specific implementation."
msgstr "通常在OpenStack的设计中是不包括共享存储的，但是在高可用的设计中，为了特定的实现一些组件会用得到共享存储。"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml9(para)
msgid "Requirements for data define storage-focused clouds. These include:"
msgstr "据数据的需求来定义存储型云，他们包括："

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml17(para)
msgid "Access patterns"
msgstr "访问模式"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml22(para)
msgid "Data structures"
msgstr "数据结构"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml27(para)
msgid ""
"A balance between cost and user requirements dictate what methods and "
"technologies to use in a cloud architecture."
msgstr "成本以及用户需求之间的平衡，决定了在云架构中需要使用的方法和技术。"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml33(para)
msgid ""
"The user pays only for the storage they actually use. This limit typically "
"reflects average user consumption during a month. This does not mean that "
"cloud storage is less expensive, only that it incurs operating expenses "
"rather than capital expenses."
msgstr "用户只为他实际使用的存储买单。这个值通常由用户在一个月之中的平均使用量表示。这并不意味着云存储更便宜，云存储只让运营费用变得便宜，而非资产支出。从商业角度来说，方案能够适当的扩展，避免了提前购买一个不能被完全利用的大容量存储，是有益的。"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml43(para)
msgid ""
"Multiple jurisdictions have legislative and regulatory requirements "
"governing the storage and management of data in cloud environments. Common "
"areas of regulation include data retention policies and data ownership "
"policies."
msgstr "很多辖区对于云环境中的数据的存储及管理都有相关的法律上或者监管上的要求。这些规章的常见领域包括数据保管政策和数据所有权政策。"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml69(term)
msgid "Data retention"
msgstr "数据保管"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml71(para)
msgid ""
"Policies ensuring storage of persistent data and records management to meet "
"data archival requirements."
msgstr "确保持久化数据的保管和记录管理以符合数据档案化需求的政策。"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml77(term)
msgid "Data ownership"
msgstr "数据所有权"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml79(para)
msgid "Policies governing the possession and responsibility for data."
msgstr "管理数据的所有权和责任的政策。"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml84(term)
msgid "Data sovereignty"
msgstr "数据独立性"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml86(para)
msgid ""
"Policies governing the storage of data in foreign countries or otherwise "
"separate jurisdictions."
msgstr "管理位于外国或者其它辖区的数据存储问题的政策。"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml92(term)
msgid "Data compliance"
msgstr "数据合规性"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml94(para)
msgid ""
"Policies governing types of information that must reside in certain "
"locations due to regulatory issues and cannot reside in other locations for "
"the same reason."
msgstr "管理由于法律原因因而特定类型的信息必须存放在特定的地点或者由于相同的原因数据不能够存放在其它地点的政策。"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml105(para)
msgid ""
"You can incorporate the following technical requirements into the "
"architecture design:"
msgstr "以下是一些需要被合并到架构设计中的技术性需求："

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml109(term)
msgid "Storage proximity"
msgstr "数据亲近度"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml111(para)
msgid ""
"In order to provide high performance or large amounts of storage space, the "
"design may have to accommodate storage that is attached to each hypervisor "
"or served from a central storage device."
msgstr "设计必须考虑每个宿主机上的存储，或者由集中存储设备所提供的存储，以提供高性能或者大容量的存储空间。"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml121(para)
msgid ""
"To boost performance, the organization may want to make use of different "
"technologies to cache disk activity."
msgstr "可能需要使用不同的技术来缓存磁盘操作以提供性能。"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml129(para)
msgid ""
"Specific requirements regarding availability influence the technology used "
"to store and protect data. These requirements influence cost and the "
"implemented solution."
msgstr "关于可用性的特殊需求将影响用以存储及保护数据的技术。这些需求也将会影响成本以及要实施的方案。"

#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml138(para)
msgid "You must protect data both in transit and at rest."
msgstr "数据无论是在传输时或其他方式都将会被保护。"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: ./doc/arch-design/storage_focus/section_user_requirements_storage_focus.xml0(None)
msgid "translator-credits"
msgstr "apporc watson <appleorchard2000@gmail.com>, 2015\nHunt Xu <mhuntxu@gmail.com>, 2015\njohnwoo_lee <lijiangsheng1@gmail.com>, 2015\n颜海峰 <yanheven@gmail.com>, 2015"
