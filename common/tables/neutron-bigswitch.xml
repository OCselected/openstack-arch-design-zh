<?xml version="1.0" ?><para version="5.0" xml:lang="zh" xmlns="http://docbook.org/ns/docbook">
  <!-- Warning: Do not edit this file. It is automatically
     generated and your changes will be overwritten.
     The tool to do so lives in openstack-doc-tools repository. -->
  <table rules="all" xml:id="config_table_neutron_bigswitch">
    <caption>Description of BigSwitch configuration options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <th>Configuration option = Default value</th>
        <th>描述</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th colspan="2">[NOVA]</th>
      </tr>
      <tr>
        <td><option>node_override_vif_802.1qbg</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to 802.1qbg</td>
      </tr>
      <tr>
        <td><option>node_override_vif_802.1qbh</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to 802.1qbh</td>
      </tr>
      <tr>
        <td><option>node_override_vif_binding_failed</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to binding_failed</td>
      </tr>
      <tr>
        <td><option>node_override_vif_bridge</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to bridge</td>
      </tr>
      <tr>
        <td><option>node_override_vif_distributed</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to distributed</td>
      </tr>
      <tr>
        <td><option>node_override_vif_dvs</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to dvs</td>
      </tr>
      <tr>
        <td><option>node_override_vif_hostdev</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to hostdev</td>
      </tr>
      <tr>
        <td><option>node_override_vif_hw_veb</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to hw_veb</td>
      </tr>
      <tr>
        <td><option>node_override_vif_hyperv</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to hyperv</td>
      </tr>
      <tr>
        <td><option>node_override_vif_ivs</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to ivs</td>
      </tr>
      <tr>
        <td><option>node_override_vif_midonet</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to midonet</td>
      </tr>
      <tr>
        <td><option>node_override_vif_mlnx_direct</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to mlnx_direct</td>
      </tr>
      <tr>
        <td><option>node_override_vif_other</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to other</td>
      </tr>
      <tr>
        <td><option>node_override_vif_ovs</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to ovs</td>
      </tr>
      <tr>
        <td><option>node_override_vif_unbound</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to unbound</td>
      </tr>
      <tr>
        <td><option>node_override_vif_vrouter</option> = <replaceable/></td>
        <td>(ListOpt) Nova compute nodes to manually set VIF type to vrouter</td>
      </tr>
      <tr>
        <td><option>vif_type</option> = <replaceable>ovs</replaceable></td>
        <td>(StrOpt) Virtual interface type to configure on Nova compute nodes</td>
      </tr>
      <tr>
        <td><option>vif_types</option> = <replaceable>unbound, binding_failed, ovs, ivs, bridge, 802.1qbg, 802.1qbh, hyperv, midonet, mlnx_direct, hostdev, hw_veb, dvs, other, distributed, vrouter</replaceable></td>
        <td>(ListOpt) List of allowed vif_type values.</td>
      </tr>
      <tr>
        <th colspan="2">[RESTPROXY]</th>
      </tr>
      <tr>
        <td><option>add_meta_server_route</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Flag to decide if a route to the metadata server should be injected into the VM</td>
      </tr>
      <tr>
        <td><option>auto_sync_on_failure</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) If neutron fails to create a resource because the backend controller doesn't know of a dependency, the plugin automatically triggers a full data synchronization to the controller.</td>
      </tr>
      <tr>
        <td><option>cache_connections</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Re-use HTTP/HTTPS connections to the controller.</td>
      </tr>
      <tr>
        <td><option>consistency_interval</option> = <replaceable>60</replaceable></td>
        <td>(IntOpt) Time between verifications that the backend controller database is consistent with Neutron. (0 to disable)</td>
      </tr>
      <tr>
        <td><option>neutron_id</option> = <replaceable>neutron-shock</replaceable></td>
        <td>(StrOpt) User defined identifier for this Neutron deployment</td>
      </tr>
      <tr>
        <td><option>no_ssl_validation</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Disables SSL certificate validation for controllers</td>
      </tr>
      <tr>
        <td><option>server_auth</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) The username and password for authenticating against  the Big Switch or Floodlight controller.</td>
      </tr>
      <tr>
        <td><option>server_ssl</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) If True, Use SSL when connecting to the Big Switch or Floodlight controller.</td>
      </tr>
      <tr>
        <td><option>server_timeout</option> = <replaceable>10</replaceable></td>
        <td>(IntOpt) Maximum number of seconds to wait for proxy request to connect and complete.</td>
      </tr>
      <tr>
        <td><option>servers</option> = <replaceable>localhost:8800</replaceable></td>
        <td>(ListOpt) A comma separated list of Big Switch or Floodlight servers and port numbers. The plugin proxies the requests to the Big Switch/Floodlight server, which performs the networking configuration. Only oneserver is needed per deployment, but you may wish todeploy multiple servers to support failover.</td>
      </tr>
      <tr>
        <td><option>ssl_cert_directory</option> = <replaceable>/etc/neutron/plugins/bigswitch/ssl</replaceable></td>
        <td>(StrOpt) Directory containing ca_certs and host_certs certificate directories.</td>
      </tr>
      <tr>
        <td><option>ssl_sticky</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Trust and store the first certificate received for each controller address and use it to validate future connections to that address.</td>
      </tr>
      <tr>
        <td><option>sync_data</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Sync data on connect</td>
      </tr>
      <tr>
        <td><option>thread_pool_size</option> = <replaceable>4</replaceable></td>
        <td>(IntOpt) Maximum number of threads to spawn to handle large volumes of port creations.</td>
      </tr>
      <tr>
        <th colspan="2">[RESTPROXYAGENT]</th>
      </tr>
      <tr>
        <td><option>integration_bridge</option> = <replaceable>br-int</replaceable></td>
        <td>(StrOpt) Name of integration bridge on compute nodes used for security group insertion.</td>
      </tr>
      <tr>
        <td><option>polling_interval</option> = <replaceable>5</replaceable></td>
        <td>(IntOpt) Seconds between agent checks for port changes</td>
      </tr>
      <tr>
        <td><option>virtual_switch_type</option> = <replaceable>ovs</replaceable></td>
        <td>(StrOpt) Virtual switch type.</td>
      </tr>
      <tr>
        <th colspan="2">[ROUTER]</th>
      </tr>
      <tr>
        <td><option>max_router_rules</option> = <replaceable>200</replaceable></td>
        <td>(IntOpt) Maximum number of router rules</td>
      </tr>
      <tr>
        <td><option>tenant_default_router_rule</option> = <replaceable>['*:any:any:permit']</replaceable></td>
        <td>(MultiStrOpt) The default router rules installed in new tenant routers. Repeat the config option for each rule. Format is &lt;tenant&gt;:&lt;source&gt;:&lt;destination&gt;:&lt;action&gt; Use an * to specify default for all tenants.</td>
      </tr>
    </tbody>
  </table>
</para>