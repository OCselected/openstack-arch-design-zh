<?xml version="1.0" ?><section version="5.0" xml:id="ceilometer-conf-changes-kilo" xml:lang="zh" xmlns="http://docbook.org/ns/docbook">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated and deprecated options in Kilo for Telemetry</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] api_workers = 1</td>
      <td>(IntOpt) Number of workers for Ceilometer API server.</td>
    </tr>
    <tr>
      <td>[DEFAULT] event_pipeline_cfg_file = event_pipeline.yaml</td>
      <td>(StrOpt) Configuration file for event pipeline definition.</td>
    </tr>
    <tr>
      <td>[DEFAULT] magnetodb_control_exchange = magnetodb</td>
      <td>(StrOpt) Exchange name for Magnetodb notifications.</td>
    </tr>
    <tr>
      <td>[DEFAULT] policy_dirs = ['policy.d']</td>
      <td>(MultiStrOpt) Directories where policy configuration files are stored. They can be relative to any directory in the search path defined by the config_dir option, or absolute paths. The file defined by policy_file must exist for these directories to be searched.</td>
    </tr>
    <tr>
      <td>[DEFAULT] polling_namespaces = ['compute', 'central']</td>
      <td>(MultiChoicesOpt) Polling namespace(s) to be used while resource polling</td>
    </tr>
    <tr>
      <td>[DEFAULT] pollster_list = []</td>
      <td>(MultiChoicesOpt) List of pollsters (or wildcard templates) to be used while polling</td>
    </tr>
    <tr>
      <td>[DEFAULT] reserved_metadata_keys = </td>
      <td>(ListOpt) List of metadata keys reserved for metering use. And these keys are additional to the ones included in the namespace.</td>
    </tr>
    <tr>
      <td>[DEFAULT] shuffle_time_before_polling_task = 0</td>
      <td>(IntOpt) To reduce large requests at same time to Nova or other components from different compute agents, shuffle start time of polling task.</td>
    </tr>
    <tr>
      <td>[DEFAULT] swift_control_exchange = swift</td>
      <td>(StrOpt) Exchange name for Swift notifications.</td>
    </tr>
    <tr>
      <td>[DEFAULT] zaqar_control_exchange = zaqar</td>
      <td>(StrOpt) Exchange name for Messaging service notifications.</td>
    </tr>
    <tr>
      <td>[collector] requeue_event_on_dispatcher_error = False</td>
      <td>(BoolOpt) Requeue the event on the collector event queue when the collector fails to dispatch it.</td>
    </tr>
    <tr>
      <td>[coordination] check_watchers = 10.0</td>
      <td>(FloatOpt) Number of seconds between checks to see if group membership has changed</td>
    </tr>
    <tr>
      <td>[database] db2nosql_resource_id_maxlen = 512</td>
      <td>(IntOpt) The max length of resources id in DB2 nosql, the value should be larger than len(hostname) * 2 as compute node's resource id is &lt;hostname&gt;_&lt;nodename&gt;.</td>
    </tr>
    <tr>
      <td>[database] event_connection = None</td>
      <td>(StrOpt) The connection string used to connect to the event database. (if unset, connection is used)</td>
    </tr>
    <tr>
      <td>[database] event_time_to_live = -1</td>
      <td>(IntOpt) Number of seconds that events are kept in the database for (&lt;= 0 means forever).</td>
    </tr>
    <tr>
      <td>[database] metering_time_to_live = -1</td>
      <td>(IntOpt) Number of seconds that samples are kept in the database for (&lt;= 0 means forever).</td>
    </tr>
    <tr>
      <td>[database] mongodb_replica_set = </td>
      <td>(StrOpt) The name of the replica set which is used to connect to MongoDB database. If it is set, MongoReplicaSetClient will be used instead of MongoClient.</td>
    </tr>
    <tr>
      <td>[dispatcher_http] cadf_only = False</td>
      <td>(BoolOpt) The flag which indicates if only cadf message should be posted. If false, all meters will be posted.</td>
    </tr>
    <tr>
      <td>[dispatcher_http] target = </td>
      <td>(StrOpt) The target where the http request will be sent to. If this is not set, no data will be posted. For example: target = http://hostname:1234/path</td>
    </tr>
    <tr>
      <td>[dispatcher_http] timeout = 5</td>
      <td>(IntOpt) The max time in second to wait for a request to timeout.</td>
    </tr>
    <tr>
      <td>[ipmi] polling_retry = 3</td>
      <td>(IntOpt) Tolerance of IPMI/NM polling failures before disable this pollster. Negative indicates retrying forever.</td>
    </tr>
    <tr>
      <td>[notification] disable_non_metric_meters = False</td>
      <td>(BoolOpt) WARNING: Ceilometer historically offered the ability to store events as meters. This usage is NOT advised as it can flood the metering database and cause performance degradation. This option disables the collection of non-metric meters and will be the default behavior in Liberty.</td>
    </tr>
    <tr>
      <td>[notification] workload_partitioning = False</td>
      <td>(BoolOpt) Enable workload partitioning, allowing multiple notification agents to be run simultaneously.</td>
    </tr>
    <tr>
      <td>[oslo_concurrency] disable_process_locking = False</td>
      <td>(BoolOpt) Enables or disables inter-process locks.</td>
    </tr>
    <tr>
      <td>[oslo_concurrency] lock_path = None</td>
      <td>(StrOpt) Directory to use for lock files.  For security, the specified directory should only be writable by the user running the processes that need locking. Defaults to environment variable OSLO_LOCK_PATH. If external locks are used, a lock path must be set.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] allow_insecure_clients = False</td>
      <td>(BoolOpt) Accept clients using either SSL or plain TCP</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] broadcast_prefix = broadcast</td>
      <td>(StrOpt) address prefix used when broadcasting to all servers</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] container_name = None</td>
      <td>(StrOpt) Name for the AMQP container</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] group_request_prefix = unicast</td>
      <td>(StrOpt) address prefix when sending to any server in group</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] idle_timeout = 0</td>
      <td>(IntOpt) Timeout for inactive connections (in seconds)</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] server_request_prefix = exclusive</td>
      <td>(StrOpt) address prefix used when sending to a specific server</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_ca_file = </td>
      <td>(StrOpt) CA certificate PEM file for verifing server certificate</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_cert_file = </td>
      <td>(StrOpt) Identifying certificate PEM file to present to clients</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_key_file = </td>
      <td>(StrOpt) Private key PEM file used to sign cert_file certificate</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_key_password = None</td>
      <td>(StrOpt) Password for decrypting ssl_key_file (if encrypted)</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] trace = False</td>
      <td>(BoolOpt) Debug: dump AMQP frames to stdout</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] amqp_auto_delete = False</td>
      <td>(BoolOpt) Auto-delete queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] amqp_durable_queues = False</td>
      <td>(BoolOpt) Use durable queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_heartbeat = 60</td>
      <td>(IntOpt) Seconds between connection keepalive heartbeats.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_hostname = localhost</td>
      <td>(StrOpt) Qpid broker hostname.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_hosts = $qpid_hostname:$qpid_port</td>
      <td>(ListOpt) Qpid HA cluster host:port pairs.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_password = </td>
      <td>(StrOpt) Password for Qpid connection.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_port = 5672</td>
      <td>(IntOpt) Qpid broker port.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_protocol = tcp</td>
      <td>(StrOpt) Transport to use, either 'tcp' or 'ssl'.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_receiver_capacity = 1</td>
      <td>(IntOpt) The number of prefetched messages held by receiver.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_sasl_mechanisms = </td>
      <td>(StrOpt) Space separated list of SASL mechanisms to use for auth.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_tcp_nodelay = True</td>
      <td>(BoolOpt) Whether to disable the Nagle algorithm.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_topology_version = 1</td>
      <td>(IntOpt) The qpid topology version to use.  Version 1 is what was originally used by impl_qpid.  Version 2 includes some backwards-incompatible changes that allow broker federation to work.  Users should update to version 2 when they are able to take everything down, as it requires a clean break.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_username = </td>
      <td>(StrOpt) Username for Qpid connection.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] rpc_conn_pool_size = 30</td>
      <td>(IntOpt) Size of RPC connection pool.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] amqp_auto_delete = False</td>
      <td>(BoolOpt) Auto-delete queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] amqp_durable_queues = False</td>
      <td>(BoolOpt) Use durable queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] fake_rabbit = False</td>
      <td>(BoolOpt) Deprecated, use rpc_backend=kombu+memory or rpc_backend=fake</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_reconnect_delay = 1.0</td>
      <td>(FloatOpt) How long to wait before reconnecting in response to an AMQP consumer cancel notification.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_ca_certs = </td>
      <td>(StrOpt) SSL certification authority file (valid only if SSL enabled).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_certfile = </td>
      <td>(StrOpt) SSL cert file (valid only if SSL enabled).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_keyfile = </td>
      <td>(StrOpt) SSL key file (valid only if SSL enabled).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_version = </td>
      <td>(StrOpt) SSL version to use (valid only if SSL enabled). Valid values are TLSv1 and SSLv23. SSLv2, SSLv3, TLSv1_1, and TLSv1_2 may be available on some distributions.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_ha_queues = False</td>
      <td>(BoolOpt) Use HA queues in RabbitMQ (x-ha-policy: all). If you change this option, you must wipe the RabbitMQ database.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_host = localhost</td>
      <td>(StrOpt) The RabbitMQ broker address where a single node is used.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_hosts = $rabbit_host:$rabbit_port</td>
      <td>(ListOpt) RabbitMQ HA cluster host:port pairs.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_login_method = AMQPLAIN</td>
      <td>(StrOpt) The RabbitMQ login method.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_max_retries = 0</td>
      <td>(IntOpt) Maximum number of RabbitMQ connection retries. Default is 0 (infinite retry count).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_password = guest</td>
      <td>(StrOpt) The RabbitMQ password.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_port = 5672</td>
      <td>(IntOpt) The RabbitMQ broker port where a single node is used.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_retry_backoff = 2</td>
      <td>(IntOpt) How long to backoff for between retries when connecting to RabbitMQ.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_retry_interval = 1</td>
      <td>(IntOpt) How frequently to retry connecting with RabbitMQ.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_use_ssl = False</td>
      <td>(BoolOpt) Connect over SSL for RabbitMQ.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_userid = guest</td>
      <td>(StrOpt) The RabbitMQ userid.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_virtual_host = /</td>
      <td>(StrOpt) The RabbitMQ virtual host.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rpc_conn_pool_size = 30</td>
      <td>(IntOpt) Size of RPC connection pool.</td>
    </tr>
    <tr>
      <td>[polling] partitioning_group_prefix = None</td>
      <td>(StrOpt) Work-load partitioning group prefix. Use only if you want to run multiple polling agents with different config files. For each sub-group of the agent pool with the same partitioning_group_prefix a disjoint subset of pollsters should be loaded.</td>
    </tr>
    <tr>
      <td>[publisher] telemetry_secret = change this or be hacked</td>
      <td>(StrOpt) Secret value for signing metering messages.</td>
    </tr>
    <tr>
      <td>[publisher_notifier] event_topic = event</td>
      <td>(StrOpt) The topic that ceilometer uses for event notifications.</td>
    </tr>
    <tr>
      <td>[publisher_notifier] telemetry_driver = messagingv2</td>
      <td>(StrOpt) The driver that ceilometer uses for metering notifications.</td>
    </tr>
    <tr>
      <td>[vmware] host_port = 443</td>
      <td>(IntOpt) Port of the VMware Vsphere host.</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>选项</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] rpc_zmq_matchmaker</td>
      <td>oslo.messaging._drivers.matchmaker.MatchMakerLocalhost</td>
      <td>oslo_messaging._drivers.matchmaker.MatchMakerLocalhost</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>[database] time_to_live</td>
      <td>[database] metering_time_to_live</td>
    </tr>
    <tr>
      <td>[publisher] metering_secret</td>
      <td>[publisher] telemetry_secret</td>
    </tr>
  </table>
</section>