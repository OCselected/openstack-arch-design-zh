<?xml version="1.0" ?><section version="5.0" xml:id="heat-conf-changes-kilo" xml:lang="zh" xmlns="http://docbook.org/ns/docbook">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated and deprecated options in Kilo for Orchestration</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] convergence_engine = False</td>
      <td>(BoolOpt) Enables engine with convergence architecture. All stacks with this option will be created using convergence engine .</td>
    </tr>
    <tr>
      <td>[DEFAULT] error_wait_time = 240</td>
      <td>(IntOpt) Error wait time in seconds for stack action (ie. create or update).</td>
    </tr>
    <tr>
      <td>[DEFAULT] policy_dirs = ['policy.d']</td>
      <td>(MultiStrOpt) Directories where policy configuration files are stored. They can be relative to any directory in the search path defined by the config_dir option, or absolute paths. The file defined by policy_file must exist for these directories to be searched.</td>
    </tr>
    <tr>
      <td>[clients_sahara] ca_file = None</td>
      <td>(StrOpt) Optional CA cert file to use in SSL connections.</td>
    </tr>
    <tr>
      <td>[clients_sahara] cert_file = None</td>
      <td>(StrOpt) Optional PEM-formatted certificate chain file.</td>
    </tr>
    <tr>
      <td>[clients_sahara] endpoint_type = None</td>
      <td>(StrOpt) Type of endpoint in Identity service catalog to use for communication with the OpenStack service.</td>
    </tr>
    <tr>
      <td>[clients_sahara] insecure = None</td>
      <td>(BoolOpt) If set, then the server's certificate will not be verified.</td>
    </tr>
    <tr>
      <td>[clients_sahara] key_file = None</td>
      <td>(StrOpt) Optional PEM-formatted file that contains the private key.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] allow_insecure_clients = False</td>
      <td>(BoolOpt) Accept clients using either SSL or plain TCP</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] broadcast_prefix = broadcast</td>
      <td>(StrOpt) address prefix used when broadcasting to all servers</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] container_name = None</td>
      <td>(StrOpt) Name for the AMQP container</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] group_request_prefix = unicast</td>
      <td>(StrOpt) address prefix when sending to any server in group</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] idle_timeout = 0</td>
      <td>(IntOpt) Timeout for inactive connections (in seconds)</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] server_request_prefix = exclusive</td>
      <td>(StrOpt) address prefix used when sending to a specific server</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_ca_file = </td>
      <td>(StrOpt) CA certificate PEM file for verifing server certificate</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_cert_file = </td>
      <td>(StrOpt) Identifying certificate PEM file to present to clients</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_key_file = </td>
      <td>(StrOpt) Private key PEM file used to sign cert_file certificate</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_key_password = None</td>
      <td>(StrOpt) Password for decrypting ssl_key_file (if encrypted)</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] trace = False</td>
      <td>(BoolOpt) Debug: dump AMQP frames to stdout</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] amqp_auto_delete = False</td>
      <td>(BoolOpt) Auto-delete queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] amqp_durable_queues = False</td>
      <td>(BoolOpt) Use durable queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_heartbeat = 60</td>
      <td>(IntOpt) Seconds between connection keepalive heartbeats.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_hostname = localhost</td>
      <td>(StrOpt) Qpid broker hostname.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_hosts = $qpid_hostname:$qpid_port</td>
      <td>(ListOpt) Qpid HA cluster host:port pairs.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_password = </td>
      <td>(StrOpt) Password for Qpid connection.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_port = 5672</td>
      <td>(IntOpt) Qpid broker port.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_protocol = tcp</td>
      <td>(StrOpt) Transport to use, either 'tcp' or 'ssl'.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_receiver_capacity = 1</td>
      <td>(IntOpt) The number of prefetched messages held by receiver.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_sasl_mechanisms = </td>
      <td>(StrOpt) Space separated list of SASL mechanisms to use for auth.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_tcp_nodelay = True</td>
      <td>(BoolOpt) Whether to disable the Nagle algorithm.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_topology_version = 1</td>
      <td>(IntOpt) The qpid topology version to use.  Version 1 is what was originally used by impl_qpid.  Version 2 includes some backwards-incompatible changes that allow broker federation to work.  Users should update to version 2 when they are able to take everything down, as it requires a clean break.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_username = </td>
      <td>(StrOpt) Username for Qpid connection.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] rpc_conn_pool_size = 30</td>
      <td>(IntOpt) Size of RPC connection pool.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] amqp_auto_delete = False</td>
      <td>(BoolOpt) Auto-delete queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] amqp_durable_queues = False</td>
      <td>(BoolOpt) Use durable queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] fake_rabbit = False</td>
      <td>(BoolOpt) Deprecated, use rpc_backend=kombu+memory or rpc_backend=fake</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_reconnect_delay = 1.0</td>
      <td>(FloatOpt) How long to wait before reconnecting in response to an AMQP consumer cancel notification.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_ca_certs = </td>
      <td>(StrOpt) SSL certification authority file (valid only if SSL enabled).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_certfile = </td>
      <td>(StrOpt) SSL cert file (valid only if SSL enabled).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_keyfile = </td>
      <td>(StrOpt) SSL key file (valid only if SSL enabled).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_version = </td>
      <td>(StrOpt) SSL version to use (valid only if SSL enabled). Valid values are TLSv1 and SSLv23. SSLv2, SSLv3, TLSv1_1, and TLSv1_2 may be available on some distributions.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_ha_queues = False</td>
      <td>(BoolOpt) Use HA queues in RabbitMQ (x-ha-policy: all). If you change this option, you must wipe the RabbitMQ database.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_host = localhost</td>
      <td>(StrOpt) The RabbitMQ broker address where a single node is used.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_hosts = $rabbit_host:$rabbit_port</td>
      <td>(ListOpt) RabbitMQ HA cluster host:port pairs.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_login_method = AMQPLAIN</td>
      <td>(StrOpt) The RabbitMQ login method.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_max_retries = 0</td>
      <td>(IntOpt) Maximum number of RabbitMQ connection retries. Default is 0 (infinite retry count).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_password = guest</td>
      <td>(StrOpt) The RabbitMQ password.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_port = 5672</td>
      <td>(IntOpt) The RabbitMQ broker port where a single node is used.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_retry_backoff = 2</td>
      <td>(IntOpt) How long to backoff for between retries when connecting to RabbitMQ.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_retry_interval = 1</td>
      <td>(IntOpt) How frequently to retry connecting with RabbitMQ.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_use_ssl = False</td>
      <td>(BoolOpt) Connect over SSL for RabbitMQ.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_userid = guest</td>
      <td>(StrOpt) The RabbitMQ userid.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_virtual_host = /</td>
      <td>(StrOpt) The RabbitMQ virtual host.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rpc_conn_pool_size = 30</td>
      <td>(IntOpt) Size of RPC connection pool.</td>
    </tr>
    <tr>
      <td>[profiler] profiler_enabled = False</td>
      <td>(BoolOpt) If False fully disable profiling feature.</td>
    </tr>
    <tr>
      <td>[profiler] trace_sqlalchemy = False</td>
      <td>(BoolOpt) If False do not trace SQL requests.</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>选项</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] max_nested_stack_depth</td>
      <td>3</td>
      <td>5</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_zmq_matchmaker</td>
      <td>oslo.messaging._drivers.matchmaker.MatchMakerLocalhost</td>
      <td>oslo_messaging._drivers.matchmaker.MatchMakerLocalhost</td>
    </tr>
    <tr>
      <td>[DEFAULT] trusts_delegated_roles</td>
      <td>heat_stack_owner</td>
      <td/>
    </tr>
  </table>
</section>