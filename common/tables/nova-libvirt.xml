<?xml version="1.0" ?><para version="5.0" xml:lang="zh" xmlns="http://docbook.org/ns/docbook">
  <!-- Warning: Do not edit this file. It is automatically
     generated and your changes will be overwritten.
     The tool to do so lives in openstack-doc-tools repository. -->
  <table rules="all" xml:id="config_table_nova_libvirt">
    <caption>Description of Libvirt configuration options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <th>Configuration option = Default value</th>
        <th>描述</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th colspan="2">[DEFAULT]</th>
      </tr>
      <tr>
        <td><option>remove_unused_base_images</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Should unused base images be removed?</td>
      </tr>
      <tr>
        <td><option>remove_unused_original_minimum_age_seconds</option> = <replaceable>86400</replaceable></td>
        <td>(IntOpt) Unused unresized base images younger than this will not be removed</td>
      </tr>
      <tr>
        <th colspan="2">[libvirt]</th>
      </tr>
      <tr>
        <td><option>block_migration_flag</option> = <replaceable>VIR_MIGRATE_UNDEFINE_SOURCE, VIR_MIGRATE_PEER2PEER, VIR_MIGRATE_LIVE, VIR_MIGRATE_TUNNELLED, VIR_MIGRATE_NON_SHARED_INC</replaceable></td>
        <td>(StrOpt) Migration flags to be set for block migration</td>
      </tr>
      <tr>
        <td><option>checksum_base_images</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Write a checksum for files in _base to disk</td>
      </tr>
      <tr>
        <td><option>checksum_interval_seconds</option> = <replaceable>3600</replaceable></td>
        <td>(IntOpt) How frequently to checksum base images</td>
      </tr>
      <tr>
        <td><option>connection_uri</option> = <replaceable/></td>
        <td>(StrOpt) Override the default libvirt URI (which is dependent on virt_type)</td>
      </tr>
      <tr>
        <td><option>cpu_mode</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Set to &quot;host-model&quot; to clone the host CPU feature flags; to &quot;host-passthrough&quot; to use the host CPU model exactly; to &quot;custom&quot; to use a named CPU model; to &quot;none&quot; to not set any CPU model. If virt_type=&quot;kvm|qemu&quot;, it will default to &quot;host-model&quot;, otherwise it will default to &quot;none&quot;</td>
      </tr>
      <tr>
        <td><option>cpu_model</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Set to a named libvirt CPU model (see names listed in /usr/share/libvirt/cpu_map.xml). Only has effect if cpu_mode=&quot;custom&quot; and virt_type=&quot;kvm|qemu&quot;</td>
      </tr>
      <tr>
        <td><option>disk_cachemodes</option> = <replaceable/></td>
        <td>(ListOpt) Specific cachemodes to use for different disk types e.g: file=directsync,block=none</td>
      </tr>
      <tr>
        <td><option>disk_prefix</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Override the default disk prefix for the devices attached to a server, which is dependent on virt_type. (valid options are: sd, xvd, uvd, vd)</td>
      </tr>
      <tr>
        <td><option>gid_maps</option> = <replaceable/></td>
        <td>(ListOpt) List of guid targets and ranges.Syntax is guest-gid:host-gid:countMaximum of 5 allowed.</td>
      </tr>
      <tr>
        <td><option>hw_disk_discard</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Discard option for nova managed disks (valid options are: ignore, unmap). Need Libvirt(1.0.6) Qemu1.5 (raw format) Qemu1.6(qcow2 format)</td>
      </tr>
      <tr>
        <td><option>hw_machine_type</option> = <replaceable>无</replaceable></td>
        <td>(ListOpt) For qemu or KVM guests, set this option to specify a default machine type per host architecture. You can find a list of supported machine types in your environment by checking the output of the &quot;virsh capabilities&quot;command. The format of the value for this config option is host-arch=machine-type. For example: x86_64=machinetype1,armv7l=machinetype2</td>
      </tr>
      <tr>
        <td><option>image_info_filename_pattern</option> = <replaceable>$instances_path/$image_cache_subdirectory_name/%(image)s.info</replaceable></td>
        <td>(StrOpt) Allows image information files to be stored in non-standard locations</td>
      </tr>
      <tr>
        <td><option>images_rbd_ceph_conf</option> = <replaceable/></td>
        <td>(StrOpt) Path to the ceph configuration file to use</td>
      </tr>
      <tr>
        <td><option>images_rbd_pool</option> = <replaceable>rbd</replaceable></td>
        <td>(StrOpt) The RADOS pool in which rbd volumes are stored</td>
      </tr>
      <tr>
        <td><option>images_type</option> = <replaceable>默认值</replaceable></td>
        <td>(StrOpt) VM Images format. Acceptable values are: raw, qcow2, lvm, rbd, default. If default is specified, then use_cow_images flag is used instead of this one.</td>
      </tr>
      <tr>
        <td><option>images_volume_group</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) LVM Volume Group that is used for VM images, when you specify images_type=lvm.</td>
      </tr>
      <tr>
        <td><option>inject_key</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Inject the ssh public key at boot time</td>
      </tr>
      <tr>
        <td><option>inject_partition</option> = <replaceable>-2</replaceable></td>
        <td>(IntOpt) The partition to inject to : -2 =&gt; disable, -1 =&gt; inspect (libguestfs only), 0 =&gt; not partitioned, &gt;0 =&gt; partition number</td>
      </tr>
      <tr>
        <td><option>inject_password</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Inject the admin password at boot time, without an agent.</td>
      </tr>
      <tr>
        <td><option>iscsi_iface</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) The iSCSI transport iface to use to connect to target in case offload support is desired. Supported transports are be2iscsi, bnx2i, cxgb3i, cxgb4i, qla4xxx and ocs. Default format is transport_name.hwaddress and can be generated manually or via iscsiadm -m iface</td>
      </tr>
      <tr>
        <td><option>iscsi_use_multipath</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Use multipath connection of the iSCSI volume</td>
      </tr>
      <tr>
        <td><option>iser_use_multipath</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Use multipath connection of the iSER volume</td>
      </tr>
      <tr>
        <td><option>mem_stats_period_seconds</option> = <replaceable>10</replaceable></td>
        <td>(IntOpt) A number of seconds to memory usage statistics period. Zero or negative value mean to disable memory usage statistics.</td>
      </tr>
      <tr>
        <td><option>remove_unused_kernels</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Should unused kernel images be removed? This is only safe to enable if all compute nodes have been updated to support this option. This will be enabled by default in future.</td>
      </tr>
      <tr>
        <td><option>remove_unused_resized_minimum_age_seconds</option> = <replaceable>3600</replaceable></td>
        <td>(IntOpt) Unused resized base images younger than this will not be removed</td>
      </tr>
      <tr>
        <td><option>rescue_image_id</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Rescue ami image. This will not be used if an image id is provided by the user.</td>
      </tr>
      <tr>
        <td><option>rescue_kernel_id</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Rescue aki image</td>
      </tr>
      <tr>
        <td><option>rescue_ramdisk_id</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Rescue ari image</td>
      </tr>
      <tr>
        <td><option>rng_dev_path</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) A path to a device that will be used as source of entropy on the host. Permitted options are: /dev/random or /dev/hwrng</td>
      </tr>
      <tr>
        <td><option>snapshot_compression</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Compress snapshot images when possible. This currently applies exclusively to qcow2 images</td>
      </tr>
      <tr>
        <td><option>snapshot_image_format</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Snapshot image format (valid options are : raw, qcow2, vmdk, vdi). Defaults to same as source image</td>
      </tr>
      <tr>
        <td><option>snapshots_directory</option> = <replaceable>$instances_path/snapshots</replaceable></td>
        <td>(StrOpt) Location where libvirt driver will store snapshots before uploading them to image service</td>
      </tr>
      <tr>
        <td><option>sparse_logical_volumes</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Create sparse logical volumes (with virtualsize) if this flag is set to True.</td>
      </tr>
      <tr>
        <td><option>sysinfo_serial</option> = <replaceable>auto</replaceable></td>
        <td>(StrOpt) The data source used to the populate the host &quot;serial&quot; UUID exposed to guest in the virtual BIOS. Permitted options are &quot;hardware&quot;, &quot;os&quot;, &quot;none&quot; or &quot;auto&quot; (default).</td>
      </tr>
      <tr>
        <td><option>uid_maps</option> = <replaceable/></td>
        <td>(ListOpt) List of uid targets and ranges.Syntax is guest-uid:host-uid:countMaximum of 5 allowed.</td>
      </tr>
      <tr>
        <td><option>use_usb_tablet</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Sync virtual and real mouse cursors in Windows VMs</td>
      </tr>
      <tr>
        <td><option>use_virtio_for_bridges</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Use virtio for bridge interfaces with KVM/QEMU</td>
      </tr>
      <tr>
        <td><option>virt_type</option> = <replaceable>kvm</replaceable></td>
        <td>(StrOpt) Libvirt domain type (valid options are: kvm, lxc, qemu, uml, xen and parallels)</td>
      </tr>
      <tr>
        <td><option>volume_clear</option> = <replaceable>zero</replaceable></td>
        <td>(StrOpt) Method used to wipe old volumes (valid options are: none, zero, shred)</td>
      </tr>
      <tr>
        <td><option>volume_clear_size</option> = <replaceable>0</replaceable></td>
        <td>(IntOpt) Size in MiB to wipe at start of old volumes. 0 =&gt; all</td>
      </tr>
      <tr>
        <td><option>volume_drivers</option> = <replaceable>iscsi=nova.virt.libvirt.volume.LibvirtISCSIVolumeDriver, iser=nova.virt.libvirt.volume.LibvirtISERVolumeDriver, local=nova.virt.libvirt.volume.LibvirtVolumeDriver, fake=nova.virt.libvirt.volume.LibvirtFakeVolumeDriver, rbd=nova.virt.libvirt.volume.LibvirtNetVolumeDriver, sheepdog=nova.virt.libvirt.volume.LibvirtNetVolumeDriver, nfs=nova.virt.libvirt.volume.LibvirtNFSVolumeDriver, smbfs=nova.virt.libvirt.volume.LibvirtSMBFSVolumeDriver, aoe=nova.virt.libvirt.volume.LibvirtAOEVolumeDriver, glusterfs=nova.virt.libvirt.volume.LibvirtGlusterfsVolumeDriver, fibre_channel=nova.virt.libvirt.volume.LibvirtFibreChannelVolumeDriver, scality=nova.virt.libvirt.volume.LibvirtScalityVolumeDriver, gpfs=nova.virt.libvirt.volume.LibvirtGPFSVolumeDriver, quobyte=nova.virt.libvirt.volume.LibvirtQuobyteVolumeDriver</replaceable></td>
        <td>(ListOpt) DEPRECATED. Libvirt handlers for remote volumes. This option is deprecated and will be removed in the Kilo release.</td>
      </tr>
      <tr>
        <td><option>wait_soft_reboot_seconds</option> = <replaceable>120</replaceable></td>
        <td>(IntOpt) Number of seconds to wait for instance to shut down after soft reboot request is made. We fall back to hard reboot if instance does not shutdown within this window.</td>
      </tr>
    </tbody>
  </table>
</para>