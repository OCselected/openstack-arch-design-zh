<?xml version="1.0" ?><section version="5.0" xml:id="nova-conf-changes-kilo" xml:lang="zh" xmlns="http://docbook.org/ns/docbook">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated and deprecated options in Kilo for OpenStack Compute</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] ebtables_exec_attempts = 3</td>
      <td>(IntOpt) Number of times to retry ebtables commands on failure.</td>
    </tr>
    <tr>
      <td>[DEFAULT] ebtables_retry_interval = 1.0</td>
      <td>(FloatOpt) Number of seconds to wait between ebtables retries.</td>
    </tr>
    <tr>
      <td>[DEFAULT] io_ops_weight_multiplier = -1.0</td>
      <td>(FloatOpt) Multiplier used for weighing host io ops. Negative numbers mean a preference to choose light workload compute hosts.</td>
    </tr>
    <tr>
      <td>[DEFAULT] keystone_ec2_insecure = False</td>
      <td>(BoolOpt) Disable SSL certificate verification.</td>
    </tr>
    <tr>
      <td>[DEFAULT] max_concurrent_builds = 10</td>
      <td>(IntOpt) Maximum number of instance builds to run concurrently</td>
    </tr>
    <tr>
      <td>[DEFAULT] metadata_cache_expiration = 15</td>
      <td>(IntOpt) Time in seconds to cache metadata; 0 to disable metadata caching entirely (not recommended). Increasingthis should improve response times of the metadata API when under heavy load. Higher values may increase memoryusage and result in longer times for host metadata changes to take effect.</td>
    </tr>
    <tr>
      <td>[DEFAULT] my_block_storage_ip = $my_ip</td>
      <td>(StrOpt) Block storage IP address of this host</td>
    </tr>
    <tr>
      <td>[DEFAULT] novncproxy_host = 0.0.0.0</td>
      <td>(StrOpt) Host on which to listen for incoming requests</td>
    </tr>
    <tr>
      <td>[DEFAULT] novncproxy_port = 6080</td>
      <td>(IntOpt) Port on which to listen for incoming requests</td>
    </tr>
    <tr>
      <td>[DEFAULT] policy_dirs = ['policy.d']</td>
      <td>(MultiStrOpt) Directories where policy configuration files are stored. They can be relative to any directory in the search path defined by the config_dir option, or absolute paths. The file defined by policy_file must exist for these directories to be searched.</td>
    </tr>
    <tr>
      <td>[DEFAULT] quota_networks = 3</td>
      <td>(IntOpt) Number of private networks allowed per project</td>
    </tr>
    <tr>
      <td>[barbican] cafile = None</td>
      <td>(StrOpt) PEM encoded Certificate Authority to use when verifying HTTPs connections.</td>
    </tr>
    <tr>
      <td>[barbican] catalog_info = key-manager:barbican:public</td>
      <td>(StrOpt) Info to match when looking for barbican in the service catalog. Format is: separated values of the form: &lt;service_type&gt;:&lt;service_name&gt;:&lt;endpoint_type&gt;</td>
    </tr>
    <tr>
      <td>[barbican] certfile = None</td>
      <td>(StrOpt) PEM encoded client certificate cert file</td>
    </tr>
    <tr>
      <td>[barbican] endpoint_template = None</td>
      <td>(StrOpt) Override service catalog lookup with template for barbican endpoint e.g. http://localhost:9311/v1/%(project_id)s</td>
    </tr>
    <tr>
      <td>[barbican] insecure = False</td>
      <td>(BoolOpt) Verify HTTPS connections.</td>
    </tr>
    <tr>
      <td>[barbican] keyfile = None</td>
      <td>(StrOpt) PEM encoded client certificate key file</td>
    </tr>
    <tr>
      <td>[barbican] os_region_name = None</td>
      <td>(StrOpt) Region name of this node</td>
    </tr>
    <tr>
      <td>[barbican] timeout = None</td>
      <td>(IntOpt) Timeout value for http requests</td>
    </tr>
    <tr>
      <td>[cinder] cafile = None</td>
      <td>(StrOpt) PEM encoded Certificate Authority to use when verifying HTTPs connections.</td>
    </tr>
    <tr>
      <td>[cinder] certfile = None</td>
      <td>(StrOpt) PEM encoded client certificate cert file</td>
    </tr>
    <tr>
      <td>[cinder] insecure = False</td>
      <td>(BoolOpt) Verify HTTPS connections.</td>
    </tr>
    <tr>
      <td>[cinder] keyfile = None</td>
      <td>(StrOpt) PEM encoded client certificate key file</td>
    </tr>
    <tr>
      <td>[cinder] timeout = None</td>
      <td>(IntOpt) Timeout value for http requests</td>
    </tr>
    <tr>
      <td>[guestfs] debug = False</td>
      <td>(BoolOpt) Enable guestfs debug</td>
    </tr>
    <tr>
      <td>[libvirt] iscsi_iface = None</td>
      <td>(StrOpt) The iSCSI transport iface to use to connect to target in case offload support is desired. Supported transports are be2iscsi, bnx2i, cxgb3i, cxgb4i, qla4xxx and ocs. Default format is transport_name.hwaddress and can be generated manually or via iscsiadm -m iface</td>
    </tr>
    <tr>
      <td>[libvirt] quobyte_client_cfg = None</td>
      <td>(StrOpt) Path to a Quobyte Client configuration file.</td>
    </tr>
    <tr>
      <td>[libvirt] quobyte_mount_point_base = $state_path/mnt</td>
      <td>(StrOpt) Directory where the Quobyte volume is mounted on the compute node</td>
    </tr>
    <tr>
      <td>[libvirt] smbfs_mount_options = </td>
      <td>(StrOpt) Mount options passed to the SMBFS client. See mount.cifs man page for details. Note that the libvirt-qemu uid and gid must be specified.</td>
    </tr>
    <tr>
      <td>[libvirt] smbfs_mount_point_base = $state_path/mnt</td>
      <td>(StrOpt) Directory where the SMBFS shares are mounted on the compute node</td>
    </tr>
    <tr>
      <td>[oslo_concurrency] disable_process_locking = False</td>
      <td>(BoolOpt) Enables or disables inter-process locks.</td>
    </tr>
    <tr>
      <td>[oslo_concurrency] lock_path = None</td>
      <td>(StrOpt) Directory to use for lock files.  For security, the specified directory should only be writable by the user running the processes that need locking. Defaults to environment variable OSLO_LOCK_PATH. If external locks are used, a lock path must be set.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] allow_insecure_clients = False</td>
      <td>(BoolOpt) Accept clients using either SSL or plain TCP</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] broadcast_prefix = broadcast</td>
      <td>(StrOpt) address prefix used when broadcasting to all servers</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] container_name = None</td>
      <td>(StrOpt) Name for the AMQP container</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] group_request_prefix = unicast</td>
      <td>(StrOpt) address prefix when sending to any server in group</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] idle_timeout = 0</td>
      <td>(IntOpt) Timeout for inactive connections (in seconds)</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] server_request_prefix = exclusive</td>
      <td>(StrOpt) address prefix used when sending to a specific server</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_ca_file = </td>
      <td>(StrOpt) CA certificate PEM file for verifing server certificate</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_cert_file = </td>
      <td>(StrOpt) Identifying certificate PEM file to present to clients</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_key_file = </td>
      <td>(StrOpt) Private key PEM file used to sign cert_file certificate</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] ssl_key_password = None</td>
      <td>(StrOpt) Password for decrypting ssl_key_file (if encrypted)</td>
    </tr>
    <tr>
      <td>[oslo_messaging_amqp] trace = False</td>
      <td>(BoolOpt) Debug: dump AMQP frames to stdout</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] amqp_auto_delete = False</td>
      <td>(BoolOpt) Auto-delete queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] amqp_durable_queues = False</td>
      <td>(BoolOpt) Use durable queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_heartbeat = 60</td>
      <td>(IntOpt) Seconds between connection keepalive heartbeats.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_hostname = localhost</td>
      <td>(StrOpt) Qpid broker hostname.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_hosts = $qpid_hostname:$qpid_port</td>
      <td>(ListOpt) Qpid HA cluster host:port pairs.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_password = </td>
      <td>(StrOpt) Password for Qpid connection.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_port = 5672</td>
      <td>(IntOpt) Qpid broker port.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_protocol = tcp</td>
      <td>(StrOpt) Transport to use, either 'tcp' or 'ssl'.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_receiver_capacity = 1</td>
      <td>(IntOpt) The number of prefetched messages held by receiver.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_sasl_mechanisms = </td>
      <td>(StrOpt) Space separated list of SASL mechanisms to use for auth.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_tcp_nodelay = True</td>
      <td>(BoolOpt) Whether to disable the Nagle algorithm.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_topology_version = 1</td>
      <td>(IntOpt) The qpid topology version to use.  Version 1 is what was originally used by impl_qpid.  Version 2 includes some backwards-incompatible changes that allow broker federation to work.  Users should update to version 2 when they are able to take everything down, as it requires a clean break.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] qpid_username = </td>
      <td>(StrOpt) Username for Qpid connection.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_qpid] rpc_conn_pool_size = 30</td>
      <td>(IntOpt) Size of RPC connection pool.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] amqp_auto_delete = False</td>
      <td>(BoolOpt) Auto-delete queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] amqp_durable_queues = False</td>
      <td>(BoolOpt) Use durable queues in AMQP.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] fake_rabbit = False</td>
      <td>(BoolOpt) Deprecated, use rpc_backend=kombu+memory or rpc_backend=fake</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_reconnect_delay = 1.0</td>
      <td>(FloatOpt) How long to wait before reconnecting in response to an AMQP consumer cancel notification.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_ca_certs = </td>
      <td>(StrOpt) SSL certification authority file (valid only if SSL enabled).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_certfile = </td>
      <td>(StrOpt) SSL cert file (valid only if SSL enabled).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_keyfile = </td>
      <td>(StrOpt) SSL key file (valid only if SSL enabled).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] kombu_ssl_version = </td>
      <td>(StrOpt) SSL version to use (valid only if SSL enabled). Valid values are TLSv1 and SSLv23. SSLv2, SSLv3, TLSv1_1, and TLSv1_2 may be available on some distributions.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_ha_queues = False</td>
      <td>(BoolOpt) Use HA queues in RabbitMQ (x-ha-policy: all). If you change this option, you must wipe the RabbitMQ database.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_host = localhost</td>
      <td>(StrOpt) The RabbitMQ broker address where a single node is used.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_hosts = $rabbit_host:$rabbit_port</td>
      <td>(ListOpt) RabbitMQ HA cluster host:port pairs.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_login_method = AMQPLAIN</td>
      <td>(StrOpt) The RabbitMQ login method.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_max_retries = 0</td>
      <td>(IntOpt) Maximum number of RabbitMQ connection retries. Default is 0 (infinite retry count).</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_password = guest</td>
      <td>(StrOpt) The RabbitMQ password.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_port = 5672</td>
      <td>(IntOpt) The RabbitMQ broker port where a single node is used.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_retry_backoff = 2</td>
      <td>(IntOpt) How long to backoff for between retries when connecting to RabbitMQ.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_retry_interval = 1</td>
      <td>(IntOpt) How frequently to retry connecting with RabbitMQ.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_use_ssl = False</td>
      <td>(BoolOpt) Connect over SSL for RabbitMQ.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_userid = guest</td>
      <td>(StrOpt) The RabbitMQ userid.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rabbit_virtual_host = /</td>
      <td>(StrOpt) The RabbitMQ virtual host.</td>
    </tr>
    <tr>
      <td>[oslo_messaging_rabbit] rpc_conn_pool_size = 30</td>
      <td>(IntOpt) Size of RPC connection pool.</td>
    </tr>
    <tr>
      <td>[serial_console] serialproxy_host = 0.0.0.0</td>
      <td>(StrOpt) Host on which to listen for incoming requests</td>
    </tr>
    <tr>
      <td>[serial_console] serialproxy_port = 6083</td>
      <td>(IntOpt) Port on which to listen for incoming requests</td>
    </tr>
    <tr>
      <td>[vmware] cache_prefix = None</td>
      <td>(StrOpt) The prefix for Where cached images are stored. This is NOT the full path - just a folder prefix. This should only be used when a datastore cache should be shared between compute nodes. Note: this should only be used when the compute nodes have a shared file system.</td>
    </tr>
    <tr>
      <td>[vmware] pbm_default_policy = None</td>
      <td>(StrOpt) The PBM default policy. If pbm_wsdl_location is set and there is no defined storage policy for the specific request then this policy will be used.</td>
    </tr>
    <tr>
      <td>[vmware] pbm_enabled = False</td>
      <td>(BoolOpt) The PBM status.</td>
    </tr>
    <tr>
      <td>[vmware] pbm_wsdl_location = None</td>
      <td>(StrOpt) PBM service WSDL file location URL. e.g. file:///opt/SDK/spbm/wsdl/pbmService.wsdl Not setting this will disable storage policy based placement of instances.</td>
    </tr>
    <tr>
      <td>[workarounds] disable_libvirt_livesnapshot = True</td>
      <td>(BoolOpt) When using libvirt 1.2.2 fails live snapshots intermittently under load.  This config option provides mechanism to disable livesnapshot while this is resolved.  See https://bugs.launchpad.net/nova/+bug/1334398</td>
    </tr>
    <tr>
      <td>[workarounds] disable_rootwrap = False</td>
      <td>(BoolOpt) This option allows a fallback to sudo for performance reasons. For example see https://bugs.launchpad.net/nova/+bug/1415106</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>选项</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>[DEFAULT] client_socket_timeout</td>
      <td>0</td>
      <td>900</td>
    </tr>
    <tr>
      <td>[DEFAULT] ec2_path</td>
      <td>/services/Cloud</td>
      <td>/</td>
    </tr>
    <tr>
      <td>[DEFAULT] multi_instance_display_name_template</td>
      <td>%(name)s-%(uuid)s</td>
      <td>%(name)s-%(count)d</td>
    </tr>
    <tr>
      <td>[DEFAULT] rpc_zmq_matchmaker</td>
      <td>oslo.messaging._drivers.matchmaker.MatchMakerLocalhost</td>
      <td>oslo_messaging._drivers.matchmaker.MatchMakerLocalhost</td>
    </tr>
    <tr>
      <td>[cinder] catalog_info</td>
      <td>volume:cinder:publicURL</td>
      <td>volumev2:cinderv2:publicURL</td>
    </tr>
    <tr>
      <td>[libvirt] volume_drivers</td>
      <td>iscsi=nova.virt.libvirt.volume.LibvirtISCSIVolumeDriver, iser=nova.virt.libvirt.volume.LibvirtISERVolumeDriver, local=nova.virt.libvirt.volume.LibvirtVolumeDriver, fake=nova.virt.libvirt.volume.LibvirtFakeVolumeDriver, rbd=nova.virt.libvirt.volume.LibvirtNetVolumeDriver, sheepdog=nova.virt.libvirt.volume.LibvirtNetVolumeDriver, nfs=nova.virt.libvirt.volume.LibvirtNFSVolumeDriver, aoe=nova.virt.libvirt.volume.LibvirtAOEVolumeDriver, glusterfs=nova.virt.libvirt.volume.LibvirtGlusterfsVolumeDriver, fibre_channel=nova.virt.libvirt.volume.LibvirtFibreChannelVolumeDriver, scality=nova.virt.libvirt.volume.LibvirtScalityVolumeDriver, gpfs=nova.virt.libvirt.volume.LibvirtGPFSVolumeDriver</td>
      <td>iscsi=nova.virt.libvirt.volume.LibvirtISCSIVolumeDriver, iser=nova.virt.libvirt.volume.LibvirtISERVolumeDriver, local=nova.virt.libvirt.volume.LibvirtVolumeDriver, fake=nova.virt.libvirt.volume.LibvirtFakeVolumeDriver, rbd=nova.virt.libvirt.volume.LibvirtNetVolumeDriver, sheepdog=nova.virt.libvirt.volume.LibvirtNetVolumeDriver, nfs=nova.virt.libvirt.volume.LibvirtNFSVolumeDriver, smbfs=nova.virt.libvirt.volume.LibvirtSMBFSVolumeDriver, aoe=nova.virt.libvirt.volume.LibvirtAOEVolumeDriver, glusterfs=nova.virt.libvirt.volume.LibvirtGlusterfsVolumeDriver, fibre_channel=nova.virt.libvirt.volume.LibvirtFibreChannelVolumeDriver, scality=nova.virt.libvirt.volume.LibvirtScalityVolumeDriver, gpfs=nova.virt.libvirt.volume.LibvirtGPFSVolumeDriver, quobyte=nova.virt.libvirt.volume.LibvirtQuobyteVolumeDriver</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>[cinder] http_timeout</td>
      <td>[cinder] timeout</td>
    </tr>
    <tr>
      <td>[cinder] api_insecure</td>
      <td>[cinder] insecure</td>
    </tr>
    <tr>
      <td>[cinder] ca_certificates_file</td>
      <td>[cinder] cafile</td>
    </tr>
  </table>
</section>