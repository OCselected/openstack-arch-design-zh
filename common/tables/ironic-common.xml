<?xml version="1.0" ?><para version="5.0" xml:lang="zh" xmlns="http://docbook.org/ns/docbook">
  <!-- Warning: Do not edit this file. It is automatically
     generated and your changes will be overwritten.
     The tool to do so lives in openstack-doc-tools repository. -->
  <table rules="all" xml:id="config_table_ironic_common">
    <caption>Description of common configuration options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <th>Configuration option = Default value</th>
        <th>描述</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th colspan="2">[DEFAULT]</th>
      </tr>
      <tr>
        <td><option>bindir</option> = <replaceable>/usr/local/bin</replaceable></td>
        <td>(StrOpt) Directory where ironic binaries are installed.</td>
      </tr>
      <tr>
        <td><option>enabled_drivers</option> = <replaceable>pxe_ipmitool</replaceable></td>
        <td>(ListOpt) Specify the list of drivers to load during service initialization. Missing drivers, or drivers which fail to initialize, will prevent the conductor service from starting. The option default is a recommended set of production-oriented drivers. A complete list of drivers present on your system may be found by enumerating the &quot;ironic.drivers&quot; entrypoint. An example may be found in the developer documentation online.</td>
      </tr>
      <tr>
        <td><option>fatal_deprecations</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Enables or disables fatal status of deprecations.</td>
      </tr>
      <tr>
        <td><option>force_raw_images</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Force backing images to raw format.</td>
      </tr>
      <tr>
        <td><option>hash_distribution_replicas</option> = <replaceable>1</replaceable></td>
        <td>(IntOpt) [Experimental Feature] Number of hosts to map onto each hash partition. Setting this to more than one will cause additional conductor services to prepare deployment environments and potentially allow the Ironic cluster to recover more quickly if a conductor instance is terminated.</td>
      </tr>
      <tr>
        <td><option>hash_partition_exponent</option> = <replaceable>5</replaceable></td>
        <td>(IntOpt) Exponent to determine number of hash partitions to use when distributing load across conductors. Larger values will result in more even distribution of load and less load when rebalancing the ring, but more memory usage. Number of partitions per conductor is (2^hash_partition_exponent). This determines the granularity of rebalancing: given 10 hosts, and an exponent of the 2, there are 40 partitions in the ring.A few thousand partitions should make rebalancing smooth in most cases. The default is suitable for up to a few hundred conductors. Too many partitions has a CPU impact.</td>
      </tr>
      <tr>
        <td><option>host</option> = <replaceable>localhost</replaceable></td>
        <td>(StrOpt) Name of this node.  This can be an opaque identifier.  It is not necessarily a hostname, FQDN, or IP address. However, the node name must be valid within an AMQP key, and if using ZeroMQ, a valid hostname, FQDN, or IP address.</td>
      </tr>
      <tr>
        <td><option>isolinux_bin</option> = <replaceable>/usr/lib/syslinux/isolinux.bin</replaceable></td>
        <td>(StrOpt) Path to isolinux binary file.</td>
      </tr>
      <tr>
        <td><option>isolinux_config_template</option> = <replaceable>$pybasedir/common/isolinux_config.template</replaceable></td>
        <td>(StrOpt) Template file for isolinux configuration file.</td>
      </tr>
      <tr>
        <td><option>memcached_servers</option> = <replaceable>无</replaceable></td>
        <td>(ListOpt) Memcached servers or None for in process cache.</td>
      </tr>
      <tr>
        <td><option>my_ip</option> = <replaceable>10.0.0.1</replaceable></td>
        <td>(StrOpt) IP address of this host.</td>
      </tr>
      <tr>
        <td><option>parallel_image_downloads</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Run image downloads and raw format conversions in parallel.</td>
      </tr>
      <tr>
        <td><option>periodic_interval</option> = <replaceable>60</replaceable></td>
        <td>(IntOpt) Seconds between running periodic tasks.</td>
      </tr>
      <tr>
        <td><option>pybasedir</option> = <replaceable>/usr/lib/python/site-packages/ironic/ironic</replaceable></td>
        <td>(StrOpt) Directory where the ironic python module is installed.</td>
      </tr>
      <tr>
        <td><option>rootwrap_config</option> = <replaceable>/etc/ironic/rootwrap.conf</replaceable></td>
        <td>(StrOpt) Path to the rootwrap configuration file to use for running commands as root.</td>
      </tr>
      <tr>
        <td><option>run_external_periodic_tasks</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Some periodic tasks can be run in a separate process. Should we run them here?</td>
      </tr>
      <tr>
        <td><option>state_path</option> = <replaceable>$pybasedir</replaceable></td>
        <td>(StrOpt) Top-level directory for maintaining ironic's state.</td>
      </tr>
      <tr>
        <td><option>tempdir</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Explicitly specify the temporary working directory.</td>
      </tr>
    </tbody>
  </table>
</para>