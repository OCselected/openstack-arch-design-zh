<?xml version="1.0" ?><para version="5.0" xml:lang="zh" xmlns="http://docbook.org/ns/docbook">
  <!-- Warning: Do not edit this file. It is automatically
     generated and your changes will be overwritten.
     The tool to do so lives in openstack-doc-tools repository. -->
  <table rules="all" xml:id="config_table_nova_network">
    <caption>Description of network configuration options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <th>Configuration option = Default value</th>
        <th>描述</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th colspan="2">[DEFAULT]</th>
      </tr>
      <tr>
        <td><option>allow_same_net_traffic</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Whether to allow network traffic from same network</td>
      </tr>
      <tr>
        <td><option>auto_assign_floating_ip</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Autoassigning floating IP to VM</td>
      </tr>
      <tr>
        <td><option>cnt_vpn_clients</option> = <replaceable>0</replaceable></td>
        <td>(IntOpt) Number of addresses reserved for vpn clients</td>
      </tr>
      <tr>
        <td><option>create_unique_mac_address_attempts</option> = <replaceable>5</replaceable></td>
        <td>(IntOpt) Number of attempts to create unique mac address</td>
      </tr>
      <tr>
        <td><option>default_access_ip_network_name</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Name of network to use to set access IPs for instances</td>
      </tr>
      <tr>
        <td><option>default_floating_pool</option> = <replaceable>nova</replaceable></td>
        <td>(StrOpt) Default pool for floating IPs</td>
      </tr>
      <tr>
        <td><option>defer_iptables_apply</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Whether to batch up the application of IPTables rules during a host restart and apply all at the end of the init phase</td>
      </tr>
      <tr>
        <td><option>dhcp_domain</option> = <replaceable>novalocal</replaceable></td>
        <td>(StrOpt) Domain to use for building the hostnames</td>
      </tr>
      <tr>
        <td><option>dhcp_lease_time</option> = <replaceable>86400</replaceable></td>
        <td>(IntOpt) Lifetime of a DHCP lease in seconds</td>
      </tr>
      <tr>
        <td><option>dhcpbridge</option> = <replaceable>$bindir/nova-dhcpbridge</replaceable></td>
        <td>(StrOpt) Location of nova-dhcpbridge</td>
      </tr>
      <tr>
        <td><option>dhcpbridge_flagfile</option> = <replaceable>['/etc/nova/nova-dhcpbridge.conf']</replaceable></td>
        <td>(MultiStrOpt) Location of flagfiles for dhcpbridge</td>
      </tr>
      <tr>
        <td><option>dns_server</option> = <replaceable>[]</replaceable></td>
        <td>(MultiStrOpt) If set, uses specific DNS server for dnsmasq. Can be specified multiple times.</td>
      </tr>
      <tr>
        <td><option>dns_update_periodic_interval</option> = <replaceable>-1</replaceable></td>
        <td>(IntOpt) Number of seconds to wait between runs of updates to DNS entries.</td>
      </tr>
      <tr>
        <td><option>dnsmasq_config_file</option> = <replaceable/></td>
        <td>(StrOpt) Override the default dnsmasq settings with this file</td>
      </tr>
      <tr>
        <td><option>ebtables_exec_attempts</option> = <replaceable>3</replaceable></td>
        <td>(IntOpt) Number of times to retry ebtables commands on failure.</td>
      </tr>
      <tr>
        <td><option>ebtables_retry_interval</option> = <replaceable>1.0</replaceable></td>
        <td>(FloatOpt) Number of seconds to wait between ebtables retries.</td>
      </tr>
      <tr>
        <td><option>firewall_driver</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Firewall driver (defaults to hypervisor specific iptables driver)</td>
      </tr>
      <tr>
        <td><option>fixed_ip_disassociate_timeout</option> = <replaceable>600</replaceable></td>
        <td>(IntOpt) Seconds after which a deallocated IP is disassociated</td>
      </tr>
      <tr>
        <td><option>flat_injected</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Whether to attempt to inject network setup into guest</td>
      </tr>
      <tr>
        <td><option>flat_interface</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) FlatDhcp will bridge into this interface if set</td>
      </tr>
      <tr>
        <td><option>flat_network_bridge</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Bridge for simple network instances</td>
      </tr>
      <tr>
        <td><option>flat_network_dns</option> = <replaceable>8.8.4.4</replaceable></td>
        <td>(StrOpt) DNS server for simple network</td>
      </tr>
      <tr>
        <td><option>floating_ip_dns_manager</option> = <replaceable>nova.network.noop_dns_driver.NoopDNSDriver</replaceable></td>
        <td>(StrOpt) Full class name for the DNS Manager for floating IPs</td>
      </tr>
      <tr>
        <td><option>force_dhcp_release</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) If True, send a dhcp release on instance termination</td>
      </tr>
      <tr>
        <td><option>force_snat_range</option> = <replaceable>[]</replaceable></td>
        <td>(MultiStrOpt) Traffic to this range will always be snatted to the fallback ip, even if it would normally be bridged out of the node. Can be specified multiple times.</td>
      </tr>
      <tr>
        <td><option>forward_bridge_interface</option> = <replaceable>['all']</replaceable></td>
        <td>(MultiStrOpt) An interface that bridges can forward to. If this is set to all then all traffic will be forwarded. Can be specified multiple times.</td>
      </tr>
      <tr>
        <td><option>gateway</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Default IPv4 gateway</td>
      </tr>
      <tr>
        <td><option>injected_network_template</option> = <replaceable>$pybasedir/nova/virt/interfaces.template</replaceable></td>
        <td>(StrOpt) Template file for injected network</td>
      </tr>
      <tr>
        <td><option>instance_dns_domain</option> = <replaceable/></td>
        <td>(StrOpt) Full class name for the DNS Zone for instance IPs</td>
      </tr>
      <tr>
        <td><option>instance_dns_manager</option> = <replaceable>nova.network.noop_dns_driver.NoopDNSDriver</replaceable></td>
        <td>(StrOpt) Full class name for the DNS Manager for instance IPs</td>
      </tr>
      <tr>
        <td><option>iptables_bottom_regex</option> = <replaceable/></td>
        <td>(StrOpt) Regular expression to match iptables rule that should always be on the bottom.</td>
      </tr>
      <tr>
        <td><option>iptables_drop_action</option> = <replaceable>DROP</replaceable></td>
        <td>(StrOpt) The table that iptables to jump to when a packet is to be dropped.</td>
      </tr>
      <tr>
        <td><option>iptables_top_regex</option> = <replaceable/></td>
        <td>(StrOpt) Regular expression to match iptables rule that should always be on the top.</td>
      </tr>
      <tr>
        <td><option>l3_lib</option> = <replaceable>nova.network.l3.LinuxNetL3</replaceable></td>
        <td>(StrOpt) Indicates underlying L3 management library</td>
      </tr>
      <tr>
        <td><option>linuxnet_interface_driver</option> = <replaceable>nova.network.linux_net.LinuxBridgeInterfaceDriver</replaceable></td>
        <td>(StrOpt) Driver used to create ethernet devices.</td>
      </tr>
      <tr>
        <td><option>linuxnet_ovs_integration_bridge</option> = <replaceable>br-int</replaceable></td>
        <td>(StrOpt) Name of Open vSwitch bridge used with linuxnet</td>
      </tr>
      <tr>
        <td><option>multi_host</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Default value for multi_host in networks. Also, if set, some rpc network calls will be sent directly to host.</td>
      </tr>
      <tr>
        <td><option>network_allocate_retries</option> = <replaceable>0</replaceable></td>
        <td>(IntOpt) Number of times to retry network allocation on failures</td>
      </tr>
      <tr>
        <td><option>network_api_class</option> = <replaceable>nova.network.api.API</replaceable></td>
        <td>(StrOpt) The full class name of the network API class to use</td>
      </tr>
      <tr>
        <td><option>network_device_mtu</option> = <replaceable>无</replaceable></td>
        <td>(IntOpt) DEPRECATED: THIS VALUE SHOULD BE SET WHEN CREATING THE NETWORK. MTU setting for network interface.</td>
      </tr>
      <tr>
        <td><option>network_driver</option> = <replaceable>nova.network.linux_net</replaceable></td>
        <td>(StrOpt) Driver to use for network creation</td>
      </tr>
      <tr>
        <td><option>network_manager</option> = <replaceable>nova.network.manager.VlanManager</replaceable></td>
        <td>(StrOpt) Full class name for the Manager for network</td>
      </tr>
      <tr>
        <td><option>network_size</option> = <replaceable>256</replaceable></td>
        <td>(IntOpt) Number of addresses in each private subnet</td>
      </tr>
      <tr>
        <td><option>network_topic</option> = <replaceable>网络</replaceable></td>
        <td>(StrOpt) The topic network nodes listen on</td>
      </tr>
      <tr>
        <td><option>networks_path</option> = <replaceable>$state_path/networks</replaceable></td>
        <td>(StrOpt) Location to keep network config files</td>
      </tr>
      <tr>
        <td><option>num_networks</option> = <replaceable>1</replaceable></td>
        <td>(IntOpt) Number of networks to support</td>
      </tr>
      <tr>
        <td><option>ovs_vsctl_timeout</option> = <replaceable>120</replaceable></td>
        <td>(IntOpt) Amount of time, in seconds, that ovs_vsctl should wait for a response from the database. 0 is to wait forever.</td>
      </tr>
      <tr>
        <td><option>public_interface</option> = <replaceable>eth0</replaceable></td>
        <td>(StrOpt) Interface for public IP addresses</td>
      </tr>
      <tr>
        <td><option>routing_source_ip</option> = <replaceable>$my_ip</replaceable></td>
        <td>(StrOpt) Public IP of network host</td>
      </tr>
      <tr>
        <td><option>security_group_api</option> = <replaceable>nova</replaceable></td>
        <td>(StrOpt) The full class name of the security API class</td>
      </tr>
      <tr>
        <td><option>send_arp_for_ha</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Send gratuitous ARPs for HA setup</td>
      </tr>
      <tr>
        <td><option>send_arp_for_ha_count</option> = <replaceable>3</replaceable></td>
        <td>(IntOpt) Send this many gratuitous ARPs for HA setup</td>
      </tr>
      <tr>
        <td><option>share_dhcp_address</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) DEPRECATED: THIS VALUE SHOULD BE SET WHEN CREATING THE NETWORK. If True in multi_host mode, all compute hosts share the same dhcp address. The same IP address used for DHCP will be added on each nova-network node which is only visible to the vms on the same host.</td>
      </tr>
      <tr>
        <td><option>teardown_unused_network_gateway</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) If True, unused gateway devices (VLAN and bridge) are deleted in VLAN network mode with multi hosted networks</td>
      </tr>
      <tr>
        <td><option>update_dns_entries</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) If True, when a DNS entry must be updated, it sends a fanout cast to all network hosts to update their DNS entries in multi host mode</td>
      </tr>
      <tr>
        <td><option>use_network_dns_servers</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) If set, uses the dns1 and dns2 from the network ref. as dns servers.</td>
      </tr>
      <tr>
        <td><option>use_neutron_default_nets</option> = <replaceable>False</replaceable></td>
        <td>(StrOpt) Control for checking for default networks</td>
      </tr>
      <tr>
        <td><option>use_single_default_gateway</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Use single default gateway. Only first nic of vm will get default gateway from dhcp server</td>
      </tr>
      <tr>
        <td><option>vlan_interface</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) VLANs will bridge into this interface if set</td>
      </tr>
      <tr>
        <td><option>vlan_start</option> = <replaceable>100</replaceable></td>
        <td>(IntOpt) First VLAN for private networks</td>
      </tr>
      <tr>
        <th colspan="2">[vmware]</th>
      </tr>
      <tr>
        <td><option>vlan_interface</option> = <replaceable>vmnic0</replaceable></td>
        <td>(StrOpt) Physical ethernet adapter name for vlan networking</td>
      </tr>
    </tbody>
  </table>
</para>