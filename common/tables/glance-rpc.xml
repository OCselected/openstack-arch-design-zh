<?xml version="1.0" ?><para version="5.0" xml:lang="zh" xmlns="http://docbook.org/ns/docbook">
  <!-- Warning: Do not edit this file. It is automatically
     generated and your changes will be overwritten.
     The tool to do so lives in openstack-doc-tools repository. -->
  <table rules="all" xml:id="config_table_glance_rpc">
    <caption>Description of RPC configuration options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <th>Configuration option = Default value</th>
        <th>描述</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th colspan="2">[DEFAULT]</th>
      </tr>
      <tr>
        <td><option>allowed_rpc_exception_modules</option> = <replaceable>openstack.common.exception, glance.common.exception, exceptions</replaceable></td>
        <td>(ListOpt) Modules of exceptions that are permitted to be recreatedupon receiving exception data from an rpc call.</td>
      </tr>
      <tr>
        <td><option>matchmaker_heartbeat_freq</option> = <replaceable>300</replaceable></td>
        <td>(IntOpt) Heartbeat frequency.</td>
      </tr>
      <tr>
        <td><option>matchmaker_heartbeat_ttl</option> = <replaceable>600</replaceable></td>
        <td>(IntOpt) Heartbeat time-to-live.</td>
      </tr>
      <tr>
        <td><option>rpc_backend</option> = <replaceable>rabbit</replaceable></td>
        <td>(StrOpt) The messaging driver to use, defaults to rabbit. Other drivers include qpid and zmq.</td>
      </tr>
      <tr>
        <td><option>rpc_cast_timeout</option> = <replaceable>30</replaceable></td>
        <td>(IntOpt) Seconds to wait before a cast expires (TTL). Only supported by impl_zmq.</td>
      </tr>
      <tr>
        <td><option>rpc_response_timeout</option> = <replaceable>60</replaceable></td>
        <td>(IntOpt) Seconds to wait for a response from a call.</td>
      </tr>
      <tr>
        <td><option>rpc_thread_pool_size</option> = <replaceable>64</replaceable></td>
        <td>(IntOpt) Size of RPC thread pool.</td>
      </tr>
      <tr>
        <th colspan="2">[oslo_concurrency]</th>
      </tr>
      <tr>
        <td><option>disable_process_locking</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Enables or disables inter-process locks.</td>
      </tr>
      <tr>
        <td><option>lock_path</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Directory to use for lock files.  For security, the specified directory should only be writable by the user running the processes that need locking. Defaults to environment variable OSLO_LOCK_PATH. If external locks are used, a lock path must be set.</td>
      </tr>
      <tr>
        <th colspan="2">[oslo_messaging_amqp]</th>
      </tr>
      <tr>
        <td><option>allow_insecure_clients</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Accept clients using either SSL or plain TCP</td>
      </tr>
      <tr>
        <td><option>broadcast_prefix</option> = <replaceable>broadcast</replaceable></td>
        <td>(StrOpt) address prefix used when broadcasting to all servers</td>
      </tr>
      <tr>
        <td><option>container_name</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Name for the AMQP container</td>
      </tr>
      <tr>
        <td><option>group_request_prefix</option> = <replaceable>unicast</replaceable></td>
        <td>(StrOpt) address prefix when sending to any server in group</td>
      </tr>
      <tr>
        <td><option>idle_timeout</option> = <replaceable>0</replaceable></td>
        <td>(IntOpt) Timeout for inactive connections (in seconds)</td>
      </tr>
      <tr>
        <td><option>server_request_prefix</option> = <replaceable>exclusive</replaceable></td>
        <td>(StrOpt) address prefix used when sending to a specific server</td>
      </tr>
      <tr>
        <td><option>ssl_ca_file</option> = <replaceable/></td>
        <td>(StrOpt) CA certificate PEM file for verifing server certificate</td>
      </tr>
      <tr>
        <td><option>ssl_cert_file</option> = <replaceable/></td>
        <td>(StrOpt) Identifying certificate PEM file to present to clients</td>
      </tr>
      <tr>
        <td><option>ssl_key_file</option> = <replaceable/></td>
        <td>(StrOpt) Private key PEM file used to sign cert_file certificate</td>
      </tr>
      <tr>
        <td><option>ssl_key_password</option> = <replaceable>无</replaceable></td>
        <td>(StrOpt) Password for decrypting ssl_key_file (if encrypted)</td>
      </tr>
      <tr>
        <td><option>trace</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Debug: dump AMQP frames to stdout</td>
      </tr>
      <tr>
        <th colspan="2">[oslo_messaging_qpid]</th>
      </tr>
      <tr>
        <td><option>amqp_auto_delete</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Auto-delete queues in AMQP.</td>
      </tr>
      <tr>
        <td><option>amqp_durable_queues</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Use durable queues in AMQP.</td>
      </tr>
      <tr>
        <td><option>qpid_heartbeat</option> = <replaceable>60</replaceable></td>
        <td>(IntOpt) Seconds between connection keepalive heartbeats.</td>
      </tr>
      <tr>
        <td><option>qpid_hostname</option> = <replaceable>localhost</replaceable></td>
        <td>(StrOpt) Qpid broker hostname.</td>
      </tr>
      <tr>
        <td><option>qpid_hosts</option> = <replaceable>$qpid_hostname:$qpid_port</replaceable></td>
        <td>(ListOpt) Qpid HA cluster host:port pairs.</td>
      </tr>
      <tr>
        <td><option>qpid_password</option> = <replaceable/></td>
        <td>(StrOpt) Password for Qpid connection.</td>
      </tr>
      <tr>
        <td><option>qpid_port</option> = <replaceable>5672</replaceable></td>
        <td>(IntOpt) Qpid broker port.</td>
      </tr>
      <tr>
        <td><option>qpid_protocol</option> = <replaceable>tcp</replaceable></td>
        <td>(StrOpt) Transport to use, either 'tcp' or 'ssl'.</td>
      </tr>
      <tr>
        <td><option>qpid_receiver_capacity</option> = <replaceable>1</replaceable></td>
        <td>(IntOpt) The number of prefetched messages held by receiver.</td>
      </tr>
      <tr>
        <td><option>qpid_sasl_mechanisms</option> = <replaceable/></td>
        <td>(StrOpt) Space separated list of SASL mechanisms to use for auth.</td>
      </tr>
      <tr>
        <td><option>qpid_tcp_nodelay</option> = <replaceable>True</replaceable></td>
        <td>(BoolOpt) Whether to disable the Nagle algorithm.</td>
      </tr>
      <tr>
        <td><option>qpid_topology_version</option> = <replaceable>1</replaceable></td>
        <td>(IntOpt) The qpid topology version to use.  Version 1 is what was originally used by impl_qpid.  Version 2 includes some backwards-incompatible changes that allow broker federation to work.  Users should update to version 2 when they are able to take everything down, as it requires a clean break.</td>
      </tr>
      <tr>
        <td><option>qpid_username</option> = <replaceable/></td>
        <td>(StrOpt) Username for Qpid connection.</td>
      </tr>
      <tr>
        <td><option>rpc_conn_pool_size</option> = <replaceable>30</replaceable></td>
        <td>(IntOpt) Size of RPC connection pool.</td>
      </tr>
      <tr>
        <th colspan="2">[oslo_messaging_rabbit]</th>
      </tr>
      <tr>
        <td><option>amqp_auto_delete</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Auto-delete queues in AMQP.</td>
      </tr>
      <tr>
        <td><option>amqp_durable_queues</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Use durable queues in AMQP.</td>
      </tr>
      <tr>
        <td><option>fake_rabbit</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Deprecated, use rpc_backend=kombu+memory or rpc_backend=fake</td>
      </tr>
      <tr>
        <td><option>kombu_reconnect_delay</option> = <replaceable>1.0</replaceable></td>
        <td>(FloatOpt) How long to wait before reconnecting in response to an AMQP consumer cancel notification.</td>
      </tr>
      <tr>
        <td><option>kombu_ssl_ca_certs</option> = <replaceable/></td>
        <td>(StrOpt) SSL certification authority file (valid only if SSL enabled).</td>
      </tr>
      <tr>
        <td><option>kombu_ssl_certfile</option> = <replaceable/></td>
        <td>(StrOpt) SSL cert file (valid only if SSL enabled).</td>
      </tr>
      <tr>
        <td><option>kombu_ssl_keyfile</option> = <replaceable/></td>
        <td>(StrOpt) SSL key file (valid only if SSL enabled).</td>
      </tr>
      <tr>
        <td><option>kombu_ssl_version</option> = <replaceable/></td>
        <td>(StrOpt) SSL version to use (valid only if SSL enabled). Valid values are TLSv1 and SSLv23. SSLv2, SSLv3, TLSv1_1, and TLSv1_2 may be available on some distributions.</td>
      </tr>
      <tr>
        <td><option>rabbit_ha_queues</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Use HA queues in RabbitMQ (x-ha-policy: all). If you change this option, you must wipe the RabbitMQ database.</td>
      </tr>
      <tr>
        <td><option>rabbit_host</option> = <replaceable>localhost</replaceable></td>
        <td>(StrOpt) The RabbitMQ broker address where a single node is used.</td>
      </tr>
      <tr>
        <td><option>rabbit_hosts</option> = <replaceable>$rabbit_host:$rabbit_port</replaceable></td>
        <td>(ListOpt) RabbitMQ HA cluster host:port pairs.</td>
      </tr>
      <tr>
        <td><option>rabbit_login_method</option> = <replaceable>AMQPLAIN</replaceable></td>
        <td>(StrOpt) The RabbitMQ login method.</td>
      </tr>
      <tr>
        <td><option>rabbit_max_retries</option> = <replaceable>0</replaceable></td>
        <td>(IntOpt) Maximum number of RabbitMQ connection retries. Default is 0 (infinite retry count).</td>
      </tr>
      <tr>
        <td><option>rabbit_password</option> = <replaceable>guest</replaceable></td>
        <td>(StrOpt) The RabbitMQ password.</td>
      </tr>
      <tr>
        <td><option>rabbit_port</option> = <replaceable>5672</replaceable></td>
        <td>(IntOpt) The RabbitMQ broker port where a single node is used.</td>
      </tr>
      <tr>
        <td><option>rabbit_retry_backoff</option> = <replaceable>2</replaceable></td>
        <td>(IntOpt) How long to backoff for between retries when connecting to RabbitMQ.</td>
      </tr>
      <tr>
        <td><option>rabbit_retry_interval</option> = <replaceable>1</replaceable></td>
        <td>(IntOpt) How frequently to retry connecting with RabbitMQ.</td>
      </tr>
      <tr>
        <td><option>rabbit_use_ssl</option> = <replaceable>False</replaceable></td>
        <td>(BoolOpt) Connect over SSL for RabbitMQ.</td>
      </tr>
      <tr>
        <td><option>rabbit_userid</option> = <replaceable>guest</replaceable></td>
        <td>(StrOpt) The RabbitMQ userid.</td>
      </tr>
      <tr>
        <td><option>rabbit_virtual_host</option> = <replaceable>/</replaceable></td>
        <td>(StrOpt) The RabbitMQ virtual host.</td>
      </tr>
      <tr>
        <td><option>rpc_conn_pool_size</option> = <replaceable>30</replaceable></td>
        <td>(IntOpt) Size of RPC connection pool.</td>
      </tr>
    </tbody>
  </table>
</para>